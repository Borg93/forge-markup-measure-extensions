{"version":3,"sources":["webpack://Autodesk.Extensions.[name]/webpack/bootstrap","webpack://Autodesk.Extensions.[name]//Users/michaelbeale/node_modules/css-loader/dist/runtime/api.js","webpack://Autodesk.Extensions.[name]//Users/michaelbeale/node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js","webpack://Autodesk.Extensions.[name]/./thirdparty/canvg/canvg.js","webpack://Autodesk.Extensions.[name]/./thirdparty/canvg/rgbcolor.js","webpack://Autodesk.Extensions.[name]/./thirdparty/resize-observer-polyfill/ResizeObserver.min.js","webpack://Autodesk.Extensions.[name]/./Markup/core/Markups.css?30d5","webpack://Autodesk.Extensions.[name]/./Markup/core/Markups.css","webpack://Autodesk.Extensions.[name]/./Markup/gui/MarkupsGui.css?1a5c","webpack://Autodesk.Extensions.[name]/./Markup/gui/MarkupsGui.css","webpack://Autodesk.Extensions.[name]/./Markup/core/MarkupTypes.js","webpack://Autodesk.Extensions.[name]/./Markup/core/edit-actions/EditAction.js","webpack://Autodesk.Extensions.[name]/./Markup/core/StyleUtils.js","webpack://Autodesk.Extensions.[name]/./Markup/core/MarkupEvents.js","webpack://Autodesk.Extensions.[name]/./Markup/core/Markup.js","webpack://Autodesk.Extensions.[name]/./Markup/core/edit-actions/SetStyle.js","webpack://Autodesk.Extensions.[name]/./Markup/core/edit-modes/EditMode.js","webpack://Autodesk.Extensions.[name]/./Markup/core/edit-actions/DeleteArrow.js","webpack://Autodesk.Extensions.[name]/./Markup/core/edit-actions/SetArrow.js","webpack://Autodesk.Extensions.[name]/./Markup/core/edit-modes/EditModeArrow.js","webpack://Autodesk.Extensions.[name]/./Markup/core/MarkupArrow.js","webpack://Autodesk.Extensions.[name]/./Markup/core/edit-actions/CreateArrow.js","webpack://Autodesk.Extensions.[name]/./Markup/core/edit-actions/DeleteRectangle.js","webpack://Autodesk.Extensions.[name]/./Markup/core/edit-actions/SetRectangle.js","webpack://Autodesk.Extensions.[name]/./Markup/core/edit-modes/EditModeRectangle.js","webpack://Autodesk.Extensions.[name]/./Markup/core/MarkupRectangle.js","webpack://Autodesk.Extensions.[name]/./Markup/core/edit-actions/CreateRectangle.js","webpack://Autodesk.Extensions.[name]/./Markup/core/edit-actions/DeleteText.js","webpack://Autodesk.Extensions.[name]/./Markup/core/edit-actions/SetCallout.js","webpack://Autodesk.Extensions.[name]/./Markup/core/edit-actions/SetSize.js","webpack://Autodesk.Extensions.[name]/./Markup/core/edit-modes/EditorTextAutosize.js","webpack://Autodesk.Extensions.[name]/./Markup/core/DomElementStyle.js","webpack://Autodesk.Extensions.[name]/./Markup/core/edit-modes/EditorTextInput.js","webpack://Autodesk.Extensions.[name]/./Markup/core/edit-modes/EditModeCallout.js","webpack://Autodesk.Extensions.[name]/./Markup/core/MarkupCallout.js","webpack://Autodesk.Extensions.[name]/./Markup/core/edit-actions/CreateCallout.js","webpack://Autodesk.Extensions.[name]/./Markup/core/edit-actions/DeleteCallout.js","webpack://Autodesk.Extensions.[name]/./Markup/core/edit-actions/SetText.js","webpack://Autodesk.Extensions.[name]/./Markup/core/edit-modes/EditModeText.js","webpack://Autodesk.Extensions.[name]/./Markup/core/MarkupText.js","webpack://Autodesk.Extensions.[name]/./Markup/core/edit-actions/CreateText.js","webpack://Autodesk.Extensions.[name]/./Markup/core/edit-actions/DeleteCircle.js","webpack://Autodesk.Extensions.[name]/./Markup/core/edit-actions/SetCircle.js","webpack://Autodesk.Extensions.[name]/./Markup/core/edit-modes/EditModeCircle.js","webpack://Autodesk.Extensions.[name]/./Markup/core/MarkupCircle.js","webpack://Autodesk.Extensions.[name]/./Markup/core/edit-actions/CreateCircle.js","webpack://Autodesk.Extensions.[name]/./Markup/core/edit-actions/DeleteCloud.js","webpack://Autodesk.Extensions.[name]/./Markup/core/edit-actions/SetCloud.js","webpack://Autodesk.Extensions.[name]/./Markup/core/edit-modes/EditModeCloud.js","webpack://Autodesk.Extensions.[name]/./Markup/core/MarkupCloud.js","webpack://Autodesk.Extensions.[name]/./Markup/core/edit-actions/CreateCloud.js","webpack://Autodesk.Extensions.[name]/./Markup/core/MarkupPen.js","webpack://Autodesk.Extensions.[name]/./Markup/core/edit-modes/EditModePen.js","webpack://Autodesk.Extensions.[name]/./Markup/core/edit-actions/DeleteFreehand.js","webpack://Autodesk.Extensions.[name]/./Markup/core/edit-actions/SetFreehand.js","webpack://Autodesk.Extensions.[name]/./Markup/core/edit-modes/EditModeFreehand.js","webpack://Autodesk.Extensions.[name]/./Markup/core/MarkupFreehand.js","webpack://Autodesk.Extensions.[name]/./Markup/core/edit-actions/CreateFreehand.js","webpack://Autodesk.Extensions.[name]/./Markup/core/edit-actions/DeletePolyline.js","webpack://Autodesk.Extensions.[name]/./Markup/core/edit-actions/SetPolyline.js","webpack://Autodesk.Extensions.[name]/./Markup/core/edit-modes/EditModePolyline.js","webpack://Autodesk.Extensions.[name]/./Markup/core/MarkupPolyLine.js","webpack://Autodesk.Extensions.[name]/./Markup/core/edit-actions/CreatePolyline.js","webpack://Autodesk.Extensions.[name]/./Markup/core/edit-actions/DeletePolycloud.js","webpack://Autodesk.Extensions.[name]/./Markup/core/edit-actions/SetPolycloud.js","webpack://Autodesk.Extensions.[name]/./Markup/core/edit-modes/EditModePolycloud.js","webpack://Autodesk.Extensions.[name]/./Markup/core/MarkupPolycloud.js","webpack://Autodesk.Extensions.[name]/./Markup/core/edit-actions/CreatePolycloud.js","webpack://Autodesk.Extensions.[name]/./Markup/core/edit-actions/DeleteHighlight.js","webpack://Autodesk.Extensions.[name]/./Markup/core/edit-actions/SetHighlight.js","webpack://Autodesk.Extensions.[name]/./Markup/core/edit-modes/EditModeHighlight.js","webpack://Autodesk.Extensions.[name]/./Markup/core/MarkupHighlight.js","webpack://Autodesk.Extensions.[name]/./Markup/core/edit-actions/CreateHighlight.js","webpack://Autodesk.Extensions.[name]/./Markup/core/edit-actions/DeleteDimension.js","webpack://Autodesk.Extensions.[name]/./Markup/core/edit-actions/SetDimension.js","webpack://Autodesk.Extensions.[name]/./Markup/core/edit-modes/EditModeDimension.js","webpack://Autodesk.Extensions.[name]/./Markup/core/MarkupDimension.js","webpack://Autodesk.Extensions.[name]/./Markup/core/edit-actions/CreateDimension.js","webpack://Autodesk.Extensions.[name]/./Markup/core/MarkupsCoreUtils.js","webpack://Autodesk.Extensions.[name]/./Markup/core/edit-actions/EditActionGroup.js","webpack://Autodesk.Extensions.[name]/./Markup/core/edit-actions/EditActionManager.js","webpack://Autodesk.Extensions.[name]/./Markup/core/edit-actions/CloneMarkup.js","webpack://Autodesk.Extensions.[name]/./Markup/core/edit-clipboard/Clipboard.js","webpack://Autodesk.Extensions.[name]/./Markup/core/edit-input/InputHandler.js","webpack://Autodesk.Extensions.[name]/./Markup/core/edit-actions/SetPosition.js","webpack://Autodesk.Extensions.[name]/./Markup/core/edit-actions/SetRotation.js","webpack://Autodesk.Extensions.[name]/./Markup/core/EditFrame.js","webpack://Autodesk.Extensions.[name]/./Markup/core/MarkupTool.js","webpack://Autodesk.Extensions.[name]/./Markup/core/EditModeManager.js","webpack://Autodesk.Extensions.[name]/./Markup/core/edit-modes/BuiltinEditModes.js","webpack://Autodesk.Extensions.[name]/./Markup/core/MarkupsCore.js","webpack://Autodesk.Extensions.[name]/./Markup/gui/MarkupsGui.js","webpack://Autodesk.Extensions.[name]/./Markup/Markup.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","useSourceMap","list","toString","this","map","item","content","cssMapping","btoa","sourceMapping","sourceMap","base64","unescape","encodeURIComponent","JSON","stringify","data","concat","sourceURLs","sources","source","sourceRoot","join","cssWithMappingToString","mediaQuery","alreadyImportedModules","length","id","_i","push","memo","stylesInDom","isOldIE","Boolean","window","document","all","atob","getTarget","target","styleTarget","querySelector","HTMLIFrameElement","contentDocument","head","e","listToStyles","options","styles","newStyles","base","part","css","media","parts","addStylesToDom","domStyle","j","refs","addStyle","insertStyleElement","style","createElement","attributes","nonce","nc","keys","forEach","setAttribute","insert","Error","appendChild","textStore","replaceText","index","replacement","filter","applyToSingletonTag","remove","obj","styleSheet","cssText","cssNode","createTextNode","childNodes","removeChild","insertBefore","singleton","singletonCounter","update","styleIndex","firstChild","parentNode","removeStyleElement","newObj","newList","mayRemove","_domStyle","rgbcolor","stackblurCanvas","canvas","windowEnv","nodeEnv","DOMParser","doc","defaultClientWidth","defaultClientHeight","createCanvas","width","height","matchesSelector","canvg","opts","svg","FRAMERATE","MAX_VIRTUAL_PIXELS","rootEmSize","emSize","log","console","msg","init","ctx","uniqueId","UniqueId","Definitions","Styles","StylesSpecificity","Animations","Images","ViewPort","viewPorts","Clear","SetCurrent","RemoveCurrent","pop","Current","ComputeSize","Math","sqrt","pow","ImagesLoaded","loaded","trim","replace","compressSpaces","ajax","url","AJAX","XMLHttpRequest","ActiveXObject","open","send","responseText","parseXml","xml","Windows","Data","Xml","xmlDoc","Dom","XmlDocument","settings","XmlLoadSettings","prohibitDtd","loadXml","async","loadXML","parser","xmldom","parseFromString","Property","getValue","hasValue","numValue","parseFloat","match","valueOrDefault","def","numValueOrDefault","addOpacity","opacityProp","newValue","color","ok","g","b","getDefinition","isUrlDefinition","indexOf","getFillStyleDefinition","createGradient","createPattern","getHrefAttribute","pt","attribute","getDPI","getREM","getEM","getUnits","isPixels","toPixels","viewPort","processPercent","toMilliseconds","toRadians","PI","textBaselineMapping","baseline","before-edge","text-before-edge","middle","central","after-edge","text-after-edge","ideographic","alphabetic","hanging","mathematical","toTextBaseline","Font","Variants","Weights","CreateFont","fontStyle","fontVariant","fontWeight","fontSize","fontFamily","inherit","f","Parse","font","that","split","set","ff","ToNumberArray","a","Point","x","y","angleTo","atan2","applyTransform","v","xp","yp","CreatePoint","CreatePath","path","BoundingBox","x1","y1","x2","y2","Number","NaN","addPoint","isNaN","addX","addY","addBoundingBox","bb","addQuadraticCurve","p0x","p0y","p1x","p1y","p2x","p2y","cp1x","cp1y","cp2x","cp2y","addBezierCurve","p3x","p3y","p0","p1","p2","p3","b2ac","t1","t2","isPointInBox","Transform","Type","translate","apply","unapply","applyToPoint","rotate","angle","cx","cy","cos","sin","scale","matrix","transform","det","SkewBase","skewX","tan","skewY","transforms","type","transformType","AspectRatio","aspectRatio","desiredWidth","desiredHeight","minX","minY","refX","refY","align","meetOrSlice","scaleX","scaleY","scaleMin","min","scaleMax","max","Element","EmptyProperty","ElementBase","node","stylesSpecificity","children","createIfNotExists","skipAncestors","parent","ps","render","save","mask","setContext","renderChildren","clearContext","restore","addChild","childNode","child","CreateElement","addStylesFromStyleDefinition","selector","specificity","existingSpecificity","allUppercase","RegExp","normalizeAttributeName","test","toLowerCase","nodeType","nodeName","captureTextNodes","text","textContent","tspan","RenderedElementBase","calculateOpacity","opacity","el","opacityStyle","fromMeasure","fs","fillStyle","strokeStyle","newLineWidth","lineWidth","lineCap","lineJoin","miterLimit","paintOrder","gaps","setLineDash","webkitLineDash","mozDash","offset","lineDashOffset","webkitLineDashOffset","mozDashOffset","currentFontSize","clip","globalAlpha","PathElementBase","beginPath","Mouse","checkPath","fill","stroke","markers","getMarkers","marker","getBoundingBox","baseClearContext","baseSetContext","getComputedStyle","getPropertyValue","root","moveTo","lineTo","closePath","viewBox","rect","rx","ry","KAPPA","bezierCurveTo","circle","arc","ellipse","line","getPoints","points","polyline","polygon","basePath","PathParser","tokens","reset","command","previousCommand","start","control","current","angles","isEnd","isCommandOrEnd","isRelativeCommand","getToken","getScalar","nextCommand","getPoint","makeAbsolute","getAsControlPoint","getAsCurrentPoint","getReflectedControlPoint","addMarker","from","priorTo","addMarkerAngle","getMarkerPoints","getMarkerAngles","pp","newP","curr","cntrl","cp","quadraticCurveTo","xAxisRotation","largeArcFlag","sweepFlag","currp","cpp","centp","u","acos","a1","ad","dir","ah","halfWay","sx","sy","pattern","tempSvg","cctx","getContext","baseRender","point","defs","GradientBase","stops","getGradient","gradientUnits","attributesToInherit","inheritStopContainer","stopsContainer","attributeToInherit","element","parentOpacityProp","addParentOpacity","addColorStop","rootView","group","tempCtx","linearGradient","createLinearGradient","radialGradient","fx","fy","createRadialGradient","stop","stopColor","AnimateBase","duration","begin","maxDuration","getProperty","attributeType","attributeName","initialValue","initialUnits","removed","calcValue","delta","frozen","animationFrozen","animationFrozenValue","updated","to","values","progress","ret","lb","floor","ub","ceil","animate","animateColor","parseInt","animateTransform","horizAdvX","isRTL","isArabic","fontFace","missingGlyph","glyphs","arabicForm","unicode","fontface","ascent","descent","unitsPerEm","missingglyph","glyph","textBaseline","initializeCoordinates","getAnchorDelta","childBB","getChildBoundingBox","renderChild","startI","textAnchor","measureTextRecursive","adjustChildCoordinates","textParent","measureText","TextElementBase","getGlyph","customFont","strokeText","getText","fillText","reverse","dx","lw","measure","textToMeasure","tref","hasText","baseRenderChildren","checkBoundingBox","onclick","onmousemove","cursor","image","href","isSvg","img","crossOrigin","self","onload","onerror","src","drawSvg","undefined","complete","drawImage","symbol","cssDefs","cssDef","cssClasses","cssProps","cssClass","props","k","prop","substr","getSelectorSpecificity","srcs","urlStart","urlEnd","fonts","getElementsByTagName","use","elementTransform","oldParent","cMask","maskCtx","globalCompositeOperation","fillRect","clipPath","hasContext2D","CanvasRenderingContext2D","oldBeginPath","oldClosePath","px","py","efd","extraFilterDistance","feDropShadow","feMorphology","feComposite","feColorMatrix","m1","m2","m3","imGet","rgba","imSet","val","mi","srcData","getImageData","clearRect","putImageData","feGaussianBlur","blurRadius","canvasRGBA","display","body","title","desc","MISSING","className","load","loadXmlDoc","dom","mapXY","offsetLeft","offsetTop","offsetParent","scrollX","scrollY","clientX","event","clientY","documentElement","isFirstRender","draw","clientWidth","clientHeight","cWidth","cHeight","xRatio","yRatio","waitingForImages","intervalID","setInterval","needUpdate","hasEvents","needAnimationUpdate","runEvents","clearInterval","events","run","eventElements","isPointInPath","build","getElementById","svgTags","querySelectorAll","svgTag","getBoundingClientRect","div","innerHTML","matches","webkitMatchesSelector","mozMatchesSelector","msMatchesSelector","oMatchesSelector","jQuery","Zepto","$","is","Sizzle","attributeRegex","idRegex","classRegex","pseudoElementRegex","pseudoClassWithBracketsRegex","pseudoClassRegex","elementRegex","typeCount","findMatch","regex","dy","dw","dh","cOpts","ignoreMouse","ignoreAnimation","ignoreDimensions","ignoreClear","offsetX","offsetY","scaleWidth","scaleHeight","fn","factory","__WEBPACK_AMD_DEFINE_RESULT__","global","RGBColor","color_string","charAt","simple_colors","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dodgerblue","feldspar","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgrey","lightgreen","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslateblue","lightslategray","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","snow","springgreen","steelblue","teal","thistle","tomato","turquoise","violet","violetred","wheat","white","whitesmoke","yellow","yellowgreen","color_defs","re","example","process","bits","processor","exec","channels","toRGB","toHex","getHelpXML","examples","Array","sc","list_item","list_color","example_div","list_item_value","Map","some","__entries__","size","configurable","delete","splice","has","clear","defineProperties","Function","requestAnimationFrame","setTimeout","Date","now","MutationObserver","connected_","mutationEventsAdded_","mutationsObserver_","observers_","onTransitionEnd_","refresh","h","addObserver","connect_","removeObserver","disconnect_","updateObservers_","gatherActive","hasActive","broadcastActive","addEventListener","observe","childList","characterData","subtree","removeEventListener","disconnect","propertyName","getInstance","instance_","writable","ownerDocument","defaultView","_","arguments","reduce","SVGGraphicsElement","SVGElement","getBBox","left","right","top","bottom","boxSizing","round","abs","broadcastWidth","broadcastHeight","contentRect_","isActive","broadcastRect","DOMRectReadOnly","contentRect","activeObservations_","observations_","TypeError","callback_","controller_","callbackCtx_","unobserve","clearActive","WeakMap","w","ResizeObserver","define","amd","locals","MARKUP_TYPE_ARROW","MARKUP_TYPE_TEXT","MARKUP_TYPE_RECTANGLE","MARKUP_TYPE_CIRCLE","MARKUP_TYPE_CLOUD","MARKUP_TYPE_FREEHAND","MARKUP_TYPE_HIGHLIGHT","MARKUP_TYPE_POLYLINE","MARKUP_TYPE_POLYCLOUD","MARKUP_TYPE_CALLOUT","MARKUP_TYPE_DIMENSION","EditAction","editor","targetId","addToHistory","selectOnExecution","execute","actionManager","redo","undo","merge","action","isIdentity","createStyle","defaults","getStyleDefaultValues","default","copyStyle","destination","isStyleEqual","cloneStyle","clone","getFontSizes","normalWidth","getOpacities","defaultTransparent","normaStrokeWidth","getStrokeWidth","normaFontWidth","getFontWidth","EVENT_EDITMODE_CHANGED","EVENT_EDITMODE_ENTER","EVENT_EDITMODE_LEAVE","EVENT_MARKUP_SELECTED","EVENT_MARKUP_DRAGGING","EVENT_MARKUP_ENTER_EDITION","EVENT_MARKUP_CANCEL_EDITION","EVENT_MARKUP_DELETE_EDITION","EVENT_HISTORY_CHANGED","EVENT_EDITMODE_CREATION_BEGIN","EVENT_EDITMODE_CREATION_END","EVENT_MARKUP_DESELECT","EVENT_EDITFRAME_EDITION_START","EVENT_EDITFRAME_EDITION_END","av","Autodesk","Viewing","Markup","styleAttributes","viewer","setGlobalManager","globalManager","position","rotation","getDefaultStyle","highlightColor","constraintWidth","constraintHeight","constraintRotation","minWidth","minHeight","highlighted","selected","checkLineSegment","checkPolygon","renderToCanvasX","renderToCanvas","addTraitEventDispatcher","GlobalManagerMixin","proto","SetStyle","markup","newStyle","oldStyle","getStyle","destroy","unselect","setParent","shape","__proto__","overrides","getCloneOverrides","member","cloneNode","GlobalManager","parse","cloneShape","hitarea","bindDomEvents","hammer","listeners","select","updateStyle","dispatchEvent","highlight","interactionsDisabled","setStyle","edit","cancel","deleteMarkup","getEditMode","warn","getClientPosition","positionFromMarkupsToClient","getClientSize","sizeFromMarkupsToClient","getBoundingRect","setRotation","parentRect","impl","getCanvasBoundingClientRect","boundRect","strokeWidth","getRotation","setPosition","setSize","isWidthConstrained","isHeightConstrained","isRotationConstrained","setMinWidth","setMinHeight","getMinWidth","getMinHeight","disableInteractions","disable","setStrokeWidth","constrainsToBounds","bounds","onMouseDown","editFrame","startDrag","generatePoint3d","idTarget","generateBoundingPolygon","checkLineSegmentAux","point2d","point3d","clientToWorld","xVertices","yVertices","midAB","THREE","Vector2","multiplyScalar","midAC","midDB","midDC","center","add","checkPolygonAux","generateBoundingBox","boundingBox","vertexCount","bbX0","POSITIVE_INFINITY","bbY0","bbX1","NEGATIVE_INFINITY","bbY1","bbX","bbY","halfSize","lt","Vector3","rt","rb","Matrix4","makeTranslation","makeRotationZ","multiply","applyMatrix4","Float32Array","setMetadata","setMouseDisabledWhenTouching","isFirst","onMouseDownBinded","isFinal","_this","isTouchDevice","Hammer","Manager","recognizers","GestureRecognizers","singletap","handlePointerEventMouse","inputClass","isIE11","PointerEventInput","TouchInput","onSingleTapBinded","onHammerInputBinded","on","onMouseOutBinded","onMouseOverBinded","callback","getPath","getTransform","radiansToDegrees","constructor","SetStyle_proto","EditMode","selectedMarkup","dragging","draggingAnnotationIniPosition","draggingMouseIniPosition","initialX","initialY","minSize","creating","CREATION_METHOD_DRAG","CREATION_METHOD_CLICK","CREATION_METHOD_CLICKS","creationMethod","getMarkup","EditMode_proto","DeleteArrow","arrow","createArrow","CreateArrow","tail","removeTraitEventDispatcher","fireEv","selectedId","setMarkup","markupId","creationBegin","creationEnd","isCancelling","isMinSizeValid","creationCancel","finishDragging","closeActionGroup","creationCancelled","cancelActionGroup","setSelection","bringToFront","isTextInputHelperActive","textInputHelper","setEditFrame","getSelection","cantUndo","tmp","startDragging","mousePosition","getMousePosition","getFinalMouseDraggingPosition","getBounds","finalX","finalY","input","makeSameXY","maxDelta","sign","notifyAllowNavigation","allows","onMouseMove","onMouseUp","onMouseDoubleClick","onSave","getDraggingPosition","isInsideBounds","useWithSnapping","model","is2d","DeleteArrow_proto","SetArrow","newHead","newTail","oldHead","oldTail","SetArrow_proto","applyState","MeasureCommon","EditModeArrow","EditModeArrow_proto","MarkupArrow","addMarkupMetadata","createMarkupPathSvg","deleteArrow","lineSnapped","snapper","geomType","getGeometryType","SnapType","SNAP_VERTEX","SNAP_EDGE","SNAP_MIDPOINT","SNAP_CIRCLE_CENTER","getEdge","arrowMinSize","positionFromClientToMarkups","constrain","beginActionGroup","arrowVector","lengthSq","normalize","arrowId","getId","final","isSnapped","project","vertices","end","z","parallel","nearestPointInPointToLine","pEnd","pStart","perpendicular","distanceTo","sizeFromClientToMarkups","MarkupArrow_proto","xO","yO","xF","yF","vO","vF","vDir","sub","dot","vFDir","vCenter","strokeColor","composeRGBAString","setAttributeToMarkupSvg","updateMarkupPathSvgHitarea","xo","yo","direction","metadata","String","sizeX","sizeY","sizeYOver3","tailW","headW","spikeOffset","CreateArrow_proto","addMarkup","removeMarkup","DeleteRectangle","rectangle","createRectangle","CreateRectangle","DeleteRectangle_proto","SetRectangle","newPosition","newSize","oldPosition","oldSize","SetRectangle_proto","EditModeRectangle_MeasureCommon","EditModeRectangle","EditModeRectangle_proto","MarkupRectangle","deleteRectangle","pos","clientToMarkups","firstCorner","startZ","MarkupRectangle_proto","fillColor","createRectanglePath","CreateRectangle_proto","DeleteText","createText","CreateText","DeleteText_proto","SetCallout","isFrameUsed","newText","oldText","newIsFrameUsed","oldIsFrameUsed","SetCallout_proto","SetSize","newWidth","oldWidth","newHeight","oldHeight","callout","SetSize_proto","createEvent","Event","bubbles","evt","getGlobal","initEvent","EditorTextAutosize_assign","ta","heightOffset","cachedHeight","changeOverflow","offsetWidth","overflow","resize","originalHeight","overflows","arr","scrollTop","getParentOverflows","_document","getDocument","docTop","endHeight","scrollHeight","_window","getWindow","styleHeight","computed","actualHeight","offsetHeight","err","pageResize","removeWindowEventListener","overflowX","wordWrap","addWindowEventListener","paddingTop","paddingBottom","borderTopWidth","borderBottomWidth","methods","RUNTIME_SUPPORTED","autosize","DomElementStyle","BROWSER_PREFIXES","DomElementStyle_proto","dirty","styleString","allBrowsers","prefix","removeAttribute","isArray","getStyleString","elements","generateStyle","EditorTextInput","parentDiv","singleLine","defaultText","maxLength","EVENT_TEXT_CHANGE","EVENT_TEXT_SET_ACTIVE","EVENT_TEXT_SET_INACTIVE","textArea","rows","firstEdit","startingHeight","entries","observer","styleTextArea","measureDiv","EditorTextInput_proto","trimRight","lastNonSpace","trimLeft","firstNonSpace","setInactive","setActive","textMarkup","placeholderText","i18n","constrainToCanvas","initFromMarkup","isIOSDevice","txtArea","focus","dataBag","blur","onResizeBinded","frameWidth","frameHeight","xPos","yPos","updateStyleFirst","padding","getClientFontSize","lineHeightPercentage","lineHeight","setPosAndSize","container","temp","injectSizeValues","newPos","fontHeight","textAreaStyle","getTextValuesForMarkup","sizeUpdateRequired","active","activeMarkup","activeFirstEdit","textValues","getTextValues","lines","generateLines","acceptAndExit","newLines","ox","oy","onCameraChanged","str","linesBreaks","styleMeasureStr","maxLineLength","linesOutput","len","splitLine","output","remaining","done","innerText","getShorterLine","splitWord","iLastSpace","lastIndexOf","trailingWord","word","lenSoFar","okayWord","extraWord","EditModeCallout","helper","onHelperTextChange","onHelperSetActive","onHistoryChangeBinded","onHistoryChange","EditModeCallout_proto","deleteCallout","DeleteCallout","clientFontSize","initialWidth","initialHeight","createCallout","CreateCallout","selectMarkup","databag","setIsHelperTextActive","setIsShapeVisible","textStyle","curSelection","updateTextBoxStyle","FONT_SIZE_SCALE","MarkupCallout_STARTING_WIDTH_FACTOR","MarkupCallout","createSvgElement","textShape","createMarkupTextSvg","rectShape","createMarkupGroupSvg","currentText","currentTextLines","prevHighlight","isHelperTextActive","MarkupCallout_proto","textString","setIsFilledFrameUsed","setText","stylesEqual","getTextLines","highlightChanged","editMode","duringEditMode","rebuildTextSvg","textContainerTransform","getTextContainerTransform","textTransform","getTextTransform","setMarkupTextSvgTransform","updateMarkupTextSvgClipper","updateMarkupTextSvgHitarea","textHelperValues","yOffset","getLineHeight","hasRectShape","setIsFilledFrameVisible","isVisible","isframeused","margin","EDIT_FRAME_DEFAULT_MARGIN","CreateCallout_proto","DeleteCallout_proto","SetText","SetText_proto","EditModeText","EditModeText_proto","deleteText","MarkupText_FONT_SIZE_SCALE","MarkupText_STARTING_WIDTH_FACTOR","MarkupText","textDirty","textSize","MarkupText_proto","updateMarkupTextSvgBackground","CreateText_proto","DeleteCircle","createCircle","CreateCircle","DeleteCircle_proto","SetCircle","SetCircle_proto","EditModeCircle","EditModeCircle_proto","MarkupCircle","deleteCircle","firstPosition","MarkupCircle_proto","ellipseW","ellipseH","createEllipsePath","CreateCircle_proto","DeleteCloud","cloud","createCloud","CreateCloud","DeleteCloud_proto","SetCloud","SetCloud_proto","EditModeCloud","newStrokeWidth","newColor","oldStrokeWidth","oldColor","EditModeCloud_proto","MarkupCloud","deleteCloud","MarkupCloud_proto","radius","createArcTo","xRadius","yRadius","createCorner","corner","getSideParameters","diameter","count","xValueInset","yValueOffset","hSidesParameters","vSidesParameters","cornerSizeX","cornerSizeY","cornerRadiusX","cornerRadiusY","halfStrokeWidth","sp","createTSide","createRSide","createBSide","createLSide","CreateCloud_proto","MarkupPen","MarkupPen_proto","EditModePen","smoothen","bufferSize","locations","isAbsoluteCoords","updatePath","slice","locationsCount","toFixed","locationA","locationB","EditModePen_proto","DeleteFreehand","freehand","createFreehand","CreateFreehand","deletePen","movements","location","appendToBuffer","amendPath","lastX","lastY","removeFromAbsolutePath","addToAbsolutePath","setPen","absolutePath","clearSnapped","buffer","movementsLastIndex","createPen","createAbsolutePath","cameraWidth","camera","cameraHeight","xs","simplify","ys","error","absolutePathIndexes","numToRemove","shift","getAveragePoint","tmpBuffer","totalX","totalY","DeleteFreehand_proto","SetFreehand","SetFreehand_proto","EditModeFreehand","EditModeFreehand_proto","MarkupFreehand","CreateFreehand_proto","DeletePolyline","createPolyline","CreatePolyline","closed","DeletePolyline_proto","SetPolyline","SetPolyline_proto","EditModePolyline","EditModePolyline_proto","setPositionAndSize","minFn","collection","targets","maxFn","MarkupPolyline","deletePolyline","lastIndex","lastMove","areMarkupsPointsInClientRange","MarkupPolyLine_proto","CreatePolyline_proto","DeletePolycloud","polycloud","createPolycloud","CreatePolycloud","DeletePolycloud_proto","SetPolycloud","SetPolycloud_proto","EditModePolycloud","EditModePolycloud_proto","EditModePolycloud_setPositionAndSize","MarkupPolycloud","deletePolycloud","MarkupPolycloud_proto","updateCorners","side","cornerA","cornerB","orientation","rA","rB","D","pointA","pointB","xS","xT","yS","yT","intersec","cross","vecAB","createSidePath","bodyCount","bodyRadius","bodyDiameter","createCornerPath","first","large","fstPoint","sndPoint","pointC","getOrientation","sides","sidesCount","vecBA","getSides","corners","sideA","sideB","getCorners","cornersCount","bodyA","bodyB","updateSides","CreatePolycloud_proto","DeleteHighlight","createHighlight","CreateHighlight","DeleteHighlight_proto","SetHighlight","SetHighlight_proto","EditModeHighlight","EditModeHighlight_proto","MarkupHighlight","CreateHighlight_proto","DeleteDimension","dimension","createDimension","CreateDimension","secondAnchor","firstAnchor","DeleteDimension_proto","SetDimension","newFirstAnchor","newSecondAnchor","oldFirstAnchor","oldSecondAnchor","SetDimension_proto","_cursorPosition","EditModeDimension_MeasureCommon","EditModeDimension","measurement","Measurement","MeasurementTypes","MEASUREMENT_DISTANCE","measureExt","getExtension","abortDimensionMarkup","cancelEditModeChange","enterEditMode","sharedMeasureConfig","forceCalibrate","getData","isLeaflet","isPdf","calibrationTool","isCalibrated","openCalibrationRequiredDialog","EditModeDimension_proto","deleteDimension","updateTextBox","updateViewportId","getDistance","computeResult","picks","distanceXYZ","Private","convertUnits","getUnitString","units","calibrationFactor","formatValueWithUnits","precision","updateMeasurement","measurementNumber","pick","getPick","geomVertex","intersectPoint","copyResults","viewportId","setViewportId","pickFirstAnchor","clearAllPicks","dimensionId","viewportIndex2d","pickSecondAnchor","mouseDown","correctPerpendicularPicks","getSnapResultPosition","indicator","isRightClick","navigation","inverseProject","constrainAxis","isVisibleChar","keyCode","measureTextLine","initialText","measureTextLines","handleKeyDown","KeyCode","ENTER","BACKSPACE","substring","handleKeyDownBinded","getTextAreaTransform","shouldFlip","DEFAULT_TEXT","MarkupDimension","preventReposition","MarkupDimension_proto","degreesToRadians","lineSize","edgeH","textOffset","backgroundTransform","inverse","flip","segmentLength","CreateDimension_proto","MarkupsCoreUtils_av","avp","_gWindow","_gDocument","MARKUP_DEFAULT_STROKE_WIDTH_IN_PIXELS","MARKUP_DEFAULT_FONT_WIDTH_IN_PIXELS","MARKUP_DEFAULT_HITAREAS_MARGIN_IN_PIXELS","createElementNS","setSvgParentAttributes","hitareaMargin","getAttribute","markupFill","markupStroke","strokeEnabled","fillEnabled","navigating","clipperId","getUniqueID","clipperUrl","clipper","background","clippedArea","addSvgMetadata","metadataNode","dataVersionNode","markupNode","removeAllMetadata","svgNode","nodes","svgChildren","transferChildNodes","nodeFrom","nodeInto","tmpArray","generateUUID","svgNodeToString","domNode","result","hitareas","removeHitareas","hitareaParent","childrenCount","XMLSerializer","serializeToString","hitareasCount","addHitareas","stringToSvgNode","stringNode","client","listener","hasEventListener","li","typeListeners","worldToClient","snap","worldToViewport","viewportToClient","depth","clientToViewport","unproject","viewportX","viewportY","metersToModel","meters","getUnitScale","radians","degrees","range","hideLmvUi","toolbar","setActiveNavigationTool","dismissLmvHudMessage","hideLmvPanels","hideLmvToolsAndPanels","restoreLmvUi","showLmvToolsAndPanels","hide","dockingPanels","panel","panelContainer","classList","contains","visibilityChanged","ext","displayViewCube","displayHomeButton","anim","getElementsByClassName","viewerContainer","viewerContainerChildrenCount","animator","keyFrameAnimator","isPaused","pauseCameraAnimations","pause","playButton","modelTools","getControl","setIcon","setToolTip","keepDismissing","HudMessage","dismiss","ignore","widthInPixels","createMarkupFromSVG","meta","isClosed","getLocations","locStr","pointPair","getAttributeVector","posVec","strPos","getPosition","getSize","strRot","createMarkup","logger","getCurrentStyle","markupList","svgLayersMap","activeLayer","markups","hexRGBString","x0","y0","deviceRatio","devicePixelRatio","idTargetWidth","idTargetHeight","idTargetBuffer","check","verxtexCount","isInsidePolygon","bbW","bbH","endX","endY","createStyleSheet","sheet","addRuleToStyleSheet","insertRule","addRule","measureStyle","linesCount","MarkupsCoreUtils_createArcTo","relative","halfW","halfH","tmpSvg","markupGroup","renderWithCanvg","renderCallback","Image","tolerance","highestQuality","getSqSegDist","sqTolerance","last","simplified","simplifyDPStep","maxSqDist","sqDist","simplifyDouglasPeucker","prevPoint","newPoints","simplifyRadialDist","EditActionGroup","actions","EditActionGroup_proto","EditActionManager","historySize","undoStack","redoStack","close","actionsCount","isOpen","isEmpty","addAction","compact","actionA","actionB","getTargetId","EditActionManager_proto","CloneMarkup","getEditActionGroup","undoStackCount","isUndoStackEmpty","isRedoStackEmpty","getLastElementInUndoStack","CloneMarkup_proto","Clipboard","pastePosition","Clipboard_proto","copy","cut","paste","InputHandler_av","InputHandler_avp","_mouseEnabled","_mousePrevValue","_lock","InputHandler","snapRotations","keepAspectRatio","onWheelBinded","onWheel","onTouchDragBinded","onTouchDrag","onTouchPanBinded","onTouchPan","onTouchPinchBinded","onTouchPinch","onSingleTap","onDoubleTapBinded","onDoubleTap","onMouseMoveBinded","onMouseUpBinded","onMouseDoubleClickBinded","onHammerInput","isMouseDown","InputHandler_proto","processMouseEvent","shiftKey","convertEventHammerToMouse","pointers","SetPosition","attachTo","detachFrom","drag","doubletap","doubletap2","singletap2","press","pan","pinch","recognizeWith","requireFailure","enableMouseButtons","state","addDocumentEventListener","removeDocumentEventListener","isMobileDevice","leaveEditMode","off","enterViewMode","leaveViewMode","toolController","mousewheel","preventDefault","mousemove","onMouseDownRightClick","inFullscreen","activeElement","__clientToCanvasCoords","markupTool","handleButtonDown","onMouseUpRightClick","handleButtonUp","isMiddleClick","getTool","distributeGesture","callSnapperMouseMove","SetPosition_proto","SetRotation","curAngle","newRotation","oldRotation","SetRotation_proto","EditFrame_av","EditFrame_avp","EditFrame","containingDiv","selectionLayer","visibility","togglePointerEvents","createSelectionLayer","frameMargin","selection","resizing","handle","selectorBox","rotationBridge","setResizeCursor","createRotationBridge","rotationHandle","createRotatePoint","createDragPoints","updateSelectionBoxState","createSelectorBox","onHammerDragBinded","onHammerDrag","onHammerDoubleTapBinded","onHammerDoubleTap","_onRepositionMouseDown","handleSelectionBoxDragging","_onResizeMouseDown","handleSelectionBoxResizing","doubleClick","defaultPrevented","handleSelectionDoubleClick","_onRotationMouseDown","handleSelectionBoxRotating","EditFrame_proto","EditFrame_convertEventHammerToMouse","pageX","pageY","isDragPoint","matchesSelectorAux","isRotatePoint","updateSelectorBoxPosition","toTranslate3d","transformOrigin","msTransform","webkitTransform","msTransformOrigin","webkitTransformOrigin","unload","doubleMargin","updateSelectorBoxDimensions","enable","enableResizeHandles","enableRotationHandle","_onRepositionMouseMove","_onRepositionMouseUp","isDragging","isResizing","isRotating","rotating","updateEditorInput","callSnapperMouseDown","_handleRightClickDown","initialRotation","initialHandlePosition","ignoreFirstMouseMove","setHandleSelected","isSelected","pointerEvents","getAngleBetweenPoints","domElem","syntheticStart","MouseEvent","initialCursor","initialPosition","areAxisConstrained","axisConstrains","altKey","movement","initial","mouseX","mouseY","_onResizeMouseMove","_onResizeMouseUp","vector","undoRotation","localSpaceDelta","projectOnVector","nw","ne","sw","se","redoRotation","actualDelta","_onRotationMouseMove","_onRotationMouseUp","MarkupTool_avp","MarkupTool","ToolInterface","names","panTool","allowNav","coreExt","hotkeysEnabled","_ctrlDown","_shiftDown","allowNavigation","allow","setCoreExtension","setHotkeysEnabled","enabled","activate","viewerApi","deactivate","CONTROL","SHIFT","ESCAPE","onUserCancel","DELETE","F12","handleKeyUp","handleSingleClick","button","handleDoubleClick","handleSingleTap","handleDoubleTap","handleWheelInput","handleMouseMove","handleGesture","handleBlur","_editModes","theEditModeManager","[object Object]","clazz","register","MarkupsCore_MeasureCommon","MarkupsCore","Extension","duringViewMode","onEditActionHistoryChanged","nextId","clipboard","CAMERA_CHANGE_EVENT","once","onCameraChangeBinded","onCameraChange","onViewerResizeBinded","onViewerResize","onMarkupSelectedBinded","onMarkupSelected","onMarkupEnterEditionBinded","onMarkupEnterEdition","onMarkupCancelEditionBinded","onMarkupCancelEdition","onMarkupDeleteEditionBinded","onMarkupDeleteEdition","onToolChangeBinded","onToolChange","onUnitsCalibrationStartsBinded","onUnitsCalibrationStarts","Events","UNITS_CALIBRATION_STARTS_EVENT","MarkupsCore_proto","svgStyle","disableMarkupInteractions","toolClass","markupToolClass","changeMarkupTool","markupDisableHotkeys","loadExtension","Extensions","Snapping","Snapper","markupMode","registerTool","enableHotKeys","deregisterTool","editModeSvgLayerNode","initialStrokeWidth","initialFontWidth","toggleEditMode","layerId","disableLayerMarkups","layer","layerMarkups","show","parSvg","editModeLayerParentNode","editingLayer","svgParent","activateTool","defaultStyle","changeEditMode","clearOverlays","toggle","VIEWER_RESIZE_EVENT","reorderElements","onViewerRolloverObject","rolloverObject","unloadMarkupsAllLayers","editModeLayer","generateData","defaultLayer","tmpNode","metadataNodes","data-model-version","addedNode","generatePoints3d","main","markupsCount","renderer","readbackTargetId","collision","context","renderAllMarkups","getSvgViewBox","numberOfScreenshotsTaken","onMarkupScreenshotTaken","svgKeys","layersKeys","oldEditMode","isNavigationAllowed","isPerspective","cachedNavigationTool","getActiveNavigationTool","TOOL_CHANGE_EVENT","getName","defaultToolName","getDefaultNavigationToolName","toolName","navAllowed","setNavigationLockSettings","zoom","orbit","roll","fov","walk","gotoview","setNavigationLock","changeInputHandler","inputHandler","dontAddToHistory","layerObject","markupIndex","editLayerMarkups","removeMarkupIfExists","sendMarkupTo","sendToBack","bringForward","bringBackward","loadMarkups","markupString","svgLayerNode","svgString","createLayerNode","localName","svgParentNode","newSvgLayerNode","revertLayer","currentMarkups","layerSvg","unloadMarkups","numMarkups","unloadSvgLayerNode","hideMarkups","showMarkups","markupsToClient","vectorFromClientToMarkups","vectorFromMarkupsToClient","matrixWorld","globalOffset","matrixWorldInverse","getSnapPosition","getSnapResult","getCamera","containerBounds","getScreenViewport","ignoreNextMouseUp","theExtensionManager","registerExtension","MarkupsGui_MarkupsGui","domEvents","onEditModeEnter","onEditModeLeave","onEditModeChange","MarkupsGui_proto","MarkupsGui_avp","then","core","unhookAllEvents","destroyToolUi","destroyToolbarUI","onToolbarCreated","markupToolButton","UI","Button","onClick","TOOLBAR","MODELTOOLSID","addControl","getToolbar","removeFromParent","showToolsUi","hideToolsUi","domToolSelect","ignoreChangeEvent","optionList","selectedIndex","setStylesUi","createToolsUi","canNavigate","setControlVisibility","exitNavigationMode","domContent","domRoot","createEditModeOption","locLabel","editModeType","html","domStylesRoot","hookEvent","onToggleCollapse","onEditModeDone","enterNavigationMode","onUndoClick","onRedoClick","onDeleteClick","onCutClick","onCopyClick","onPasteClick","onDuplicateClick","onSelectEditMode","onStyleChange","EditModeClass","getClass","option","styleKey","valueType","getUiForStyleKey","selectionIndex","optLine","valueEquals","value1","value2","visibleValue","eventStr","callbackFn","handler","getStyleOptions","activeStatus","__webpack_exports__","Core","Gui","MarkupEvents","MarkupEvents_namespaceObject","MarkupTypes","MarkupTypes_namespaceObject","Utils","MarkupsCoreUtils_namespaceObject","markupType","eventType","thing","StyleUtils_namespaceObject","MarkupsGui","Markups"],"mappings":"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","file":"Markup/Markup.min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 15);\n","\"use strict\";\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\n// eslint-disable-next-line func-names\nmodule.exports = function (useSourceMap) {\n  var list = []; // return the list of modules as css string\n\n  list.toString = function toString() {\n    return this.map(function (item) {\n      var content = cssWithMappingToString(item, useSourceMap);\n\n      if (item[2]) {\n        return \"@media \".concat(item[2], \"{\").concat(content, \"}\");\n      }\n\n      return content;\n    }).join('');\n  }; // import a list of modules into the list\n  // eslint-disable-next-line func-names\n\n\n  list.i = function (modules, mediaQuery) {\n    if (typeof modules === 'string') {\n      // eslint-disable-next-line no-param-reassign\n      modules = [[null, modules, '']];\n    }\n\n    var alreadyImportedModules = {};\n\n    for (var i = 0; i < this.length; i++) {\n      // eslint-disable-next-line prefer-destructuring\n      var id = this[i][0];\n\n      if (id != null) {\n        alreadyImportedModules[id] = true;\n      }\n    }\n\n    for (var _i = 0; _i < modules.length; _i++) {\n      var item = modules[_i]; // skip already imported module\n      // this implementation is not 100% perfect for weird media query combinations\n      // when a module is imported multiple times with different media queries.\n      // I hope this will never occur (Hey this way we have smaller bundles)\n\n      if (item[0] == null || !alreadyImportedModules[item[0]]) {\n        if (mediaQuery && !item[2]) {\n          item[2] = mediaQuery;\n        } else if (mediaQuery) {\n          item[2] = \"(\".concat(item[2], \") and (\").concat(mediaQuery, \")\");\n        }\n\n        list.push(item);\n      }\n    }\n  };\n\n  return list;\n};\n\nfunction cssWithMappingToString(item, useSourceMap) {\n  var content = item[1] || ''; // eslint-disable-next-line prefer-destructuring\n\n  var cssMapping = item[3];\n\n  if (!cssMapping) {\n    return content;\n  }\n\n  if (useSourceMap && typeof btoa === 'function') {\n    var sourceMapping = toComment(cssMapping);\n    var sourceURLs = cssMapping.sources.map(function (source) {\n      return \"/*# sourceURL=\".concat(cssMapping.sourceRoot).concat(source, \" */\");\n    });\n    return [content].concat(sourceURLs).concat([sourceMapping]).join('\\n');\n  }\n\n  return [content].join('\\n');\n} // Adapted from convert-source-map (MIT)\n\n\nfunction toComment(sourceMap) {\n  // eslint-disable-next-line no-undef\n  var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));\n  var data = \"sourceMappingURL=data:application/json;charset=utf-8;base64,\".concat(base64);\n  return \"/*# \".concat(data, \" */\");\n}","\"use strict\";\n\nvar stylesInDom = {};\n\nvar isOldIE = function isOldIE() {\n  var memo;\n  return function memorize() {\n    if (typeof memo === 'undefined') {\n      // Test for IE <= 9 as proposed by Browserhacks\n      // @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805\n      // Tests for existence of standard globals is to allow style-loader\n      // to operate correctly into non-standard environments\n      // @see https://github.com/webpack-contrib/style-loader/issues/177\n      memo = Boolean(window && document && document.all && !window.atob);\n    }\n\n    return memo;\n  };\n}();\n\nvar getTarget = function getTarget() {\n  var memo = {};\n  return function memorize(target) {\n    if (typeof memo[target] === 'undefined') {\n      var styleTarget = document.querySelector(target); // Special case to return head of iframe instead of iframe itself\n\n      if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n        try {\n          // This will throw an exception if access to iframe is blocked\n          // due to cross-origin restrictions\n          styleTarget = styleTarget.contentDocument.head;\n        } catch (e) {\n          // istanbul ignore next\n          styleTarget = null;\n        }\n      }\n\n      memo[target] = styleTarget;\n    }\n\n    return memo[target];\n  };\n}();\n\nfunction listToStyles(list, options) {\n  var styles = [];\n  var newStyles = {};\n\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i];\n    var id = options.base ? item[0] + options.base : item[0];\n    var css = item[1];\n    var media = item[2];\n    var sourceMap = item[3];\n    var part = {\n      css: css,\n      media: media,\n      sourceMap: sourceMap\n    };\n\n    if (!newStyles[id]) {\n      styles.push(newStyles[id] = {\n        id: id,\n        parts: [part]\n      });\n    } else {\n      newStyles[id].parts.push(part);\n    }\n  }\n\n  return styles;\n}\n\nfunction addStylesToDom(styles, options) {\n  for (var i = 0; i < styles.length; i++) {\n    var item = styles[i];\n    var domStyle = stylesInDom[item.id];\n    var j = 0;\n\n    if (domStyle) {\n      domStyle.refs++;\n\n      for (; j < domStyle.parts.length; j++) {\n        domStyle.parts[j](item.parts[j]);\n      }\n\n      for (; j < item.parts.length; j++) {\n        domStyle.parts.push(addStyle(item.parts[j], options));\n      }\n    } else {\n      var parts = [];\n\n      for (; j < item.parts.length; j++) {\n        parts.push(addStyle(item.parts[j], options));\n      }\n\n      stylesInDom[item.id] = {\n        id: item.id,\n        refs: 1,\n        parts: parts\n      };\n    }\n  }\n}\n\nfunction insertStyleElement(options) {\n  var style = document.createElement('style');\n\n  if (typeof options.attributes.nonce === 'undefined') {\n    var nonce = typeof __webpack_nonce__ !== 'undefined' ? __webpack_nonce__ : null;\n\n    if (nonce) {\n      options.attributes.nonce = nonce;\n    }\n  }\n\n  Object.keys(options.attributes).forEach(function (key) {\n    style.setAttribute(key, options.attributes[key]);\n  });\n\n  if (typeof options.insert === 'function') {\n    options.insert(style);\n  } else {\n    var target = getTarget(options.insert || 'head');\n\n    if (!target) {\n      throw new Error(\"Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.\");\n    }\n\n    target.appendChild(style);\n  }\n\n  return style;\n}\n\nfunction removeStyleElement(style) {\n  // istanbul ignore if\n  if (style.parentNode === null) {\n    return false;\n  }\n\n  style.parentNode.removeChild(style);\n}\n/* istanbul ignore next  */\n\n\nvar replaceText = function replaceText() {\n  var textStore = [];\n  return function replace(index, replacement) {\n    textStore[index] = replacement;\n    return textStore.filter(Boolean).join('\\n');\n  };\n}();\n\nfunction applyToSingletonTag(style, index, remove, obj) {\n  var css = remove ? '' : obj.css; // For old IE\n\n  /* istanbul ignore if  */\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = replaceText(index, css);\n  } else {\n    var cssNode = document.createTextNode(css);\n    var childNodes = style.childNodes;\n\n    if (childNodes[index]) {\n      style.removeChild(childNodes[index]);\n    }\n\n    if (childNodes.length) {\n      style.insertBefore(cssNode, childNodes[index]);\n    } else {\n      style.appendChild(cssNode);\n    }\n  }\n}\n\nfunction applyToTag(style, options, obj) {\n  var css = obj.css;\n  var media = obj.media;\n  var sourceMap = obj.sourceMap;\n\n  if (media) {\n    style.setAttribute('media', media);\n  }\n\n  if (sourceMap && btoa) {\n    css += \"\\n/*# sourceMappingURL=data:application/json;base64,\".concat(btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))), \" */\");\n  } // For old IE\n\n  /* istanbul ignore if  */\n\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    while (style.firstChild) {\n      style.removeChild(style.firstChild);\n    }\n\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nvar singleton = null;\nvar singletonCounter = 0;\n\nfunction addStyle(obj, options) {\n  var style;\n  var update;\n  var remove;\n\n  if (options.singleton) {\n    var styleIndex = singletonCounter++;\n    style = singleton || (singleton = insertStyleElement(options));\n    update = applyToSingletonTag.bind(null, style, styleIndex, false);\n    remove = applyToSingletonTag.bind(null, style, styleIndex, true);\n  } else {\n    style = insertStyleElement(options);\n    update = applyToTag.bind(null, style, options);\n\n    remove = function remove() {\n      removeStyleElement(style);\n    };\n  }\n\n  update(obj);\n  return function updateStyle(newObj) {\n    if (newObj) {\n      if (newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap) {\n        return;\n      }\n\n      update(obj = newObj);\n    } else {\n      remove();\n    }\n  };\n}\n\nmodule.exports = function (list, options) {\n  options = options || {};\n  options.attributes = typeof options.attributes === 'object' ? options.attributes : {}; // Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n  // tags it will allow on a page\n\n  if (!options.singleton && typeof options.singleton !== 'boolean') {\n    options.singleton = isOldIE();\n  }\n\n  var styles = listToStyles(list, options);\n  addStylesToDom(styles, options);\n  return function update(newList) {\n    var mayRemove = [];\n\n    for (var i = 0; i < styles.length; i++) {\n      var item = styles[i];\n      var domStyle = stylesInDom[item.id];\n\n      if (domStyle) {\n        domStyle.refs--;\n        mayRemove.push(domStyle);\n      }\n    }\n\n    if (newList) {\n      var newStyles = listToStyles(newList, options);\n      addStylesToDom(newStyles, options);\n    }\n\n    for (var _i = 0; _i < mayRemove.length; _i++) {\n      var _domStyle = mayRemove[_i];\n\n      if (_domStyle.refs === 0) {\n        for (var j = 0; j < _domStyle.parts.length; j++) {\n          _domStyle.parts[j]();\n        }\n\n        delete stylesInDom[_domStyle.id];\n      }\n    }\n  };\n};","/*\n * canvg.js - Javascript SVG parser and renderer on Canvas\n * version 2.0.0\n * MIT Licensed\n * Gabe Lerner (gabelerner@gmail.com)\n * https://github.com/canvg/canvg\n *\n */\n\n(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(require('./rgbcolor')) :\n        typeof define === 'function' && define.amd ? define(['./rgbcolor'], factory) :\n            (global.canvg = factory(global.RGBColor,global.StackBlur,global.Canvas));\n}(this, (function (rgbcolor,stackblurCanvas,canvas) { 'use strict';\n\n    rgbcolor = rgbcolor && rgbcolor.hasOwnProperty('default') ? rgbcolor['default'] : rgbcolor;\n    stackblurCanvas = stackblurCanvas && stackblurCanvas.hasOwnProperty('default') ? stackblurCanvas['default'] : stackblurCanvas;\n    canvas = canvas && canvas.hasOwnProperty('default') ? canvas['default'] : canvas;\n\n    function createCommonjsModule(fn, module) {\n        return module = { exports: {} }, fn(module, module.exports), module.exports;\n    }\n\n    var canvg_1 = createCommonjsModule(function (module) {\n        /* eslint-env browser, node */\n        /* globals $, Sizzle, Windows, ActiveXObject */\n        /* eslint-disable no-redeclare */\n\n\n        var isNode = (module.exports && typeof window === 'undefined'),\n            nodeEnv = false;\n        var windowEnv;\n\n        {\n            windowEnv = window;\n            windowEnv.DOMParser = window.DOMParser;\n        }\n\n        var doc = windowEnv.document,\n            defaultClientWidth = 800,\n            defaultClientHeight = 600;\n\n        function createCanvas(width, height) {\n            var c;\n            {\n                c = doc.createElement('canvas');\n                c.width = width;\n                c.height = height;\n            }\n            return c;\n        }\n\n        // canvg(target, s)\n        // empty parameters: replace all 'svg' elements on page with 'canvas' elements\n        // target: canvas element or the id of a canvas element\n        // s: svg string, url to svg file, or xml document\n        // opts: optional hash of options\n        //       ignoreMouse: true => ignore mouse events\n        //       ignoreAnimation: true => ignore animations\n        //       ignoreDimensions: true => does not try to resize canvas\n        //       ignoreClear: true => does not clear canvas\n        //       offsetX: int => draws at a x offset\n        //       offsetY: int => draws at a y offset\n        //       scaleWidth: int => scales horizontally to width\n        //       scaleHeight: int => scales vertically to height\n        //       renderCallback: function => will call the function after the first render is completed\n        //       enableRedraw: function => whether enable the redraw interval in node environment\n        //       forceRedraw: function => will call the function on every frame, if it returns true, will redraw\n        var canvg = function (target, s, opts) {\n            // no parameters\n            if (target == null && s == null && opts == null) {\n                var svgTags = doc.querySelectorAll('svg');\n                for (var i = 0; i < svgTags.length; i++) {\n                    var svgTag = svgTags[i];\n                    var c = doc.createElement('canvas');\n                    if (typeof(svgTag.clientWidth) !== 'undefined' && typeof(svgTag.clientHeight) !== 'undefined') {\n                        c.width = svgTag.clientWidth;\n                        c.height = svgTag.clientHeight;\n                    } else {\n                        var rect = svgTag.getBoundingClientRect();\n                        c.width = rect.width;\n                        c.height = rect.height;\n                    }\n                    svgTag.parentNode.insertBefore(c, svgTag);\n                    svgTag.parentNode.removeChild(svgTag);\n                    var div = doc.createElement('div');\n                    div.appendChild(svgTag);\n                    canvg(c, div.innerHTML);\n                }\n                return;\n            }\n\n            var svg = build(opts || {});\n\n            if (typeof target == 'string') {\n                target = doc.getElementById(target);\n            }\n\n            // store class on canvas\n            if (target.svg != null) target.svg.stop();\n\n            // on i.e. 8 for flash canvas, we can't assign the property so check for it\n            if (!(target.childNodes && target.childNodes.length == 1 && target.childNodes[0].nodeName == 'OBJECT')) target.svg = svg;\n\n            var ctx = target.getContext('2d');\n\n            if (typeof s.documentElement != 'undefined') {\n                // load from xml doc\n                svg.loadXmlDoc(ctx, s);\n            } else if (s.substr(0, 1) == '<') {\n                // load from xml string\n                svg.loadXml(ctx, s);\n            } else {\n                // load from url\n                svg.load(ctx, s);\n            }\n        };\n\n        var matchesSelector;\n        {\n            // see https://developer.mozilla.org/en-US/docs/Web/API/Element.matches\n            if (typeof Element == 'undefined') ; else if (typeof Element.prototype.matches != 'undefined') {\n                matchesSelector = function (node, selector) {\n                    return node.matches(selector);\n                };\n            } else if (typeof Element.prototype.webkitMatchesSelector != 'undefined') {\n                matchesSelector = function (node, selector) {\n                    return node.webkitMatchesSelector(selector);\n                };\n            } else if (typeof Element.prototype.mozMatchesSelector != 'undefined') {\n                matchesSelector = function (node, selector) {\n                    return node.mozMatchesSelector(selector);\n                };\n            } else if (typeof Element.prototype.msMatchesSelector != 'undefined') {\n                matchesSelector = function (node, selector) {\n                    return node.msMatchesSelector(selector);\n                };\n            } else if (typeof Element.prototype.oMatchesSelector != 'undefined') {\n                matchesSelector = function (node, selector) {\n                    return node.oMatchesSelector(selector);\n                };\n            } else {\n                // requires Sizzle: https://github.com/jquery/sizzle/wiki/Sizzle-Documentation\n                // or jQuery: http://jquery.com/download/\n                // or Zepto: http://zeptojs.com/#\n                // without it, this is a ReferenceError\n\n                if (typeof jQuery === 'function' || typeof Zepto === 'function') {\n                    matchesSelector = function (node, selector) {\n                        return $(node).is(selector);\n                    };\n                }\n\n                if (typeof matchesSelector === 'undefined' && typeof Sizzle !== 'undefined') {\n                    matchesSelector = Sizzle.matchesSelector;\n                }\n            }\n        }\n\n        // slightly modified version of https://github.com/keeganstreet/specificity/blob/master/specificity.js\n        var attributeRegex = /(\\[[^\\]]+\\])/g;\n        var idRegex = /(#[^\\s\\+>~\\.\\[:]+)/g;\n        var classRegex = /(\\.[^\\s\\+>~\\.\\[:]+)/g;\n        var pseudoElementRegex = /(::[^\\s\\+>~\\.\\[:]+|:first-line|:first-letter|:before|:after)/gi;\n        var pseudoClassWithBracketsRegex = /(:[\\w-]+\\([^\\)]*\\))/gi;\n        var pseudoClassRegex = /(:[^\\s\\+>~\\.\\[:]+)/g;\n        var elementRegex = /([^\\s\\+>~\\.\\[:]+)/g;\n\n        function getSelectorSpecificity(selector) {\n            var typeCount = [0, 0, 0];\n            var findMatch = function (regex, type) {\n                var matches = selector.match(regex);\n                if (matches == null) {\n                    return;\n                }\n                typeCount[type] += matches.length;\n                selector = selector.replace(regex, ' ');\n            };\n\n            selector = selector.replace(/:not\\(([^\\)]*)\\)/g, '     $1 ');\n            selector = selector.replace(/{[\\s\\S]*/gm, ' ');\n            findMatch(attributeRegex, 1);\n            findMatch(idRegex, 0);\n            findMatch(classRegex, 1);\n            findMatch(pseudoElementRegex, 2);\n            findMatch(pseudoClassWithBracketsRegex, 1);\n            findMatch(pseudoClassRegex, 1);\n            selector = selector.replace(/[\\*\\s\\+>~]/g, ' ');\n            selector = selector.replace(/[#\\.]/g, ' ');\n            findMatch(elementRegex, 2);\n            return typeCount.join('');\n        }\n\n        function build(opts) {\n            var svg = { opts: opts };\n\n            svg.FRAMERATE = 30;\n            svg.MAX_VIRTUAL_PIXELS = 30000;\n\n            svg.rootEmSize = 12;\n            svg.emSize = 12;\n\n            svg.log = function (/* msg */) { };\n            if (svg.opts['log'] == true && typeof console != 'undefined') {\n                svg.log = function (msg) { console.log(msg); }; // eslint-disable-line no-console\n            }\n\n            // globals\n            svg.init = function (ctx) {\n                var uniqueId = 0;\n                svg.UniqueId = function () { uniqueId++; return 'canvg' + uniqueId; };\n                svg.Definitions = {};\n                svg.Styles = {};\n                svg.StylesSpecificity = {};\n                svg.Animations = [];\n                svg.Images = [];\n                svg.ctx = ctx;\n                svg.ViewPort = new (function () {\n\n                    this.viewPorts = [];\n                    this.Clear = function () { this.viewPorts = []; };\n                    this.SetCurrent = function (width, height) { this.viewPorts.push({ width: width, height: height }); };\n                    this.RemoveCurrent = function () { this.viewPorts.pop(); };\n                    this.Current = function () { return this.viewPorts[this.viewPorts.length - 1]; };\n                    this.width = function () { return this.Current().width; };\n                    this.height = function () { return this.Current().height; };\n                    this.ComputeSize = function (d) {\n                        if (d != null && typeof d == 'number') return d;\n                        if (d == 'x') return this.width();\n                        if (d == 'y') return this.height();\n                        return Math.sqrt(Math.pow(this.width(), 2) + Math.pow(this.height(), 2)) / Math.sqrt(2);\n                    };\n                });\n            };\n            svg.init();\n\n            // images loaded\n            svg.ImagesLoaded = function () {\n                for (var i = 0; i < svg.Images.length; i++) {\n                    if (!svg.Images[i].loaded) return false;\n                }\n                return true;\n            };\n\n            // trim\n            svg.trim = function (s) { return s.replace(/^\\s+|\\s+$/g, ''); };\n\n            // compress non-ideographic spaces\n            svg.compressSpaces = function (s) { return s.replace(/(?!\\u3000)\\s+/gm, ' '); };\n\n            // ajax\n            svg.ajax = function (url) {\n                var AJAX;\n                if (windowEnv.XMLHttpRequest) { AJAX = new windowEnv.XMLHttpRequest(); } else { AJAX = new ActiveXObject('Microsoft.XMLHTTP'); }\n                if (AJAX) {\n                    AJAX.open('GET', url, false);\n                    AJAX.send(null);\n                    return AJAX.responseText;\n                }\n                return null;\n            };\n\n            // parse xml\n            svg.parseXml = function (xml) {\n                if (typeof Windows != 'undefined' && typeof Windows.Data != 'undefined' && typeof Windows.Data.Xml != 'undefined') {\n                    var xmlDoc = new Windows.Data.Xml.Dom.XmlDocument();\n                    var settings = new Windows.Data.Xml.Dom.XmlLoadSettings();\n                    settings.prohibitDtd = false;\n                    xmlDoc.loadXml(xml, settings);\n                    return xmlDoc;\n                } else if (windowEnv.DOMParser) {\n                    try {\n                        var parser = opts.xmldom ? new windowEnv.DOMParser(opts.xmldom) : new windowEnv.DOMParser();\n                        return parser.parseFromString(xml, 'image/svg+xml');\n                    } catch (e) {\n                        parser = opts.xmldom ? new windowEnv.DOMParser(opts.xmldom) : new windowEnv.DOMParser();\n                        return parser.parseFromString(xml, 'text/xml');\n                    }\n                } else {\n                    xml = xml.replace(/<!DOCTYPE svg[^>]*>/, '');\n                    var xmlDoc = new ActiveXObject('Microsoft.XMLDOM');\n                    xmlDoc.async = 'false';\n                    xmlDoc.loadXML(xml);\n                    return xmlDoc;\n                }\n            };\n\n            svg.Property = function (name, value) {\n                this.name = name;\n                this.value = value;\n            };\n            svg.Property.prototype.getValue = function () {\n                return this.value;\n            };\n\n            svg.Property.prototype.hasValue = function () {\n                return (this.value != null && this.value !== '');\n            };\n\n            // return the numerical value of the property\n            svg.Property.prototype.numValue = function () {\n                if (!this.hasValue()) return 0;\n\n                var n = parseFloat(this.value);\n                if ((this.value + '').match(/%$/)) {\n                    n = n / 100.0;\n                }\n                return n;\n            };\n\n            svg.Property.prototype.valueOrDefault = function (def) {\n                if (this.hasValue()) return this.value;\n                return def;\n            };\n\n            svg.Property.prototype.numValueOrDefault = function (def) {\n                if (this.hasValue()) return this.numValue();\n                return def;\n            };\n\n            // color extensions\n            // augment the current color value with the opacity\n            svg.Property.prototype.addOpacity = function (opacityProp) {\n                var newValue = this.value;\n                if (opacityProp.value != null && opacityProp.value != '' && typeof this.value == 'string') { // can only add opacity to colors, not patterns\n                    var color = new rgbcolor(this.value);\n                    if (color.ok) {\n                        newValue = 'rgba(' + color.r + ', ' + color.g + ', ' + color.b + ', ' + opacityProp.numValue() + ')';\n                    }\n                }\n                return new svg.Property(this.name, newValue);\n            };\n\n            // definition extensions\n            // get the definition from the definitions table\n            svg.Property.prototype.getDefinition = function () {\n                var name = this.value.match(/#([^\\)'\"]+)/);\n                if (name) { name = name[1]; }\n                if (!name) { name = this.value; }\n                return svg.Definitions[name];\n            };\n\n            svg.Property.prototype.isUrlDefinition = function () {\n                return this.value.indexOf('url(') == 0\n            };\n\n            svg.Property.prototype.getFillStyleDefinition = function (e, opacityProp) {\n                var def = this.getDefinition();\n\n                // gradient\n                if (def != null && def.createGradient) {\n                    return def.createGradient(svg.ctx, e, opacityProp);\n                }\n\n                // pattern\n                if (def != null && def.createPattern) {\n                    if (def.getHrefAttribute().hasValue()) {\n                        var pt = def.attribute('patternTransform');\n                        def = def.getHrefAttribute().getDefinition();\n                        if (pt.hasValue()) { def.attribute('patternTransform', true).value = pt.value; }\n                    }\n                    return def.createPattern(svg.ctx, e);\n                }\n\n                return null;\n            };\n\n            // length extensions\n            svg.Property.prototype.getDPI = function (/* viewPort */) {\n                return 96.0; // TODO: compute?\n            };\n\n            svg.Property.prototype.getREM = function (/* viewPort */) {\n                return svg.rootEmSize;\n            };\n\n            svg.Property.prototype.getEM = function (/* viewPort */) {\n                return svg.emSize;\n            };\n\n            svg.Property.prototype.getUnits = function () {\n                var s = this.value + '';\n                return s.replace(/[0-9\\.\\-]/g, '');\n            };\n\n            svg.Property.prototype.isPixels = function () {\n                if (!this.hasValue()) return false;\n                var s = this.value + '';\n                if (s.match(/px$/)) return true;\n                if (s.match(/^[0-9]+$/)) return true;\n                return false;\n            };\n\n            // get the length as pixels\n            svg.Property.prototype.toPixels = function (viewPort, processPercent) {\n                if (!this.hasValue()) return 0;\n                var s = this.value + '';\n                if (s.match(/rem$/)) return this.numValue() * this.getREM(viewPort);\n                if (s.match(/em$/)) return this.numValue() * this.getEM(viewPort);\n                if (s.match(/ex$/)) return this.numValue() * this.getEM(viewPort) / 2.0;\n                if (s.match(/px$/)) return this.numValue();\n                if (s.match(/pt$/)) return this.numValue() * this.getDPI(viewPort) * (1.0 / 72.0);\n                if (s.match(/pc$/)) return this.numValue() * 15;\n                if (s.match(/cm$/)) return this.numValue() * this.getDPI(viewPort) / 2.54;\n                if (s.match(/mm$/)) return this.numValue() * this.getDPI(viewPort) / 25.4;\n                if (s.match(/in$/)) return this.numValue() * this.getDPI(viewPort);\n                if (s.match(/%$/)) return this.numValue() * svg.ViewPort.ComputeSize(viewPort);\n                var n = this.numValue();\n                if (processPercent && n < 1.0) return n * svg.ViewPort.ComputeSize(viewPort);\n                return n;\n            };\n\n            // time extensions\n            // get the time as milliseconds\n            svg.Property.prototype.toMilliseconds = function () {\n                if (!this.hasValue()) return 0;\n                var s = this.value + '';\n                if (s.match(/s$/)) return this.numValue() * 1000;\n                if (s.match(/ms$/)) return this.numValue();\n                return this.numValue();\n            };\n\n            // angle extensions\n            // get the angle as radians\n            svg.Property.prototype.toRadians = function () {\n                if (!this.hasValue()) return 0;\n                var s = this.value + '';\n                if (s.match(/deg$/)) return this.numValue() * (Math.PI / 180.0);\n                if (s.match(/grad$/)) return this.numValue() * (Math.PI / 200.0);\n                if (s.match(/rad$/)) return this.numValue();\n                return this.numValue() * (Math.PI / 180.0);\n            };\n\n            // text extensions\n            // get the text baseline\n            var textBaselineMapping = {\n                'baseline': 'alphabetic',\n                'before-edge': 'top',\n                'text-before-edge': 'top',\n                'middle': 'middle',\n                'central': 'middle',\n                'after-edge': 'bottom',\n                'text-after-edge': 'bottom',\n                'ideographic': 'ideographic',\n                'alphabetic': 'alphabetic',\n                'hanging': 'hanging',\n                'mathematical': 'alphabetic'\n            };\n            svg.Property.prototype.toTextBaseline = function () {\n                if (!this.hasValue()) return null;\n                return textBaselineMapping[this.value];\n            };\n\n            // fonts\n            svg.Font = new (function () {\n                this.Styles = 'normal|italic|oblique|inherit';\n                this.Variants = 'normal|small-caps|inherit';\n                this.Weights = 'normal|bold|bolder|lighter|100|200|300|400|500|600|700|800|900|inherit';\n\n                this.CreateFont = function (fontStyle, fontVariant, fontWeight, fontSize, fontFamily, inherit) {\n                    var f = inherit != null ? this.Parse(inherit) : this.CreateFont('', '', '', '', '', svg.ctx.font);\n                    fontFamily = fontFamily || f.fontFamily;\n                    return {\n                        fontFamily: fontFamily,\n                        fontSize: fontSize || f.fontSize,\n                        fontStyle: fontStyle || f.fontStyle,\n                        fontWeight: fontWeight || f.fontWeight,\n                        fontVariant: fontVariant || f.fontVariant,\n                        toString: function () { return [this.fontStyle, this.fontVariant, this.fontWeight, this.fontSize, this.fontFamily].join(' ') }\n                    }\n                };\n\n                var that = this;\n                this.Parse = function (s) {\n                    var f = {};\n                    var d = svg.trim(svg.compressSpaces(s || '')).split(' ');\n                    var set = { fontSize: false, fontStyle: false, fontWeight: false, fontVariant: false };\n                    var ff = '';\n                    for (var i = 0; i < d.length; i++) {\n                        if (!set.fontStyle && that.Styles.indexOf(d[i]) != -1) {\n                            if (d[i] != 'inherit') f.fontStyle = d[i];\n                            set.fontStyle = true;\n                        } else if (!set.fontVariant && that.Variants.indexOf(d[i]) != -1) {\n                            if (d[i] != 'inherit') f.fontVariant = d[i];\n                            set.fontStyle = set.fontVariant = true;\n                        } else if (!set.fontWeight && that.Weights.indexOf(d[i]) != -1) {\n                            if (d[i] != 'inherit') f.fontWeight = d[i];\n                            set.fontStyle = set.fontVariant = set.fontWeight = true;\n                        } else if (!set.fontSize) {\n                            if (d[i] != 'inherit') f.fontSize = d[i].split('/')[0];\n                            set.fontStyle = set.fontVariant = set.fontWeight = set.fontSize = true;\n                        } else { if (d[i] != 'inherit') ff += d[i]; }\n                    }\n                    if (ff != '') f.fontFamily = ff;\n                    return f;\n                };\n            });\n\n            // points and paths\n            svg.ToNumberArray = function (s) {\n                var a = svg.trim(svg.compressSpaces((s || '').replace(/,/g, ' '))).split(' ');\n                for (var i = 0; i < a.length; i++) {\n                    a[i] = parseFloat(a[i]);\n                }\n                return a;\n            };\n            svg.Point = function (x, y) {\n                this.x = x;\n                this.y = y;\n            };\n            svg.Point.prototype.angleTo = function (p) {\n                return Math.atan2(p.y - this.y, p.x - this.x);\n            };\n\n            svg.Point.prototype.applyTransform = function (v) {\n                var xp = this.x * v[0] + this.y * v[2] + v[4];\n                var yp = this.x * v[1] + this.y * v[3] + v[5];\n                this.x = xp;\n                this.y = yp;\n            };\n\n            svg.CreatePoint = function (s) {\n                var a = svg.ToNumberArray(s);\n                return new svg.Point(a[0], a[1]);\n            };\n            svg.CreatePath = function (s) {\n                var a = svg.ToNumberArray(s);\n                var path = [];\n                for (var i = 0; i < a.length; i += 2) {\n                    path.push(new svg.Point(a[i], a[i + 1]));\n                }\n                return path;\n            };\n\n            // bounding box\n            svg.BoundingBox = function (x1, y1, x2, y2) { // pass in initial points if you want\n                this.x1 = Number.NaN;\n                this.y1 = Number.NaN;\n                this.x2 = Number.NaN;\n                this.y2 = Number.NaN;\n\n                this.x = function () { return this.x1; };\n                this.y = function () { return this.y1; };\n                this.width = function () { return this.x2 - this.x1; };\n                this.height = function () { return this.y2 - this.y1; };\n\n                this.addPoint = function (x, y) {\n                    if (x != null) {\n                        if (isNaN(this.x1) || isNaN(this.x2)) {\n                            this.x1 = x;\n                            this.x2 = x;\n                        }\n                        if (x < this.x1) this.x1 = x;\n                        if (x > this.x2) this.x2 = x;\n                    }\n\n                    if (y != null) {\n                        if (isNaN(this.y1) || isNaN(this.y2)) {\n                            this.y1 = y;\n                            this.y2 = y;\n                        }\n                        if (y < this.y1) this.y1 = y;\n                        if (y > this.y2) this.y2 = y;\n                    }\n                };\n                this.addX = function (x) { this.addPoint(x, null); };\n                this.addY = function (y) { this.addPoint(null, y); };\n\n                this.addBoundingBox = function (bb) {\n                    this.addPoint(bb.x1, bb.y1);\n                    this.addPoint(bb.x2, bb.y2);\n                };\n\n                this.addQuadraticCurve = function (p0x, p0y, p1x, p1y, p2x, p2y) {\n                    var cp1x = p0x + 2 / 3 * (p1x - p0x); // CP1 = QP0 + 2/3 *(QP1-QP0)\n                    var cp1y = p0y + 2 / 3 * (p1y - p0y); // CP1 = QP0 + 2/3 *(QP1-QP0)\n                    var cp2x = cp1x + 1 / 3 * (p2x - p0x); // CP2 = CP1 + 1/3 *(QP2-QP0)\n                    var cp2y = cp1y + 1 / 3 * (p2y - p0y); // CP2 = CP1 + 1/3 *(QP2-QP0)\n                    this.addBezierCurve(p0x, p0y, cp1x, cp2x, cp1y, cp2y, p2x, p2y);\n                };\n\n                this.addBezierCurve = function (p0x, p0y, p1x, p1y, p2x, p2y, p3x, p3y) {\n                    // from http://blog.hackers-cafe.net/2009/06/how-to-calculate-bezier-curves-bounding.html\n                    var p0 = [p0x, p0y],\n                        p1 = [p1x, p1y],\n                        p2 = [p2x, p2y],\n                        p3 = [p3x, p3y];\n                    this.addPoint(p0[0], p0[1]);\n                    this.addPoint(p3[0], p3[1]);\n\n                    for (var i = 0; i <= 1; i++) {\n                        var f = function (t) {\n                            return Math.pow(1 - t, 3) * p0[i] +\n                                3 * Math.pow(1 - t, 2) * t * p1[i] +\n                                3 * (1 - t) * Math.pow(t, 2) * p2[i] +\n                                Math.pow(t, 3) * p3[i];\n                        };\n\n                        var b = 6 * p0[i] - 12 * p1[i] + 6 * p2[i];\n                        var a = -3 * p0[i] + 9 * p1[i] - 9 * p2[i] + 3 * p3[i];\n                        var c = 3 * p1[i] - 3 * p0[i];\n\n                        if (a == 0) {\n                            if (b == 0) continue;\n                            var t = -c / b;\n                            if (0 < t && t < 1) {\n                                if (i == 0) this.addX(f(t));\n                                if (i == 1) this.addY(f(t));\n                            }\n                            continue;\n                        }\n\n                        var b2ac = Math.pow(b, 2) - 4 * c * a;\n                        if (b2ac < 0) continue;\n                        var t1 = (-b + Math.sqrt(b2ac)) / (2 * a);\n                        if (0 < t1 && t1 < 1) {\n                            if (i == 0) this.addX(f(t1));\n                            if (i == 1) this.addY(f(t1));\n                        }\n                        var t2 = (-b - Math.sqrt(b2ac)) / (2 * a);\n                        if (0 < t2 && t2 < 1) {\n                            if (i == 0) this.addX(f(t2));\n                            if (i == 1) this.addY(f(t2));\n                        }\n                    }\n                };\n\n                this.isPointInBox = function (x, y) {\n                    return (this.x1 <= x && x <= this.x2 && this.y1 <= y && y <= this.y2);\n                };\n\n                this.addPoint(x1, y1);\n                this.addPoint(x2, y2);\n            };\n\n            // transforms\n            svg.Transform = function (v) {\n                var that = this;\n                this.Type = {};\n\n                // translate\n                this.Type.translate = function (s) {\n                    this.p = svg.CreatePoint(s);\n                    this.apply = function (ctx) {\n                        ctx.translate(this.p.x || 0.0, this.p.y || 0.0);\n                    };\n                    this.unapply = function (ctx) {\n                        ctx.translate(-1.0 * this.p.x || 0.0, -1.0 * this.p.y || 0.0);\n                    };\n                    this.applyToPoint = function (p) {\n                        p.applyTransform([1, 0, 0, 1, this.p.x || 0.0, this.p.y || 0.0]);\n                    };\n                };\n\n                // rotate\n                this.Type.rotate = function (s) {\n                    var a = svg.ToNumberArray(s);\n                    this.angle = new svg.Property('angle', a[0]);\n                    this.cx = a[1] || 0;\n                    this.cy = a[2] || 0;\n                    this.apply = function (ctx) {\n                        ctx.translate(this.cx, this.cy);\n                        ctx.rotate(this.angle.toRadians());\n                        ctx.translate(-this.cx, -this.cy);\n                    };\n                    this.unapply = function (ctx) {\n                        ctx.translate(this.cx, this.cy);\n                        ctx.rotate(-1.0 * this.angle.toRadians());\n                        ctx.translate(-this.cx, -this.cy);\n                    };\n                    this.applyToPoint = function (p) {\n                        var a = this.angle.toRadians();\n                        p.applyTransform([1, 0, 0, 1, this.p.x || 0.0, this.p.y || 0.0]);\n                        p.applyTransform([Math.cos(a), Math.sin(a), -Math.sin(a), Math.cos(a), 0, 0]);\n                        p.applyTransform([1, 0, 0, 1, -this.p.x || 0.0, -this.p.y || 0.0]);\n                    };\n                };\n\n                this.Type.scale = function (s) {\n                    this.p = svg.CreatePoint(s);\n                    this.apply = function (ctx) {\n                        ctx.scale(this.p.x || 1.0, this.p.y || this.p.x || 1.0);\n                    };\n                    this.unapply = function (ctx) {\n                        ctx.scale(1.0 / this.p.x || 1.0, 1.0 / this.p.y || this.p.x || 1.0);\n                    };\n                    this.applyToPoint = function (p) {\n                        p.applyTransform([this.p.x || 0.0, 0, 0, this.p.y || 0.0, 0, 0]);\n                    };\n                };\n\n                this.Type.matrix = function (s) {\n                    this.m = svg.ToNumberArray(s);\n                    this.apply = function (ctx) {\n                        ctx.transform(this.m[0], this.m[1], this.m[2], this.m[3], this.m[4], this.m[5]);\n                    };\n                    this.unapply = function (ctx) {\n                        var a = this.m[0];\n                        var b = this.m[2];\n                        var c = this.m[4];\n                        var d = this.m[1];\n                        var e = this.m[3];\n                        var f = this.m[5];\n                        var g = 0.0;\n                        var h = 0.0;\n                        var i = 1.0;\n                        var det = 1 / (a * (e * i - f * h) - b * (d * i - f * g) + c * (d * h - e * g));\n                        ctx.transform(\n                            det * (e * i - f * h),\n                            det * (f * g - d * i),\n                            det * (c * h - b * i),\n                            det * (a * i - c * g),\n                            det * (b * f - c * e),\n                            det * (c * d - a * f)\n                        );\n                    };\n                    this.applyToPoint = function (p) {\n                        p.applyTransform(this.m);\n                    };\n                };\n\n                this.Type.SkewBase = function (s) {\n                    this.base = that.Type.matrix;\n                    this.base(s);\n                    this.angle = new svg.Property('angle', s);\n                };\n                this.Type.SkewBase.prototype = new this.Type.matrix;\n\n                this.Type.skewX = function (s) {\n                    this.base = that.Type.SkewBase;\n                    this.base(s);\n                    this.m = [1, 0, Math.tan(this.angle.toRadians()), 1, 0, 0];\n                };\n                this.Type.skewX.prototype = new this.Type.SkewBase;\n\n                this.Type.skewY = function (s) {\n                    this.base = that.Type.SkewBase;\n                    this.base(s);\n                    this.m = [1, Math.tan(this.angle.toRadians()), 0, 1, 0, 0];\n                };\n                this.Type.skewY.prototype = new this.Type.SkewBase;\n\n                this.transforms = [];\n\n                this.apply = function (ctx) {\n                    for (var i = 0; i < this.transforms.length; i++) {\n                        this.transforms[i].apply(ctx);\n                    }\n                };\n\n                this.unapply = function (ctx) {\n                    for (var i = this.transforms.length - 1; i >= 0; i--) {\n                        this.transforms[i].unapply(ctx);\n                    }\n                };\n\n                this.applyToPoint = function (p) {\n                    for (var i = 0; i < this.transforms.length; i++) {\n                        this.transforms[i].applyToPoint(p);\n                    }\n                };\n\n                var data = svg.trim(svg.compressSpaces(v)).replace(/\\)([a-zA-Z])/g, ') $1').replace(/\\)(\\s?,\\s?)/g, ') ').split(/\\s(?=[a-z])/);\n                for (var i = 0; i < data.length; i++) {\n                    if (data[i] === 'none') {\n                        continue;\n                    }\n\n                    var type = svg.trim(data[i].split('(')[0]);\n                    var s = data[i].split('(')[1].replace(')', '');\n                    var transformType = this.Type[type];\n                    if (typeof transformType != 'undefined') {\n                        var transform = new transformType(s);\n                        transform.type = type;\n                        this.transforms.push(transform);\n                    }\n                }\n            };\n\n            // aspect ratio\n            svg.AspectRatio = function (ctx, aspectRatio, width, desiredWidth, height, desiredHeight, minX, minY, refX, refY) {\n                // aspect ratio - http://www.w3.org/TR/SVG/coords.html#PreserveAspectRatioAttribute\n                aspectRatio = svg.compressSpaces(aspectRatio);\n                aspectRatio = aspectRatio.replace(/^defer\\s/, ''); // ignore defer\n                var align = aspectRatio.split(' ')[0] || 'xMidYMid';\n                var meetOrSlice = aspectRatio.split(' ')[1] || 'meet';\n\n                // calculate scale\n                var scaleX = width / desiredWidth;\n                var scaleY = height / desiredHeight;\n                var scaleMin = Math.min(scaleX, scaleY);\n                var scaleMax = Math.max(scaleX, scaleY);\n                if (meetOrSlice == 'meet') {\n                    desiredWidth *= scaleMin;\n                    desiredHeight *= scaleMin;\n                }\n                if (meetOrSlice == 'slice') {\n                    desiredWidth *= scaleMax;\n                    desiredHeight *= scaleMax;\n                }\n\n                refX = new svg.Property('refX', refX);\n                refY = new svg.Property('refY', refY);\n                if (refX.hasValue() && refY.hasValue()) {\n                    ctx.translate(-scaleMin * refX.toPixels('x'), -scaleMin * refY.toPixels('y'));\n                } else {\n                    // align\n                    if (align.match(/^xMid/) && ((meetOrSlice == 'meet' && scaleMin == scaleY) || (meetOrSlice == 'slice' && scaleMax == scaleY))) ctx.translate(width / 2.0 - desiredWidth / 2.0, 0);\n                    if (align.match(/YMid$/) && ((meetOrSlice == 'meet' && scaleMin == scaleX) || (meetOrSlice == 'slice' && scaleMax == scaleX))) ctx.translate(0, height / 2.0 - desiredHeight / 2.0);\n                    if (align.match(/^xMax/) && ((meetOrSlice == 'meet' && scaleMin == scaleY) || (meetOrSlice == 'slice' && scaleMax == scaleY))) ctx.translate(width - desiredWidth, 0);\n                    if (align.match(/YMax$/) && ((meetOrSlice == 'meet' && scaleMin == scaleX) || (meetOrSlice == 'slice' && scaleMax == scaleX))) ctx.translate(0, height - desiredHeight);\n                }\n\n                // scale\n                if (align == 'none') ctx.scale(scaleX, scaleY);\n                else if (meetOrSlice == 'meet') ctx.scale(scaleMin, scaleMin);\n                else if (meetOrSlice == 'slice') ctx.scale(scaleMax, scaleMax);\n\n                // translate\n                ctx.translate(minX == null ? 0 : -minX, minY == null ? 0 : -minY);\n            };\n\n            // elements\n            svg.Element = {};\n\n            svg.EmptyProperty = new svg.Property('EMPTY', '');\n\n            svg.Element.ElementBase = function (node) {\n                this.attributes = {};\n                this.styles = {};\n                this.stylesSpecificity = {};\n                this.children = [];\n\n                // get or create attribute\n                this.attribute = function (name, createIfNotExists) {\n                    var a = this.attributes[name];\n                    if (a != null) return a;\n\n                    if (createIfNotExists == true) {\n                        a = new svg.Property(name, '');\n                        this.attributes[name] = a;\n                    }\n                    return a || svg.EmptyProperty;\n                };\n\n                this.getHrefAttribute = function () {\n                    for (var a in this.attributes) {\n                        if (a == 'href' || a.match(/:href$/)) {\n                            return this.attributes[a];\n                        }\n                    }\n                    return svg.EmptyProperty;\n                };\n\n                // get or create style, crawls up node tree\n                this.style = function (name, createIfNotExists, skipAncestors) {\n                    var s = this.styles[name];\n                    if (s != null) return s;\n\n                    var a = this.attribute(name);\n                    if (a != null && a.hasValue()) {\n                        this.styles[name] = a; // move up to me to cache\n                        return a;\n                    }\n\n                    if (skipAncestors != true) {\n                        var p = this.parent;\n                        if (p != null) {\n                            var ps = p.style(name);\n                            if (ps != null && ps.hasValue()) {\n                                return ps;\n                            }\n                        }\n                    }\n\n                    if (createIfNotExists == true) {\n                        s = new svg.Property(name, '');\n                        this.styles[name] = s;\n                    }\n                    return s || svg.EmptyProperty;\n                };\n\n                // base render\n                this.render = function (ctx) {\n                    // don't render display=none\n                    if (this.style('display').value == 'none') return;\n\n                    // don't render visibility=hidden\n                    if (this.style('visibility').value == 'hidden') return;\n\n                    ctx.save();\n                    if (this.style('mask').hasValue()) { // mask\n                        var mask = this.style('mask').getDefinition();\n                        if (mask != null) mask.apply(ctx, this);\n                    } else if (this.style('filter').hasValue()) { // filter\n                        var filter = this.style('filter').getDefinition();\n                        if (filter != null) filter.apply(ctx, this);\n                    } else {\n                        this.setContext(ctx);\n                        this.renderChildren(ctx);\n                        this.clearContext(ctx);\n                    }\n                    ctx.restore();\n                };\n\n                // base set context\n                this.setContext = function (/* ctx */) {\n                    // OVERRIDE ME!\n                };\n\n                // base clear context\n                this.clearContext = function (/* ctx */) {\n                    // OVERRIDE ME!\n                };\n\n                // base render children\n                this.renderChildren = function (ctx) {\n                    for (var i = 0; i < this.children.length; i++) {\n                        this.children[i].render(ctx);\n                    }\n                };\n\n                this.addChild = function (childNode, create) {\n                    var child = childNode;\n                    if (create) child = svg.CreateElement(childNode);\n                    child.parent = this;\n                    if (child.type != 'title') { this.children.push(child); }\n                };\n\n                this.addStylesFromStyleDefinition = function () {\n                    // add styles\n                    for (var selector in svg.Styles) {\n                        if (selector[0] != '@' && matchesSelector(node, selector)) {\n                            var styles = svg.Styles[selector];\n                            var specificity = svg.StylesSpecificity[selector];\n                            if (styles != null) {\n                                for (var name in styles) {\n                                    var existingSpecificity = this.stylesSpecificity[name];\n                                    if (typeof existingSpecificity == 'undefined') {\n                                        existingSpecificity = '000';\n                                    }\n                                    if (specificity >= existingSpecificity) {\n                                        this.styles[name] = styles[name];\n                                        this.stylesSpecificity[name] = specificity;\n                                    }\n                                }\n                            }\n                        }\n                    }\n                };\n\n                // Microsoft Edge fix\n                var allUppercase = new RegExp('^[A-Z\\-]+$');\n                var normalizeAttributeName = function (name) {\n                    if (allUppercase.test(name)) {\n                        return name.toLowerCase();\n                    }\n                    return name;\n                };\n\n                if (node != null && node.nodeType == 1) { //ELEMENT_NODE\n                    // add attributes\n                    for (var i = 0; i < node.attributes.length; i++) {\n                        var attribute = node.attributes[i];\n                        var nodeName = normalizeAttributeName(attribute.nodeName);\n                        this.attributes[nodeName] = new svg.Property(nodeName, attribute.value);\n                    }\n\n                    this.addStylesFromStyleDefinition();\n\n                    // add inline styles\n                    if (this.attribute('style').hasValue()) {\n                        var styles = this.attribute('style').value.split(';');\n                        for (var i = 0; i < styles.length; i++) {\n                            if (svg.trim(styles[i]) != '') {\n                                var style = styles[i].split(':');\n                                var name = svg.trim(style[0]);\n                                var value = svg.trim(style[1]);\n                                this.styles[name] = new svg.Property(name, value);\n                            }\n                        }\n                    }\n\n                    // add id\n                    if (this.attribute('id').hasValue()) {\n                        if (svg.Definitions[this.attribute('id').value] == null) {\n                            svg.Definitions[this.attribute('id').value] = this;\n                        }\n                    }\n\n                    // add children\n                    for (var i = 0; i < node.childNodes.length; i++) {\n                        var childNode = node.childNodes[i];\n                        if (childNode.nodeType == 1) this.addChild(childNode, true); //ELEMENT_NODE\n                        if (this.captureTextNodes && (childNode.nodeType == 3 || childNode.nodeType == 4)) {\n                            var text = childNode.value || childNode.text || childNode.textContent || '';\n                            if (svg.compressSpaces(text) != '') {\n                                this.addChild(new svg.Element.tspan(childNode), false); // TEXT_NODE\n                            }\n                        }\n                    }\n                }\n            };\n\n            svg.Element.RenderedElementBase = function (node) {\n                this.base = svg.Element.ElementBase;\n                this.base(node);\n\n                this.calculateOpacity = function() {\n                    var opacity = 1.0;\n\n                    var el = this;\n                    while (el != null) {\n                        var opacityStyle = el.style('opacity', false, true); // no ancestors on style call\n                        if (opacityStyle.hasValue()) {\n                            opacity = opacity * opacityStyle.numValue();\n                        }\n                        el = el.parent;\n                    }\n\n                    return opacity;\n                };\n\n                this.setContext = function (ctx, fromMeasure) {\n                    if (!fromMeasure) { // causes stack overflow when measuring text with gradients\n                        // fill\n                        if (this.style('fill').isUrlDefinition()) {\n                            var fs = this.style('fill').getFillStyleDefinition(this, this.style('fill-opacity'));\n                            if (fs != null) ctx.fillStyle = fs;\n                        } else if (this.style('fill').hasValue()) {\n                            var fillStyle = this.style('fill');\n                            if (fillStyle.value == 'currentColor') fillStyle.value = this.style('color').value;\n                            if (fillStyle.value != 'inherit') ctx.fillStyle = (fillStyle.value == 'none' ? 'rgba(0,0,0,0)' : fillStyle.value);\n                        }\n                        if (this.style('fill-opacity').hasValue()) {\n                            var fillStyle = new svg.Property('fill', ctx.fillStyle);\n                            fillStyle = fillStyle.addOpacity(this.style('fill-opacity'));\n                            ctx.fillStyle = fillStyle.value;\n                        }\n\n                        // stroke\n                        if (this.style('stroke').isUrlDefinition()) {\n                            var fs = this.style('stroke').getFillStyleDefinition(this, this.style('stroke-opacity'));\n                            if (fs != null) ctx.strokeStyle = fs;\n                        } else if (this.style('stroke').hasValue()) {\n                            var strokeStyle = this.style('stroke');\n                            if (strokeStyle.value == 'currentColor') strokeStyle.value = this.style('color').value;\n                            if (strokeStyle.value != 'inherit') ctx.strokeStyle = (strokeStyle.value == 'none' ? 'rgba(0,0,0,0)' : strokeStyle.value);\n                        }\n                        if (this.style('stroke-opacity').hasValue()) {\n                            var strokeStyle = new svg.Property('stroke', ctx.strokeStyle);\n                            strokeStyle = strokeStyle.addOpacity(this.style('stroke-opacity'));\n                            ctx.strokeStyle = strokeStyle.value;\n                        }\n                        if (this.style('stroke-width').hasValue()) {\n                            var newLineWidth = this.style('stroke-width').toPixels();\n                            ctx.lineWidth = newLineWidth == 0 ? 0.001 : newLineWidth; // browsers don't respect 0\n                        }\n                        if (this.style('stroke-linecap').hasValue()) ctx.lineCap = this.style('stroke-linecap').value;\n                        if (this.style('stroke-linejoin').hasValue()) ctx.lineJoin = this.style('stroke-linejoin').value;\n                        if (this.style('stroke-miterlimit').hasValue()) ctx.miterLimit = this.style('stroke-miterlimit').value;\n                        if (this.style('paint-order').hasValue()) ctx.paintOrder = this.style('paint-order').value;\n                        if (this.style('stroke-dasharray').hasValue() && this.style('stroke-dasharray').value != 'none') {\n                            var gaps = svg.ToNumberArray(this.style('stroke-dasharray').value);\n                            if (typeof ctx.setLineDash != 'undefined') { ctx.setLineDash(gaps); } else if (typeof ctx.webkitLineDash != 'undefined') { ctx.webkitLineDash = gaps; } else if (typeof ctx.mozDash != 'undefined' && !(gaps.length == 1 && gaps[0] == 0)) { ctx.mozDash = gaps; }\n\n                            var offset = this.style('stroke-dashoffset').toPixels();\n                            if (typeof ctx.lineDashOffset != 'undefined') { ctx.lineDashOffset = offset; } else if (typeof ctx.webkitLineDashOffset != 'undefined') { ctx.webkitLineDashOffset = offset; } else if (typeof ctx.mozDashOffset != 'undefined') { ctx.mozDashOffset = offset; }\n                        }\n                    }\n\n                    // font\n                    if (typeof ctx.font != 'undefined') {\n                        ctx.font = svg.Font.CreateFont(\n                            this.style('font-style').value,\n                            this.style('font-variant').value,\n                            this.style('font-weight').value,\n                            this.style('font-size').hasValue() ? this.style('font-size').toPixels() + 'px' : '',\n                            this.style('font-family').value).toString();\n\n                        // update em size if needed\n                        var currentFontSize = this.style('font-size', false, false);\n                        if (currentFontSize.isPixels()) {\n                            svg.emSize = currentFontSize.toPixels();\n                        }\n                    }\n\n                    // transform\n                    if (this.style('transform', false, true).hasValue()) {\n                        var transform = new svg.Transform(this.style('transform', false, true).value);\n                        transform.apply(ctx);\n                    }\n\n                    // clip\n                    if (this.style('clip-path', false, true).hasValue()) {\n                        var clip = this.style('clip-path', false, true).getDefinition();\n                        if (clip != null) clip.apply(ctx);\n                    }\n\n                    // opacity\n                    ctx.globalAlpha = this.calculateOpacity();\n                };\n            };\n            svg.Element.RenderedElementBase.prototype = new svg.Element.ElementBase;\n\n            svg.Element.PathElementBase = function (node) {\n                this.base = svg.Element.RenderedElementBase;\n                this.base(node);\n\n                this.path = function (ctx) {\n                    if (ctx != null) ctx.beginPath();\n                    return new svg.BoundingBox();\n                };\n\n                this.renderChildren = function (ctx) {\n                    this.path(ctx);\n                    svg.Mouse.checkPath(this, ctx);\n                    if (ctx.fillStyle != '') {\n                        if (this.style('fill-rule').valueOrDefault('inherit') != 'inherit') { ctx.fill(this.style('fill-rule').value); } else { ctx.fill(); }\n                    }\n                    if (ctx.strokeStyle != '') ctx.stroke();\n\n                    var markers = this.getMarkers();\n                    if (markers != null) {\n                        if (this.style('marker-start').isUrlDefinition()) {\n                            var marker = this.style('marker-start').getDefinition();\n                            marker.render(ctx, markers[0][0], markers[0][1]);\n                        }\n                        if (this.style('marker-mid').isUrlDefinition()) {\n                            var marker = this.style('marker-mid').getDefinition();\n                            for (var i = 1; i < markers.length - 1; i++) {\n                                marker.render(ctx, markers[i][0], markers[i][1]);\n                            }\n                        }\n                        if (this.style('marker-end').isUrlDefinition()) {\n                            var marker = this.style('marker-end').getDefinition();\n                            marker.render(ctx, markers[markers.length - 1][0], markers[markers.length - 1][1]);\n                        }\n                    }\n                };\n\n                this.getBoundingBox = function () {\n                    return this.path();\n                };\n\n                this.getMarkers = function () {\n                    return null;\n                };\n            };\n            svg.Element.PathElementBase.prototype = new svg.Element.RenderedElementBase;\n\n            // svg element\n            svg.Element.svg = function (node) {\n                this.base = svg.Element.RenderedElementBase;\n                this.base(node);\n\n                this.baseClearContext = this.clearContext;\n                this.clearContext = function (ctx) {\n                    this.baseClearContext(ctx);\n                    svg.ViewPort.RemoveCurrent();\n                };\n\n                this.baseSetContext = this.setContext;\n                this.setContext = function (ctx) {\n                    // initial values and defaults\n                    ctx.strokeStyle = 'rgba(0,0,0,0)';\n                    ctx.lineCap = 'butt';\n                    ctx.lineJoin = 'miter';\n                    ctx.miterLimit = 4;\n                    if (ctx.canvas.style && typeof ctx.font != 'undefined' && typeof windowEnv.getComputedStyle != 'undefined') {\n                        ctx.font = windowEnv.getComputedStyle(ctx.canvas).getPropertyValue('font');\n\n                        var fontSize = new svg.Property('fontSize', svg.Font.Parse(ctx.font).fontSize);\n                        if (fontSize.hasValue()) svg.rootEmSize = svg.emSize = fontSize.toPixels('y');\n                    }\n\n                    this.baseSetContext(ctx);\n\n                    // create new view port\n                    if (!this.attribute('x').hasValue()) this.attribute('x', true).value = 0;\n                    if (!this.attribute('y').hasValue()) this.attribute('y', true).value = 0;\n                    ctx.translate(this.attribute('x').toPixels('x'), this.attribute('y').toPixels('y'));\n\n                    var width = svg.ViewPort.width();\n                    var height = svg.ViewPort.height();\n\n                    if (!this.attribute('width').hasValue()) this.attribute('width', true).value = '100%';\n                    if (!this.attribute('height').hasValue()) this.attribute('height', true).value = '100%';\n                    if (typeof this.root == 'undefined') {\n                        width = this.attribute('width').toPixels('x');\n                        height = this.attribute('height').toPixels('y');\n\n                        var x = 0;\n                        var y = 0;\n                        if (this.attribute('refX').hasValue() && this.attribute('refY').hasValue()) {\n                            x = -this.attribute('refX').toPixels('x');\n                            y = -this.attribute('refY').toPixels('y');\n                        }\n\n                        if (this.attribute('overflow').valueOrDefault('hidden') != 'visible') {\n                            ctx.beginPath();\n                            ctx.moveTo(x, y);\n                            ctx.lineTo(width, y);\n                            ctx.lineTo(width, height);\n                            ctx.lineTo(x, height);\n                            ctx.closePath();\n                            ctx.clip();\n                        }\n                    }\n                    svg.ViewPort.SetCurrent(width, height);\n\n                    // viewbox\n                    if (this.attribute('viewBox').hasValue()) {\n                        var viewBox = svg.ToNumberArray(this.attribute('viewBox').value);\n                        var minX = viewBox[0];\n                        var minY = viewBox[1];\n                        width = viewBox[2];\n                        height = viewBox[3];\n\n                        svg.AspectRatio(ctx,\n                            this.attribute('preserveAspectRatio').value,\n                            svg.ViewPort.width(),\n                            width,\n                            svg.ViewPort.height(),\n                            height,\n                            minX,\n                            minY,\n                            this.attribute('refX').value,\n                            this.attribute('refY').value);\n\n                        svg.ViewPort.RemoveCurrent();\n                        svg.ViewPort.SetCurrent(viewBox[2], viewBox[3]);\n                    }\n                };\n            };\n            svg.Element.svg.prototype = new svg.Element.RenderedElementBase;\n\n            // rect element\n            svg.Element.rect = function (node) {\n                this.base = svg.Element.PathElementBase;\n                this.base(node);\n\n                this.path = function (ctx) {\n                    var x = this.attribute('x').toPixels('x');\n                    var y = this.attribute('y').toPixels('y');\n                    var width = this.attribute('width').toPixels('x');\n                    var height = this.attribute('height').toPixels('y');\n                    var rx = this.attribute('rx').toPixels('x');\n                    var ry = this.attribute('ry').toPixels('y');\n                    if (this.attribute('rx').hasValue() && !this.attribute('ry').hasValue()) ry = rx;\n                    if (this.attribute('ry').hasValue() && !this.attribute('rx').hasValue()) rx = ry;\n                    rx = Math.min(rx, width / 2.0);\n                    ry = Math.min(ry, height / 2.0);\n                    if (ctx != null) {\n                        var KAPPA = 4 * ((Math.sqrt(2) - 1) / 3);\n                        ctx.beginPath();\n                        ctx.moveTo(x + rx, y);\n                        ctx.lineTo(x + width - rx, y);\n                        ctx.bezierCurveTo(x + width - rx + (KAPPA * rx), y, x + width, y + ry - (KAPPA * ry), x + width, y + ry);\n                        ctx.lineTo(x + width, y + height - ry);\n                        ctx.bezierCurveTo(x + width, y + height - ry + (KAPPA * ry), x + width - rx + (KAPPA * rx), y + height, x + width - rx, y + height);\n                        ctx.lineTo(x + rx, y + height);\n                        ctx.bezierCurveTo(x + rx - (KAPPA * rx), y + height, x, y + height - ry + (KAPPA * ry), x, y + height - ry);\n                        ctx.lineTo(x, y + ry);\n                        ctx.bezierCurveTo(x, y + ry - (KAPPA * ry), x + rx - (KAPPA * rx), y, x + rx, y);\n                        ctx.closePath();\n                    }\n\n                    return new svg.BoundingBox(x, y, x + width, y + height);\n                };\n            };\n            svg.Element.rect.prototype = new svg.Element.PathElementBase;\n\n            // circle element\n            svg.Element.circle = function (node) {\n                this.base = svg.Element.PathElementBase;\n                this.base(node);\n\n                this.path = function (ctx) {\n                    var cx = this.attribute('cx').toPixels('x');\n                    var cy = this.attribute('cy').toPixels('y');\n                    var r = this.attribute('r').toPixels();\n\n                    if (ctx != null) {\n                        ctx.beginPath();\n                        ctx.arc(cx, cy, r, 0, Math.PI * 2, false);\n                        ctx.closePath();\n                    }\n\n                    return new svg.BoundingBox(cx - r, cy - r, cx + r, cy + r);\n                };\n            };\n            svg.Element.circle.prototype = new svg.Element.PathElementBase;\n\n            // ellipse element\n            svg.Element.ellipse = function (node) {\n                this.base = svg.Element.PathElementBase;\n                this.base(node);\n\n                this.path = function (ctx) {\n                    var KAPPA = 4 * ((Math.sqrt(2) - 1) / 3);\n                    var rx = this.attribute('rx').toPixels('x');\n                    var ry = this.attribute('ry').toPixels('y');\n                    var cx = this.attribute('cx').toPixels('x');\n                    var cy = this.attribute('cy').toPixels('y');\n\n                    if (ctx != null) {\n                        ctx.beginPath();\n                        ctx.moveTo(cx + rx, cy);\n                        ctx.bezierCurveTo(cx + rx, cy + (KAPPA * ry), cx + (KAPPA * rx), cy + ry, cx, cy + ry);\n                        ctx.bezierCurveTo(cx - (KAPPA * rx), cy + ry, cx - rx, cy + (KAPPA * ry), cx - rx, cy);\n                        ctx.bezierCurveTo(cx - rx, cy - (KAPPA * ry), cx - (KAPPA * rx), cy - ry, cx, cy - ry);\n                        ctx.bezierCurveTo(cx + (KAPPA * rx), cy - ry, cx + rx, cy - (KAPPA * ry), cx + rx, cy);\n                        ctx.closePath();\n                    }\n\n                    return new svg.BoundingBox(cx - rx, cy - ry, cx + rx, cy + ry);\n                };\n            };\n            svg.Element.ellipse.prototype = new svg.Element.PathElementBase;\n\n            // line element\n            svg.Element.line = function (node) {\n                this.base = svg.Element.PathElementBase;\n                this.base(node);\n\n                this.getPoints = function () {\n                    return [\n                        new svg.Point(this.attribute('x1').toPixels('x'), this.attribute('y1').toPixels('y')),\n                        new svg.Point(this.attribute('x2').toPixels('x'), this.attribute('y2').toPixels('y'))\n                    ];\n                };\n\n                this.path = function (ctx) {\n                    var points = this.getPoints();\n\n                    if (ctx != null) {\n                        ctx.beginPath();\n                        ctx.moveTo(points[0].x, points[0].y);\n                        ctx.lineTo(points[1].x, points[1].y);\n                    }\n\n                    return new svg.BoundingBox(points[0].x, points[0].y, points[1].x, points[1].y);\n                };\n\n                this.getMarkers = function () {\n                    var points = this.getPoints();\n                    var a = points[0].angleTo(points[1]);\n                    return [\n                        [points[0], a],\n                        [points[1], a]\n                    ];\n                };\n            };\n            svg.Element.line.prototype = new svg.Element.PathElementBase;\n\n            // polyline element\n            svg.Element.polyline = function (node) {\n                this.base = svg.Element.PathElementBase;\n                this.base(node);\n\n                this.points = svg.CreatePath(this.attribute('points').value);\n                this.path = function (ctx) {\n                    var bb = new svg.BoundingBox(this.points[0].x, this.points[0].y);\n                    if (ctx != null) {\n                        ctx.beginPath();\n                        ctx.moveTo(this.points[0].x, this.points[0].y);\n                    }\n                    for (var i = 1; i < this.points.length; i++) {\n                        bb.addPoint(this.points[i].x, this.points[i].y);\n                        if (ctx != null) ctx.lineTo(this.points[i].x, this.points[i].y);\n                    }\n                    return bb;\n                };\n\n                this.getMarkers = function () {\n                    var markers = [];\n                    for (var i = 0; i < this.points.length - 1; i++) {\n                        markers.push([this.points[i], this.points[i].angleTo(this.points[i + 1])]);\n                    }\n                    if (markers.length > 0) {\n                        markers.push([this.points[this.points.length - 1], markers[markers.length - 1][1]]);\n                    }\n                    return markers;\n                };\n            };\n            svg.Element.polyline.prototype = new svg.Element.PathElementBase;\n\n            // polygon element\n            svg.Element.polygon = function (node) {\n                this.base = svg.Element.polyline;\n                this.base(node);\n\n                this.basePath = this.path;\n                this.path = function (ctx) {\n                    var bb = this.basePath(ctx);\n                    if (ctx != null) {\n                        ctx.lineTo(this.points[0].x, this.points[0].y);\n                        ctx.closePath();\n                    }\n                    return bb;\n                };\n            };\n            svg.Element.polygon.prototype = new svg.Element.polyline;\n\n            // path element\n            svg.Element.path = function (node) {\n                this.base = svg.Element.PathElementBase;\n                this.base(node);\n\n                var d = this.attribute('d').value;\n                // TODO: convert to real lexer based on http://www.w3.org/TR/SVG11/paths.html#PathDataBNF\n                d = d.replace(/,/gm, ' '); // get rid of all commas\n                // As the end of a match can also be the start of the next match, we need to run this replace twice.\n                for (var i = 0; i < 2; i++)\n                    d = d.replace(/([MmZzLlHhVvCcSsQqTtAa])([^\\s])/gm, '$1 $2'); // suffix commands with spaces\n                d = d.replace(/([^\\s])([MmZzLlHhVvCcSsQqTtAa])/gm, '$1 $2'); // prefix commands with spaces\n                d = d.replace(/([0-9])([+\\-])/gm, '$1 $2'); // separate digits on +- signs\n                // Again, we need to run this twice to find all occurances\n                for (var i = 0; i < 2; i++)\n                    d = d.replace(/(\\.[0-9]*)(\\.)/gm, '$1 $2'); // separate digits when they start with a comma\n                d = d.replace(/([Aa](\\s+[0-9]+){3})\\s+([01])\\s*([01])/gm, '$1 $3 $4 '); // shorthand elliptical arc path syntax\n                d = svg.compressSpaces(d); // compress multiple spaces\n                d = svg.trim(d);\n                this.PathParser = new (function (d) {\n                    this.tokens = d.split(' ');\n\n                    this.reset = function () {\n                        this.i = -1;\n                        this.command = '';\n                        this.previousCommand = '';\n                        this.start = new svg.Point(0, 0);\n                        this.control = new svg.Point(0, 0);\n                        this.current = new svg.Point(0, 0);\n                        this.points = [];\n                        this.angles = [];\n                    };\n\n                    this.isEnd = function () {\n                        return this.i >= this.tokens.length - 1;\n                    };\n\n                    this.isCommandOrEnd = function () {\n                        if (this.isEnd()) return true;\n                        return this.tokens[this.i + 1].match(/^[A-Za-z]$/) != null;\n                    };\n\n                    this.isRelativeCommand = function () {\n                        switch (this.command) {\n                            case 'm':\n                            case 'l':\n                            case 'h':\n                            case 'v':\n                            case 'c':\n                            case 's':\n                            case 'q':\n                            case 't':\n                            case 'a':\n                            case 'z':\n                                return true;\n                        }\n                        return false;\n                    };\n\n                    this.getToken = function () {\n                        this.i++;\n                        return this.tokens[this.i];\n                    };\n\n                    this.getScalar = function () {\n                        return parseFloat(this.getToken());\n                    };\n\n                    this.nextCommand = function () {\n                        this.previousCommand = this.command;\n                        this.command = this.getToken();\n                    };\n\n                    this.getPoint = function () {\n                        var p = new svg.Point(this.getScalar(), this.getScalar());\n                        return this.makeAbsolute(p);\n                    };\n\n                    this.getAsControlPoint = function () {\n                        var p = this.getPoint();\n                        this.control = p;\n                        return p;\n                    };\n\n                    this.getAsCurrentPoint = function () {\n                        var p = this.getPoint();\n                        this.current = p;\n                        return p;\n                    };\n\n                    this.getReflectedControlPoint = function () {\n                        if (this.previousCommand.toLowerCase() != 'c' &&\n                            this.previousCommand.toLowerCase() != 's' &&\n                            this.previousCommand.toLowerCase() != 'q' &&\n                            this.previousCommand.toLowerCase() != 't') {\n                            return this.current;\n                        }\n\n                        // reflect point\n                        var p = new svg.Point(2 * this.current.x - this.control.x, 2 * this.current.y - this.control.y);\n                        return p;\n                    };\n\n                    this.makeAbsolute = function (p) {\n                        if (this.isRelativeCommand()) {\n                            p.x += this.current.x;\n                            p.y += this.current.y;\n                        }\n                        return p;\n                    };\n\n                    this.addMarker = function (p, from, priorTo) {\n                        // if the last angle isn't filled in because we didn't have this point yet ...\n                        if (priorTo != null && this.angles.length > 0 && this.angles[this.angles.length - 1] == null) {\n                            this.angles[this.angles.length - 1] = this.points[this.points.length - 1].angleTo(priorTo);\n                        }\n                        this.addMarkerAngle(p, from == null ? null : from.angleTo(p));\n                    };\n\n                    this.addMarkerAngle = function (p, a) {\n                        this.points.push(p);\n                        this.angles.push(a);\n                    };\n\n                    this.getMarkerPoints = function () { return this.points; };\n                    this.getMarkerAngles = function () {\n                        for (var i = 0; i < this.angles.length; i++) {\n                            if (this.angles[i] == null) {\n                                for (var j = i + 1; j < this.angles.length; j++) {\n                                    if (this.angles[j] != null) {\n                                        this.angles[i] = this.angles[j];\n                                        break;\n                                    }\n                                }\n                            }\n                        }\n                        return this.angles;\n                    };\n                })(d);\n\n                this.path = function (ctx) {\n                    var pp = this.PathParser;\n                    pp.reset();\n\n                    var bb = new svg.BoundingBox();\n                    if (ctx != null) ctx.beginPath();\n                    while (!pp.isEnd()) {\n                        pp.nextCommand();\n                        switch (pp.command) {\n                            case 'M':\n                            case 'm':\n                                var p = pp.getAsCurrentPoint();\n                                pp.addMarker(p);\n                                bb.addPoint(p.x, p.y);\n                                if (ctx != null) ctx.moveTo(p.x, p.y);\n                                pp.start = pp.current;\n                                while (!pp.isCommandOrEnd()) {\n                                    var p = pp.getAsCurrentPoint();\n                                    pp.addMarker(p, pp.start);\n                                    bb.addPoint(p.x, p.y);\n                                    if (ctx != null) ctx.lineTo(p.x, p.y);\n                                }\n                                break;\n                            case 'L':\n                            case 'l':\n                                while (!pp.isCommandOrEnd()) {\n                                    var c = pp.current;\n                                    var p = pp.getAsCurrentPoint();\n                                    pp.addMarker(p, c);\n                                    bb.addPoint(p.x, p.y);\n                                    if (ctx != null) ctx.lineTo(p.x, p.y);\n                                }\n                                break;\n                            case 'H':\n                            case 'h':\n                                while (!pp.isCommandOrEnd()) {\n                                    var newP = new svg.Point((pp.isRelativeCommand() ? pp.current.x : 0) + pp.getScalar(), pp.current.y);\n                                    pp.addMarker(newP, pp.current);\n                                    pp.current = newP;\n                                    bb.addPoint(pp.current.x, pp.current.y);\n                                    if (ctx != null) ctx.lineTo(pp.current.x, pp.current.y);\n                                }\n                                break;\n                            case 'V':\n                            case 'v':\n                                while (!pp.isCommandOrEnd()) {\n                                    var newP = new svg.Point(pp.current.x, (pp.isRelativeCommand() ? pp.current.y : 0) + pp.getScalar());\n                                    pp.addMarker(newP, pp.current);\n                                    pp.current = newP;\n                                    bb.addPoint(pp.current.x, pp.current.y);\n                                    if (ctx != null) ctx.lineTo(pp.current.x, pp.current.y);\n                                }\n                                break;\n                            case 'C':\n                            case 'c':\n                                while (!pp.isCommandOrEnd()) {\n                                    var curr = pp.current;\n                                    var p1 = pp.getPoint();\n                                    var cntrl = pp.getAsControlPoint();\n                                    var cp = pp.getAsCurrentPoint();\n                                    pp.addMarker(cp, cntrl, p1);\n                                    bb.addBezierCurve(curr.x, curr.y, p1.x, p1.y, cntrl.x, cntrl.y, cp.x, cp.y);\n                                    if (ctx != null) ctx.bezierCurveTo(p1.x, p1.y, cntrl.x, cntrl.y, cp.x, cp.y);\n                                }\n                                break;\n                            case 'S':\n                            case 's':\n                                while (!pp.isCommandOrEnd()) {\n                                    var curr = pp.current;\n                                    var p1 = pp.getReflectedControlPoint();\n                                    var cntrl = pp.getAsControlPoint();\n                                    var cp = pp.getAsCurrentPoint();\n                                    pp.addMarker(cp, cntrl, p1);\n                                    bb.addBezierCurve(curr.x, curr.y, p1.x, p1.y, cntrl.x, cntrl.y, cp.x, cp.y);\n                                    if (ctx != null) ctx.bezierCurveTo(p1.x, p1.y, cntrl.x, cntrl.y, cp.x, cp.y);\n                                }\n                                break;\n                            case 'Q':\n                            case 'q':\n                                while (!pp.isCommandOrEnd()) {\n                                    var curr = pp.current;\n                                    var cntrl = pp.getAsControlPoint();\n                                    var cp = pp.getAsCurrentPoint();\n                                    pp.addMarker(cp, cntrl, cntrl);\n                                    bb.addQuadraticCurve(curr.x, curr.y, cntrl.x, cntrl.y, cp.x, cp.y);\n                                    if (ctx != null) ctx.quadraticCurveTo(cntrl.x, cntrl.y, cp.x, cp.y);\n                                }\n                                break;\n                            case 'T':\n                            case 't':\n                                while (!pp.isCommandOrEnd()) {\n                                    var curr = pp.current;\n                                    var cntrl = pp.getReflectedControlPoint();\n                                    pp.control = cntrl;\n                                    var cp = pp.getAsCurrentPoint();\n                                    pp.addMarker(cp, cntrl, cntrl);\n                                    bb.addQuadraticCurve(curr.x, curr.y, cntrl.x, cntrl.y, cp.x, cp.y);\n                                    if (ctx != null) ctx.quadraticCurveTo(cntrl.x, cntrl.y, cp.x, cp.y);\n                                }\n                                break;\n                            case 'A':\n                            case 'a':\n                                while (!pp.isCommandOrEnd()) {\n                                    var curr = pp.current;\n                                    var rx = pp.getScalar();\n                                    var ry = pp.getScalar();\n                                    var xAxisRotation = pp.getScalar() * (Math.PI / 180.0);\n                                    var largeArcFlag = pp.getScalar();\n                                    var sweepFlag = pp.getScalar();\n                                    var cp = pp.getAsCurrentPoint();\n\n                                    // Conversion from endpoint to center parameterization\n                                    // http://www.w3.org/TR/SVG11/implnote.html#ArcImplementationNotes\n                                    // x1', y1'\n                                    var currp = new svg.Point(\n                                        Math.cos(xAxisRotation) * (curr.x - cp.x) / 2.0 + Math.sin(xAxisRotation) * (curr.y - cp.y) / 2.0, -Math.sin(xAxisRotation) * (curr.x - cp.x) / 2.0 + Math.cos(xAxisRotation) * (curr.y - cp.y) / 2.0\n                                    );\n                                    // adjust radii\n                                    var l = Math.pow(currp.x, 2) / Math.pow(rx, 2) + Math.pow(currp.y, 2) / Math.pow(ry, 2);\n                                    if (l > 1) {\n                                        rx *= Math.sqrt(l);\n                                        ry *= Math.sqrt(l);\n                                    }\n                                    // cx', cy'\n                                    var s = (largeArcFlag == sweepFlag ? -1 : 1) * Math.sqrt(\n                                        ((Math.pow(rx, 2) * Math.pow(ry, 2)) - (Math.pow(rx, 2) * Math.pow(currp.y, 2)) - (Math.pow(ry, 2) * Math.pow(currp.x, 2))) /\n                                        (Math.pow(rx, 2) * Math.pow(currp.y, 2) + Math.pow(ry, 2) * Math.pow(currp.x, 2))\n                                    );\n                                    if (isNaN(s)) s = 0;\n                                    var cpp = new svg.Point(s * rx * currp.y / ry, s * -ry * currp.x / rx);\n                                    // cx, cy\n                                    var centp = new svg.Point(\n                                        (curr.x + cp.x) / 2.0 + Math.cos(xAxisRotation) * cpp.x - Math.sin(xAxisRotation) * cpp.y,\n                                        (curr.y + cp.y) / 2.0 + Math.sin(xAxisRotation) * cpp.x + Math.cos(xAxisRotation) * cpp.y\n                                    );\n                                    // vector magnitude\n                                    var m = function (v) { return Math.sqrt(Math.pow(v[0], 2) + Math.pow(v[1], 2)); };\n                                    // ratio between two vectors\n                                    var r = function (u, v) { return (u[0] * v[0] + u[1] * v[1]) / (m(u) * m(v)) };\n                                    // angle between two vectors\n                                    var a = function (u, v) { return (u[0] * v[1] < u[1] * v[0] ? -1 : 1) * Math.acos(r(u, v)); };\n                                    // initial angle\n                                    var a1 = a([1, 0], [(currp.x - cpp.x) / rx, (currp.y - cpp.y) / ry]);\n                                    // angle delta\n                                    var u = [(currp.x - cpp.x) / rx, (currp.y - cpp.y) / ry];\n                                    var v = [(-currp.x - cpp.x) / rx, (-currp.y - cpp.y) / ry];\n                                    var ad = a(u, v);\n                                    if (r(u, v) <= -1) ad = Math.PI;\n                                    if (r(u, v) >= 1) ad = 0;\n\n                                    // for markers\n                                    var dir = 1 - sweepFlag ? 1.0 : -1.0;\n                                    var ah = a1 + dir * (ad / 2.0);\n                                    var halfWay = new svg.Point(\n                                        centp.x + rx * Math.cos(ah),\n                                        centp.y + ry * Math.sin(ah)\n                                    );\n                                    pp.addMarkerAngle(halfWay, ah - dir * Math.PI / 2);\n                                    pp.addMarkerAngle(cp, ah - dir * Math.PI);\n\n                                    bb.addPoint(cp.x, cp.y); // TODO: this is too naive, make it better\n                                    if (ctx != null && !isNaN(a1) && !isNaN(ad)) {\n                                        var r = rx > ry ? rx : ry;\n                                        var sx = rx > ry ? 1 : rx / ry;\n                                        var sy = rx > ry ? ry / rx : 1;\n\n                                        ctx.translate(centp.x, centp.y);\n                                        ctx.rotate(xAxisRotation);\n                                        ctx.scale(sx, sy);\n                                        ctx.arc(0, 0, r, a1, a1 + ad, 1 - sweepFlag);\n                                        ctx.scale(1 / sx, 1 / sy);\n                                        ctx.rotate(-xAxisRotation);\n                                        ctx.translate(-centp.x, -centp.y);\n                                    }\n                                }\n                                break;\n                            case 'Z':\n                            case 'z':\n                                if (ctx != null) {\n                                    // only close path if it is not a straight line\n                                    if (bb.x1 !== bb.x2 && bb.y1 !== bb.y2) {\n                                        ctx.closePath();\n                                    }\n                                }\n                                pp.current = pp.start;\n                        }\n                    }\n\n                    return bb;\n                };\n\n                this.getMarkers = function () {\n                    var points = this.PathParser.getMarkerPoints();\n                    var angles = this.PathParser.getMarkerAngles();\n\n                    var markers = [];\n                    for (var i = 0; i < points.length; i++) {\n                        markers.push([points[i], angles[i]]);\n                    }\n                    return markers;\n                };\n            };\n            svg.Element.path.prototype = new svg.Element.PathElementBase;\n\n            // pattern element\n            svg.Element.pattern = function (node) {\n                this.base = svg.Element.ElementBase;\n                this.base(node);\n\n                this.createPattern = function (ctx /* , element */) {\n                    var width = this.attribute('width').toPixels('x', true);\n                    var height = this.attribute('height').toPixels('y', true);\n\n                    // render me using a temporary svg element\n                    var tempSvg = new svg.Element.svg();\n                    tempSvg.attributes['viewBox'] = new svg.Property('viewBox', this.attribute('viewBox').value);\n                    tempSvg.attributes['width'] = new svg.Property('width', width + 'px');\n                    tempSvg.attributes['height'] = new svg.Property('height', height + 'px');\n                    tempSvg.attributes['transform'] = new svg.Property('transform', this.attribute('patternTransform').value);\n                    tempSvg.children = this.children;\n\n                    var c = createCanvas(width, height);\n                    var cctx = c.getContext('2d');\n                    if (this.attribute('x').hasValue() && this.attribute('y').hasValue()) {\n                        cctx.translate(this.attribute('x').toPixels('x', true), this.attribute('y').toPixels('y', true));\n                    }\n                    // render 3x3 grid so when we transform there's no white space on edges\n                    for (var x = -1; x <= 1; x++) {\n                        for (var y = -1; y <= 1; y++) {\n                            cctx.save();\n                            tempSvg.attributes['x'] = new svg.Property('x', x * c.width);\n                            tempSvg.attributes['y'] = new svg.Property('y', y * c.height);\n                            tempSvg.render(cctx);\n                            cctx.restore();\n                        }\n                    }\n                    var pattern = ctx.createPattern(c, 'repeat');\n                    return pattern;\n                };\n            };\n            svg.Element.pattern.prototype = new svg.Element.ElementBase;\n\n            // marker element\n            svg.Element.marker = function (node) {\n                this.base = svg.Element.ElementBase;\n                this.base(node);\n\n                this.baseRender = this.render;\n                this.render = function (ctx, point, angle) {\n                    if (!point) { return; }\n                    ctx.translate(point.x, point.y);\n                    if (this.attribute('orient').valueOrDefault('auto') == 'auto') ctx.rotate(angle);\n                    if (this.attribute('markerUnits').valueOrDefault('strokeWidth') == 'strokeWidth') ctx.scale(ctx.lineWidth, ctx.lineWidth);\n                    ctx.save();\n\n                    // render me using a temporary svg element\n                    var tempSvg = new svg.Element.svg();\n                    tempSvg.attributes['viewBox'] = new svg.Property('viewBox', this.attribute('viewBox').value);\n                    tempSvg.attributes['refX'] = new svg.Property('refX', this.attribute('refX').value);\n                    tempSvg.attributes['refY'] = new svg.Property('refY', this.attribute('refY').value);\n                    tempSvg.attributes['width'] = new svg.Property('width', this.attribute('markerWidth').value);\n                    tempSvg.attributes['height'] = new svg.Property('height', this.attribute('markerHeight').value);\n                    tempSvg.attributes['fill'] = new svg.Property('fill', this.attribute('fill').valueOrDefault('black'));\n                    tempSvg.attributes['stroke'] = new svg.Property('stroke', this.attribute('stroke').valueOrDefault('none'));\n                    tempSvg.children = this.children;\n                    tempSvg.render(ctx);\n\n                    ctx.restore();\n                    if (this.attribute('markerUnits').valueOrDefault('strokeWidth') == 'strokeWidth') ctx.scale(1 / ctx.lineWidth, 1 / ctx.lineWidth);\n                    if (this.attribute('orient').valueOrDefault('auto') == 'auto') ctx.rotate(-angle);\n                    ctx.translate(-point.x, -point.y);\n                };\n            };\n            svg.Element.marker.prototype = new svg.Element.ElementBase;\n\n            // definitions element\n            svg.Element.defs = function (node) {\n                this.base = svg.Element.ElementBase;\n                this.base(node);\n\n                this.render = function (/* ctx */) {\n                    // NOOP\n                };\n            };\n            svg.Element.defs.prototype = new svg.Element.ElementBase;\n\n            // base for gradients\n            svg.Element.GradientBase = function (node) {\n                this.base = svg.Element.ElementBase;\n                this.base(node);\n\n                this.stops = [];\n                for (var i = 0; i < this.children.length; i++) {\n                    var child = this.children[i];\n                    if (child.type == 'stop') this.stops.push(child);\n                }\n\n                this.getGradient = function () {\n                    // OVERRIDE ME!\n                };\n\n                this.gradientUnits = function () {\n                    return this.attribute('gradientUnits').valueOrDefault('objectBoundingBox');\n                };\n\n                this.attributesToInherit = ['gradientUnits'];\n\n                this.inheritStopContainer = function (stopsContainer) {\n                    for (var i = 0; i < this.attributesToInherit.length; i++) {\n                        var attributeToInherit = this.attributesToInherit[i];\n                        if (!this.attribute(attributeToInherit).hasValue() && stopsContainer.attribute(attributeToInherit).hasValue()) {\n                            this.attribute(attributeToInherit, true).value = stopsContainer.attribute(attributeToInherit).value;\n                        }\n                    }\n                };\n\n                this.createGradient = function (ctx, element, parentOpacityProp) {\n                    var stopsContainer = this;\n                    if (this.getHrefAttribute().hasValue()) {\n                        stopsContainer = this.getHrefAttribute().getDefinition();\n                        this.inheritStopContainer(stopsContainer);\n                    }\n\n                    var addParentOpacity = function (color) {\n                        if (parentOpacityProp.hasValue()) {\n                            var p = new svg.Property('color', color);\n                            return p.addOpacity(parentOpacityProp).value;\n                        }\n                        return color;\n                    };\n\n                    var g = this.getGradient(ctx, element);\n                    if (g == null) return addParentOpacity(stopsContainer.stops[stopsContainer.stops.length - 1].color);\n                    for (var i = 0; i < stopsContainer.stops.length; i++) {\n                        g.addColorStop(stopsContainer.stops[i].offset, addParentOpacity(stopsContainer.stops[i].color));\n                    }\n\n                    if (this.attribute('gradientTransform').hasValue()) {\n                        // render as transformed pattern on temporary canvas\n                        var rootView = svg.ViewPort.viewPorts[0];\n\n                        var rect = new svg.Element.rect();\n                        rect.attributes['x'] = new svg.Property('x', -svg.MAX_VIRTUAL_PIXELS / 3.0);\n                        rect.attributes['y'] = new svg.Property('y', -svg.MAX_VIRTUAL_PIXELS / 3.0);\n                        rect.attributes['width'] = new svg.Property('width', svg.MAX_VIRTUAL_PIXELS);\n                        rect.attributes['height'] = new svg.Property('height', svg.MAX_VIRTUAL_PIXELS);\n\n                        var group = new svg.Element.g();\n                        group.attributes['transform'] = new svg.Property('transform', this.attribute('gradientTransform').value);\n                        group.children = [rect];\n\n                        var tempSvg = new svg.Element.svg();\n                        tempSvg.attributes['x'] = new svg.Property('x', 0);\n                        tempSvg.attributes['y'] = new svg.Property('y', 0);\n                        tempSvg.attributes['width'] = new svg.Property('width', rootView.width);\n                        tempSvg.attributes['height'] = new svg.Property('height', rootView.height);\n                        tempSvg.children = [group];\n                        var c = createCanvas(rootView.width, rootView.height);\n                        var tempCtx = c.getContext('2d');\n                        tempCtx.fillStyle = g;\n                        tempSvg.render(tempCtx);\n                        return tempCtx.createPattern(c, 'no-repeat');\n                    }\n\n                    return g;\n                };\n            };\n            svg.Element.GradientBase.prototype = new svg.Element.ElementBase;\n\n            // linear gradient element\n            svg.Element.linearGradient = function (node) {\n                this.base = svg.Element.GradientBase;\n                this.base(node);\n\n                this.attributesToInherit.push('x1');\n                this.attributesToInherit.push('y1');\n                this.attributesToInherit.push('x2');\n                this.attributesToInherit.push('y2');\n\n                this.getGradient = function (ctx, element) {\n                    var bb = this.gradientUnits() == 'objectBoundingBox' ? element.getBoundingBox(ctx) : null;\n\n                    if (!this.attribute('x1').hasValue() &&\n                        !this.attribute('y1').hasValue() &&\n                        !this.attribute('x2').hasValue() &&\n                        !this.attribute('y2').hasValue()) {\n                        this.attribute('x1', true).value = 0;\n                        this.attribute('y1', true).value = 0;\n                        this.attribute('x2', true).value = 1;\n                        this.attribute('y2', true).value = 0;\n                    }\n\n                    var x1 = (this.gradientUnits() == 'objectBoundingBox' ?\n                        bb.x() + bb.width() * this.attribute('x1').numValue() :\n                        this.attribute('x1').toPixels('x'));\n                    var y1 = (this.gradientUnits() == 'objectBoundingBox' ?\n                        bb.y() + bb.height() * this.attribute('y1').numValue() :\n                        this.attribute('y1').toPixels('y'));\n                    var x2 = (this.gradientUnits() == 'objectBoundingBox' ?\n                        bb.x() + bb.width() * this.attribute('x2').numValue() :\n                        this.attribute('x2').toPixels('x'));\n                    var y2 = (this.gradientUnits() == 'objectBoundingBox' ?\n                        bb.y() + bb.height() * this.attribute('y2').numValue() :\n                        this.attribute('y2').toPixels('y'));\n\n                    if (x1 == x2 && y1 == y2) return null;\n                    return ctx.createLinearGradient(x1, y1, x2, y2);\n                };\n            };\n            svg.Element.linearGradient.prototype = new svg.Element.GradientBase;\n\n            // radial gradient element\n            svg.Element.radialGradient = function (node) {\n                this.base = svg.Element.GradientBase;\n                this.base(node);\n\n                this.attributesToInherit.push('cx');\n                this.attributesToInherit.push('cy');\n                this.attributesToInherit.push('r');\n                this.attributesToInherit.push('fx');\n                this.attributesToInherit.push('fy');\n\n                this.getGradient = function (ctx, element) {\n                    var bb = element.getBoundingBox(ctx);\n\n                    if (!this.attribute('cx').hasValue()) this.attribute('cx', true).value = '50%';\n                    if (!this.attribute('cy').hasValue()) this.attribute('cy', true).value = '50%';\n                    if (!this.attribute('r').hasValue()) this.attribute('r', true).value = '50%';\n\n                    var cx = (this.gradientUnits() == 'objectBoundingBox' ?\n                        bb.x() + bb.width() * this.attribute('cx').numValue() :\n                        this.attribute('cx').toPixels('x'));\n                    var cy = (this.gradientUnits() == 'objectBoundingBox' ?\n                        bb.y() + bb.height() * this.attribute('cy').numValue() :\n                        this.attribute('cy').toPixels('y'));\n\n                    var fx = cx;\n                    var fy = cy;\n                    if (this.attribute('fx').hasValue()) {\n                        fx = (this.gradientUnits() == 'objectBoundingBox' ?\n                            bb.x() + bb.width() * this.attribute('fx').numValue() :\n                            this.attribute('fx').toPixels('x'));\n                    }\n                    if (this.attribute('fy').hasValue()) {\n                        fy = (this.gradientUnits() == 'objectBoundingBox' ?\n                            bb.y() + bb.height() * this.attribute('fy').numValue() :\n                            this.attribute('fy').toPixels('y'));\n                    }\n\n                    var r = (this.gradientUnits() == 'objectBoundingBox' ?\n                        (bb.width() + bb.height()) / 2.0 * this.attribute('r').numValue() :\n                        this.attribute('r').toPixels());\n\n                    return ctx.createRadialGradient(fx, fy, 0, cx, cy, r);\n                };\n            };\n            svg.Element.radialGradient.prototype = new svg.Element.GradientBase;\n\n            // gradient stop element\n            svg.Element.stop = function (node) {\n                this.base = svg.Element.ElementBase;\n                this.base(node);\n\n                this.offset = this.attribute('offset').numValue();\n                if (this.offset < 0) this.offset = 0;\n                if (this.offset > 1) this.offset = 1;\n\n                var stopColor = this.style('stop-color', true);\n                if (stopColor.value === '') stopColor.value = '#000';\n                if (this.style('stop-opacity').hasValue()) stopColor = stopColor.addOpacity(this.style('stop-opacity'));\n                this.color = stopColor.value;\n            };\n            svg.Element.stop.prototype = new svg.Element.ElementBase;\n\n            // animation base element\n            svg.Element.AnimateBase = function (node) {\n                this.base = svg.Element.ElementBase;\n                this.base(node);\n\n                svg.Animations.push(this);\n\n                this.duration = 0.0;\n                this.begin = this.attribute('begin').toMilliseconds();\n                this.maxDuration = this.begin + this.attribute('dur').toMilliseconds();\n\n                this.getProperty = function () {\n                    var attributeType = this.attribute('attributeType').value;\n                    var attributeName = this.attribute('attributeName').value;\n\n                    if (attributeType == 'CSS') {\n                        return this.parent.style(attributeName, true);\n                    }\n                    return this.parent.attribute(attributeName, true);\n                };\n\n                this.initialValue = null;\n                this.initialUnits = '';\n                this.removed = false;\n\n                this.calcValue = function () {\n                    // OVERRIDE ME!\n                    return '';\n                };\n\n                this.update = function (delta) {\n                    // set initial value\n                    if (this.initialValue == null) {\n                        this.initialValue = this.getProperty().value;\n                        this.initialUnits = this.getProperty().getUnits();\n                    }\n\n                    // if we're past the end time\n                    if (this.duration > this.maxDuration) {\n                        // loop for indefinitely repeating animations\n                        if (this.attribute('repeatCount').value == 'indefinite' ||\n                            this.attribute('repeatDur').value == 'indefinite') {\n                            this.duration = 0.0;\n                        } else if (this.attribute('fill').valueOrDefault('remove') == 'freeze' && !this.frozen) {\n                            this.frozen = true;\n                            this.parent.animationFrozen = true;\n                            this.parent.animationFrozenValue = this.getProperty().value;\n                        } else if (this.attribute('fill').valueOrDefault('remove') == 'remove' && !this.removed) {\n                            this.removed = true;\n                            this.getProperty().value = this.parent.animationFrozen ? this.parent.animationFrozenValue : this.initialValue;\n                            return true;\n                        }\n                        return false;\n                    }\n                    this.duration = this.duration + delta;\n\n                    // if we're past the begin time\n                    var updated = false;\n                    if (this.begin < this.duration) {\n                        var newValue = this.calcValue(); // tween\n\n                        if (this.attribute('type').hasValue()) {\n                            // for transform, etc.\n                            var type = this.attribute('type').value;\n                            newValue = type + '(' + newValue + ')';\n                        }\n\n                        this.getProperty().value = newValue;\n                        updated = true;\n                    }\n\n                    return updated;\n                };\n\n                this.from = this.attribute('from');\n                this.to = this.attribute('to');\n                this.values = this.attribute('values');\n                if (this.values.hasValue()) this.values.value = this.values.value.split(';');\n\n                // fraction of duration we've covered\n                this.progress = function () {\n                    var ret = { progress: (this.duration - this.begin) / (this.maxDuration - this.begin) };\n                    if (this.values.hasValue()) {\n                        var p = ret.progress * (this.values.value.length - 1);\n                        var lb = Math.floor(p),\n                            ub = Math.ceil(p);\n                        ret.from = new svg.Property('from', parseFloat(this.values.value[lb]));\n                        ret.to = new svg.Property('to', parseFloat(this.values.value[ub]));\n                        ret.progress = (p - lb) / (ub - lb);\n                    } else {\n                        ret.from = this.from;\n                        ret.to = this.to;\n                    }\n                    return ret;\n                };\n            };\n            svg.Element.AnimateBase.prototype = new svg.Element.ElementBase;\n\n            // animate element\n            svg.Element.animate = function (node) {\n                this.base = svg.Element.AnimateBase;\n                this.base(node);\n\n                this.calcValue = function () {\n                    var p = this.progress();\n\n                    // tween value linearly\n                    var newValue = p.from.numValue() + (p.to.numValue() - p.from.numValue()) * p.progress;\n                    return newValue + this.initialUnits;\n                };\n            };\n            svg.Element.animate.prototype = new svg.Element.AnimateBase;\n\n            // animate color element\n            svg.Element.animateColor = function (node) {\n                this.base = svg.Element.AnimateBase;\n                this.base(node);\n\n                this.calcValue = function () {\n                    var p = this.progress();\n                    var from = new rgbcolor(p.from.value);\n                    var to = new rgbcolor(p.to.value);\n\n                    if (from.ok && to.ok) {\n                        // tween color linearly\n                        var r = from.r + (to.r - from.r) * p.progress;\n                        var g = from.g + (to.g - from.g) * p.progress;\n                        var b = from.b + (to.b - from.b) * p.progress;\n                        return 'rgb(' + parseInt(r, 10) + ',' + parseInt(g, 10) + ',' + parseInt(b, 10) + ')';\n                    }\n                    return this.attribute('from').value;\n                };\n            };\n            svg.Element.animateColor.prototype = new svg.Element.AnimateBase;\n\n            // animate transform element\n            svg.Element.animateTransform = function (node) {\n                this.base = svg.Element.AnimateBase;\n                this.base(node);\n\n                this.calcValue = function () {\n                    var p = this.progress();\n\n                    // tween value linearly\n                    var from = svg.ToNumberArray(p.from.value);\n                    var to = svg.ToNumberArray(p.to.value);\n                    var newValue = '';\n                    for (var i = 0; i < from.length; i++) {\n                        newValue += from[i] + (to[i] - from[i]) * p.progress + ' ';\n                    }\n                    return newValue;\n                };\n            };\n            svg.Element.animateTransform.prototype = new svg.Element.animate;\n\n            // font element\n            svg.Element.font = function (node) {\n                this.base = svg.Element.ElementBase;\n                this.base(node);\n\n                this.horizAdvX = this.attribute('horiz-adv-x').numValue();\n\n                this.isRTL = false;\n                this.isArabic = false;\n                this.fontFace = null;\n                this.missingGlyph = null;\n                this.glyphs = [];\n                for (var i = 0; i < this.children.length; i++) {\n                    var child = this.children[i];\n                    if (child.type == 'font-face') {\n                        this.fontFace = child;\n                        if (child.style('font-family').hasValue()) {\n                            svg.Definitions[child.style('font-family').value] = this;\n                        }\n                    } else if (child.type == 'missing-glyph') this.missingGlyph = child;\n                    else if (child.type == 'glyph') {\n                        if (child.arabicForm != '') {\n                            this.isRTL = true;\n                            this.isArabic = true;\n                            if (typeof this.glyphs[child.unicode] == 'undefined') this.glyphs[child.unicode] = [];\n                            this.glyphs[child.unicode][child.arabicForm] = child;\n                        } else {\n                            this.glyphs[child.unicode] = child;\n                        }\n                    }\n                }\n\n                this.render = function(/* ctx */) {\n                    // NO RENDER\n                };\n            };\n            svg.Element.font.prototype = new svg.Element.ElementBase;\n\n            // font-face element\n            svg.Element.fontface = function (node) {\n                this.base = svg.Element.ElementBase;\n                this.base(node);\n\n                this.ascent = this.attribute('ascent').value;\n                this.descent = this.attribute('descent').value;\n                this.unitsPerEm = this.attribute('units-per-em').numValue();\n            };\n            svg.Element.fontface.prototype = new svg.Element.ElementBase;\n\n            // missing-glyph element\n            svg.Element.missingglyph = function (node) {\n                this.base = svg.Element.path;\n                this.base(node);\n\n                this.horizAdvX = 0;\n            };\n            svg.Element.missingglyph.prototype = new svg.Element.path;\n\n            // glyph element\n            svg.Element.glyph = function (node) {\n                this.base = svg.Element.path;\n                this.base(node);\n\n                this.horizAdvX = this.attribute('horiz-adv-x').numValue();\n                this.unicode = this.attribute('unicode').value;\n                this.arabicForm = this.attribute('arabic-form').value;\n            };\n            svg.Element.glyph.prototype = new svg.Element.path;\n\n            // text element\n            svg.Element.text = function (node) {\n                this.captureTextNodes = true;\n                this.base = svg.Element.RenderedElementBase;\n                this.base(node);\n\n                this.baseSetContext = this.setContext;\n                this.setContext = function (ctx) {\n                    this.baseSetContext(ctx);\n\n                    var textBaseline = this.style('dominant-baseline').toTextBaseline();\n                    if (textBaseline == null) textBaseline = this.style('alignment-baseline').toTextBaseline();\n                    if (textBaseline != null) ctx.textBaseline = textBaseline;\n                };\n\n                this.initializeCoordinates = function (ctx) {\n                    this.x = this.attribute('x').toPixels('x');\n                    this.y = this.attribute('y').toPixels('y');\n                    if (this.attribute('dx').hasValue()) this.x += this.attribute('dx').toPixels('x');\n                    if (this.attribute('dy').hasValue()) this.y += this.attribute('dy').toPixels('y');\n                    this.x += this.getAnchorDelta(ctx, this, 0);\n                };\n\n                this.getBoundingBox = function (ctx) {\n                    this.initializeCoordinates(ctx);\n                    var bb = null;\n                    for (var i = 0; i < this.children.length; i++) {\n                        var childBB = this.getChildBoundingBox(ctx, this, this, i);\n                        if (bb == null) bb = childBB;\n                        else bb.addBoundingBox(childBB);\n                    }\n                    return bb;\n                };\n\n                this.renderChildren = function (ctx) {\n                    this.initializeCoordinates(ctx);\n                    for (var i = 0; i < this.children.length; i++) {\n                        this.renderChild(ctx, this, this, i);\n                    }\n                };\n\n                this.getAnchorDelta = function (ctx, parent, startI) {\n                    var textAnchor = this.style('text-anchor').valueOrDefault('start');\n                    if (textAnchor != 'start') {\n                        var width = 0;\n                        for (var i = startI; i < parent.children.length; i++) {\n                            var child = parent.children[i];\n                            if (i > startI && child.attribute('x').hasValue()) break; // new group\n                            width += child.measureTextRecursive(ctx);\n                        }\n                        return -1 * (textAnchor == 'end' ? width : width / 2.0);\n                    }\n                    return 0;\n                };\n\n                this.adjustChildCoordinates = function(ctx, textParent, parent, i) {\n                    var child = parent.children[i];\n\n                    if (child.attribute('x').hasValue()) {\n                        child.x = child.attribute('x').toPixels('x') + textParent.getAnchorDelta(ctx, parent, i);\n                        if (child.attribute('dx').hasValue()) child.x += child.attribute('dx').toPixels('x');\n                    } else {\n                        if (child.attribute('dx').hasValue()) textParent.x += child.attribute('dx').toPixels('x');\n                        child.x = textParent.x;\n                    }\n                    textParent.x = child.x + child.measureText(ctx);\n\n                    if (child.attribute('y').hasValue()) {\n                        child.y = child.attribute('y').toPixels('y');\n                        if (child.attribute('dy').hasValue()) child.y += child.attribute('dy').toPixels('y');\n                    } else {\n                        if (child.attribute('dy').hasValue()) textParent.y += child.attribute('dy').toPixels('y');\n                        child.y = textParent.y;\n                    }\n                    textParent.y = child.y;\n\n                    return child;\n                };\n\n                this.getChildBoundingBox = function (ctx, textParent, parent, i) {\n                    var child = this.adjustChildCoordinates(ctx, textParent, parent, i);\n                    var bb = child.getBoundingBox(ctx);\n\n                    for (var i = 0; i < child.children.length; i++) {\n                        var childBB = textParent.getChildBoundingBox(ctx, textParent, child, i);\n                        bb.addBoundingBox(childBB);\n                    }\n\n                    return bb;\n                };\n\n                this.renderChild = function (ctx, textParent, parent, i) {\n                    var child = this.adjustChildCoordinates(ctx, textParent, parent, i);\n                    child.render(ctx);\n\n                    for (var i = 0; i < child.children.length; i++) {\n                        textParent.renderChild(ctx, textParent, child, i);\n                    }\n                };\n            };\n            svg.Element.text.prototype = new svg.Element.RenderedElementBase;\n\n            // text base\n            svg.Element.TextElementBase = function (node) {\n                this.base = svg.Element.RenderedElementBase;\n                this.base(node);\n\n                this.getGlyph = function (font, text, i) {\n                    var c = text[i];\n                    var glyph = null;\n                    if (font.isArabic) {\n                        var arabicForm = 'isolated';\n                        if ((i == 0 || text[i - 1] == ' ') && i < text.length - 2 && text[i + 1] != ' ') arabicForm = 'terminal';\n                        if (i > 0 && text[i - 1] != ' ' && i < text.length - 2 && text[i + 1] != ' ') arabicForm = 'medial';\n                        if (i > 0 && text[i - 1] != ' ' && (i == text.length - 1 || text[i + 1] == ' ')) arabicForm = 'initial';\n                        if (typeof font.glyphs[c] != 'undefined') {\n                            glyph = font.glyphs[c][arabicForm];\n                            if (glyph == null && font.glyphs[c].type == 'glyph') glyph = font.glyphs[c];\n                        }\n                    } else {\n                        glyph = font.glyphs[c];\n                    }\n                    if (glyph == null) glyph = font.missingGlyph;\n                    return glyph;\n                };\n\n                this.renderChildren = function (ctx) {\n                    var customFont = this.parent.style('font-family').getDefinition();\n                    if (customFont != null) {\n                        var fontSize = this.parent.style('font-size').numValueOrDefault(svg.Font.Parse(svg.ctx.font).fontSize);\n                        var fontStyle = this.parent.style('font-style').valueOrDefault(svg.Font.Parse(svg.ctx.font).fontStyle);\n                        var text = this.getText();\n                        if (customFont.isRTL) text = text.split('').reverse().join('');\n\n                        var dx = svg.ToNumberArray(this.parent.attribute('dx').value);\n                        for (var i = 0; i < text.length; i++) {\n                            var glyph = this.getGlyph(customFont, text, i);\n                            var scale = fontSize / customFont.fontFace.unitsPerEm;\n                            ctx.translate(this.x, this.y);\n                            ctx.scale(scale, -scale);\n                            var lw = ctx.lineWidth;\n                            ctx.lineWidth = ctx.lineWidth * customFont.fontFace.unitsPerEm / fontSize;\n                            if (fontStyle == 'italic') ctx.transform(1, 0, .4, 1, 0, 0);\n                            glyph.render(ctx);\n                            if (fontStyle == 'italic') ctx.transform(1, 0, -.4, 1, 0, 0);\n                            ctx.lineWidth = lw;\n                            ctx.scale(1 / scale, -1 / scale);\n                            ctx.translate(-this.x, -this.y);\n\n                            this.x += fontSize * (glyph.horizAdvX || customFont.horizAdvX) / customFont.fontFace.unitsPerEm;\n                            if (typeof dx[i] != 'undefined' && !isNaN(dx[i])) {\n                                this.x += dx[i];\n                            }\n                        }\n                        return;\n                    }\n                    if (ctx.paintOrder == 'stroke') {\n                        if (ctx.strokeStyle != '') ctx.strokeText(svg.compressSpaces(this.getText()), this.x, this.y);\n                        if (ctx.fillStyle != '') ctx.fillText(svg.compressSpaces(this.getText()), this.x, this.y);\n                    } else {\n                        if (ctx.fillStyle != '') ctx.fillText(svg.compressSpaces(this.getText()), this.x, this.y);\n                        if (ctx.strokeStyle != '') ctx.strokeText(svg.compressSpaces(this.getText()), this.x, this.y);\n                    }\n                };\n\n                this.getText = function () {\n                    // OVERRIDE ME\n                };\n\n                this.measureTextRecursive = function (ctx) {\n                    var width = this.measureText(ctx);\n                    for (var i = 0; i < this.children.length; i++) {\n                        width += this.children[i].measureTextRecursive(ctx);\n                    }\n                    return width;\n                };\n\n                this.measureText = function (ctx) {\n                    var customFont = this.parent.style('font-family').getDefinition();\n                    if (customFont != null) {\n                        var fontSize = this.parent.style('font-size').numValueOrDefault(svg.Font.Parse(svg.ctx.font).fontSize);\n                        var measure = 0;\n                        var text = this.getText();\n                        if (customFont.isRTL) text = text.split('').reverse().join('');\n                        var dx = svg.ToNumberArray(this.parent.attribute('dx').value);\n                        for (var i = 0; i < text.length; i++) {\n                            var glyph = this.getGlyph(customFont, text, i);\n                            measure += (glyph.horizAdvX || customFont.horizAdvX) * fontSize / customFont.fontFace.unitsPerEm;\n                            if (typeof dx[i] != 'undefined' && !isNaN(dx[i])) {\n                                measure += dx[i];\n                            }\n                        }\n                        return measure;\n                    }\n\n                    var textToMeasure = svg.compressSpaces(this.getText());\n                    if (!ctx.measureText) return textToMeasure.length * 10;\n\n                    ctx.save();\n                    this.setContext(ctx, true);\n                    var width = ctx.measureText(textToMeasure).width;\n                    ctx.restore();\n                    return width;\n                };\n\n                this.getBoundingBox = function (ctx) {\n                    var fontSize = this.parent.style('font-size').numValueOrDefault(svg.Font.Parse(svg.ctx.font).fontSize);\n                    return new svg.BoundingBox(this.x, this.y - fontSize, this.x + this.measureText(ctx), this.y);\n                };\n            };\n            svg.Element.TextElementBase.prototype = new svg.Element.RenderedElementBase;\n\n            // tspan\n            svg.Element.tspan = function (node) {\n                this.captureTextNodes = true;\n                this.base = svg.Element.TextElementBase;\n                this.base(node);\n\n                this.text = svg.compressSpaces(node.value || node.text || node.textContent || '');\n                this.getText = function () {\n                    // if this node has children, then they own the text\n                    if (this.children.length > 0) { return ''; }\n                    return this.text;\n                };\n            };\n            svg.Element.tspan.prototype = new svg.Element.TextElementBase;\n\n            // tref\n            svg.Element.tref = function (node) {\n                this.base = svg.Element.TextElementBase;\n                this.base(node);\n\n                this.getText = function () {\n                    var element = this.getHrefAttribute().getDefinition();\n                    if (element != null) return element.children[0].getText();\n                };\n            };\n            svg.Element.tref.prototype = new svg.Element.TextElementBase;\n\n            // a element\n            svg.Element.a = function (node) {\n                this.base = svg.Element.TextElementBase;\n                this.base(node);\n\n                this.hasText = node.childNodes.length > 0;\n                for (var i = 0; i < node.childNodes.length; i++) {\n                    if (node.childNodes[i].nodeType != 3) this.hasText = false;\n                }\n\n                // this might contain text\n                this.text = this.hasText ? node.childNodes[0].value || node.childNodes[0].data : '';\n                this.getText = function () {\n                    return this.text;\n                };\n\n                this.baseRenderChildren = this.renderChildren;\n                this.renderChildren = function (ctx) {\n                    if (this.hasText) {\n                        // render as text element\n                        this.baseRenderChildren(ctx);\n                        var fontSize = new svg.Property('fontSize', svg.Font.Parse(svg.ctx.font).fontSize);\n                        svg.Mouse.checkBoundingBox(this, new svg.BoundingBox(this.x, this.y - fontSize.toPixels('y'), this.x + this.measureText(ctx), this.y));\n                    } else if (this.children.length > 0) {\n                        // render as temporary group\n                        var g = new svg.Element.g();\n                        g.children = this.children;\n                        g.parent = this;\n                        g.render(ctx);\n                    }\n                };\n\n                this.onclick = function () {\n                    windowEnv.open(this.getHrefAttribute().value);\n                };\n\n                this.onmousemove = function () {\n                    svg.ctx.canvas.style.cursor = 'pointer';\n                };\n            };\n            svg.Element.a.prototype = new svg.Element.TextElementBase;\n\n            // image element\n            svg.Element.image = function (node) {\n                this.base = svg.Element.RenderedElementBase;\n                this.base(node);\n\n                var href = this.getHrefAttribute().value;\n                if (href == '') { return; }\n                var isSvg = href.match(/\\.svg$/);\n\n                svg.Images.push(this);\n                this.loaded = false;\n                if (!isSvg) {\n                    this.img = doc.createElement('img');\n                    if (svg.opts['useCORS'] == true) { this.img.crossOrigin = 'Anonymous'; }\n                    var self = this;\n                    this.img.onload = function () { self.loaded = true; };\n                    this.img.onerror = function () {\n                        svg.log('ERROR: image \"' + href + '\" not found');\n                        self.loaded = true;\n                    };\n                    this.img.src = href;\n                } else {\n                    this.img = svg.ajax(href);\n                    this.loaded = true;\n                }\n\n                this.renderChildren = function (ctx) {\n                    var x = this.attribute('x').toPixels('x');\n                    var y = this.attribute('y').toPixels('y');\n\n                    var width = this.attribute('width').toPixels('x');\n                    var height = this.attribute('height').toPixels('y');\n                    if (width == 0 || height == 0) return;\n\n                    ctx.save();\n                    if (isSvg) {\n                        ctx.drawSvg(this.img, x, y, width, height);\n                    } else {\n                        ctx.translate(x, y);\n                        svg.AspectRatio(ctx,\n                            this.attribute('preserveAspectRatio').value,\n                            width,\n                            this.img.width,\n                            height,\n                            this.img.height,\n                            0,\n                            0);\n                        if (self.loaded) {\n                            if (this.img.complete === undefined || this.img.complete) {\n                                ctx.drawImage(this.img, 0, 0);\n                            }\n                        }\n                    }\n                    ctx.restore();\n                };\n\n                this.getBoundingBox = function () {\n                    var x = this.attribute('x').toPixels('x');\n                    var y = this.attribute('y').toPixels('y');\n                    var width = this.attribute('width').toPixels('x');\n                    var height = this.attribute('height').toPixels('y');\n                    return new svg.BoundingBox(x, y, x + width, y + height);\n                };\n            };\n            svg.Element.image.prototype = new svg.Element.RenderedElementBase;\n\n            // group element\n            svg.Element.g = function (node) {\n                this.base = svg.Element.RenderedElementBase;\n                this.base(node);\n\n                this.getBoundingBox = function (ctx) {\n                    var bb = new svg.BoundingBox();\n                    for (var i = 0; i < this.children.length; i++) {\n                        bb.addBoundingBox(this.children[i].getBoundingBox(ctx));\n                    }\n                    return bb;\n                };\n            };\n            svg.Element.g.prototype = new svg.Element.RenderedElementBase;\n\n            // symbol element\n            svg.Element.symbol = function (node) {\n                this.base = svg.Element.RenderedElementBase;\n                this.base(node);\n\n                this.render = function (/* ctx */) {\n                    // NO RENDER\n                };\n            };\n            svg.Element.symbol.prototype = new svg.Element.RenderedElementBase;\n\n            // style element\n            svg.Element.style = function (node) {\n                this.base = svg.Element.ElementBase;\n                this.base(node);\n\n                // text, or spaces then CDATA\n                var css = '';\n                for (var i = 0; i < node.childNodes.length; i++) {\n                    css += node.childNodes[i].data;\n                }\n                css = css.replace(/(\\/\\*([^*]|[\\r\\n]|(\\*+([^*\\/]|[\\r\\n])))*\\*+\\/)|(^[\\s]*\\/\\/.*)/gm, ''); // remove comments\n                css = svg.compressSpaces(css); // replace whitespace\n                var cssDefs = css.split('}');\n                for (var i = 0; i < cssDefs.length; i++) {\n                    if (svg.trim(cssDefs[i]) != '') {\n                        var cssDef = cssDefs[i].split('{');\n                        var cssClasses = cssDef[0].split(',');\n                        var cssProps = cssDef[1].split(';');\n                        for (var j = 0; j < cssClasses.length; j++) {\n                            var cssClass = svg.trim(cssClasses[j]);\n                            if (cssClass != '') {\n                                var props = svg.Styles[cssClass] || {};\n                                for (var k = 0; k < cssProps.length; k++) {\n                                    var prop = cssProps[k].indexOf(':');\n                                    var name = cssProps[k].substr(0, prop);\n                                    var value = cssProps[k].substr(prop + 1, cssProps[k].length - prop);\n                                    if (name != null && value != null) {\n                                        props[svg.trim(name)] = new svg.Property(svg.trim(name), svg.trim(value));\n                                    }\n                                }\n                                svg.Styles[cssClass] = props;\n                                svg.StylesSpecificity[cssClass] = getSelectorSpecificity(cssClass);\n                                if (cssClass == '@font-face' && !nodeEnv) {\n                                    var fontFamily = props['font-family'].value.replace(/\"/g, '');\n                                    var srcs = props['src'].value.split(',');\n                                    for (var s = 0; s < srcs.length; s++) {\n                                        if (srcs[s].indexOf('format(\"svg\")') > 0) {\n                                            var urlStart = srcs[s].indexOf('url');\n                                            var urlEnd = srcs[s].indexOf(')', urlStart);\n                                            var url = srcs[s].substr(urlStart + 5, urlEnd - urlStart - 6);\n                                            var doc = svg.parseXml(svg.ajax(url));\n                                            var fonts = doc.getElementsByTagName('font');\n                                            for (var f = 0; f < fonts.length; f++) {\n                                                var font = svg.CreateElement(fonts[f]);\n                                                svg.Definitions[fontFamily] = font;\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            };\n            svg.Element.style.prototype = new svg.Element.ElementBase;\n\n            // use element\n            svg.Element.use = function (node) {\n                this.base = svg.Element.RenderedElementBase;\n                this.base(node);\n\n                this.baseSetContext = this.setContext;\n                this.setContext = function (ctx) {\n                    this.baseSetContext(ctx);\n                    if (this.attribute('x').hasValue()) ctx.translate(this.attribute('x').toPixels('x'), 0);\n                    if (this.attribute('y').hasValue()) ctx.translate(0, this.attribute('y').toPixels('y'));\n                };\n\n                var element = this.getHrefAttribute().getDefinition();\n\n                this.path = function (ctx) {\n                    if (element != null) element.path(ctx);\n                };\n\n                this.elementTransform = function () {\n                    if (element != null && element.style('transform', false, true).hasValue()) {\n                        return new svg.Transform(element.style('transform', false, true).value);\n                    }\n                };\n\n                this.getBoundingBox = function (ctx) {\n                    if (element != null) return element.getBoundingBox(ctx);\n                };\n\n                this.renderChildren = function (ctx) {\n                    if (element != null) {\n                        var tempSvg = element;\n                        if (element.type == 'symbol') {\n                            // render me using a temporary svg element in symbol cases (http://www.w3.org/TR/SVG/struct.html#UseElement)\n                            tempSvg = new svg.Element.svg();\n                            tempSvg.type = 'svg';\n                            tempSvg.attributes['viewBox'] = new svg.Property('viewBox', element.attribute('viewBox').value);\n                            tempSvg.attributes['preserveAspectRatio'] = new svg.Property('preserveAspectRatio', element.attribute('preserveAspectRatio').value);\n                            tempSvg.attributes['overflow'] = new svg.Property('overflow', element.attribute('overflow').value);\n                            tempSvg.children = element.children;\n                        }\n                        if (tempSvg.type == 'svg') {\n                            // if symbol or svg, inherit width/height from me\n                            if (this.attribute('width').hasValue()) tempSvg.attributes['width'] = new svg.Property('width', this.attribute('width').value);\n                            if (this.attribute('height').hasValue()) tempSvg.attributes['height'] = new svg.Property('height', this.attribute('height').value);\n                        }\n                        var oldParent = tempSvg.parent;\n                        tempSvg.parent = null;\n                        tempSvg.render(ctx);\n                        tempSvg.parent = oldParent;\n                    }\n                };\n            };\n            svg.Element.use.prototype = new svg.Element.RenderedElementBase;\n\n            // mask element\n            svg.Element.mask = function (node) {\n                this.base = svg.Element.ElementBase;\n                this.base(node);\n\n                this.apply = function (ctx, element) {\n                    // render as temp svg\n                    var x = this.attribute('x').toPixels('x');\n                    var y = this.attribute('y').toPixels('y');\n                    var width = this.attribute('width').toPixels('x');\n                    var height = this.attribute('height').toPixels('y');\n\n                    if (width == 0 && height == 0) {\n                        var bb = new svg.BoundingBox();\n                        for (var i = 0; i < this.children.length; i++) {\n                            bb.addBoundingBox(this.children[i].getBoundingBox(ctx));\n                        }\n                        var x = Math.floor(bb.x1);\n                        var y = Math.floor(bb.y1);\n                        var width = Math.floor(bb.width());\n                        var height = Math.floor(bb.height());\n                    }\n\n                    // temporarily remove mask to avoid recursion\n                    var mask = element.style('mask').value;\n                    element.style('mask').value = '';\n\n                    var cMask = createCanvas(x + width, y + height);\n                    var maskCtx = cMask.getContext('2d');\n                    this.renderChildren(maskCtx);\n\n                    var c = createCanvas(x + width, y + height);\n                    var tempCtx = c.getContext('2d');\n                    element.render(tempCtx);\n                    tempCtx.globalCompositeOperation = 'destination-in';\n                    tempCtx.fillStyle = maskCtx.createPattern(cMask, 'no-repeat');\n                    tempCtx.fillRect(0, 0, x + width, y + height);\n\n                    ctx.fillStyle = tempCtx.createPattern(c, 'no-repeat');\n                    ctx.fillRect(0, 0, x + width, y + height);\n\n                    // reassign mask\n                    element.style('mask').value = mask;\n                };\n\n                this.render = function (/* ctx */) {\n                    // NO RENDER\n                };\n            };\n            svg.Element.mask.prototype = new svg.Element.ElementBase;\n\n            // clip element\n            svg.Element.clipPath = function (node) {\n                this.base = svg.Element.ElementBase;\n                this.base(node);\n\n                this.apply = function (ctx) {\n                    var hasContext2D = (typeof CanvasRenderingContext2D !== 'undefined');\n                    var oldBeginPath = ctx.beginPath;\n                    var oldClosePath = ctx.closePath;\n                    if (hasContext2D) {\n                        CanvasRenderingContext2D.prototype.beginPath = function () { };\n                        CanvasRenderingContext2D.prototype.closePath = function () { };\n                    }\n\n                    oldBeginPath.call(ctx);\n                    for (var i = 0; i < this.children.length; i++) {\n                        var child = this.children[i];\n                        if (typeof child.path != 'undefined') {\n                            var transform = typeof child.elementTransform != 'undefined' && child.elementTransform(); // handle <use />\n                            if (!transform && child.style('transform', false, true).hasValue()) {\n                                transform = new svg.Transform(child.style('transform', false, true).value);\n                            }\n                            if (transform) {\n                                transform.apply(ctx);\n                            }\n                            child.path(ctx);\n                            if (hasContext2D) {\n                                CanvasRenderingContext2D.prototype.closePath = oldClosePath;\n                            }\n                            if (transform) { transform.unapply(ctx); }\n                        }\n                    }\n                    oldClosePath.call(ctx);\n                    ctx.clip();\n                    if (hasContext2D) {\n                        CanvasRenderingContext2D.prototype.beginPath = oldBeginPath;\n                        CanvasRenderingContext2D.prototype.closePath = oldClosePath;\n                    }\n                };\n\n                this.render = function (/* ctx */) {\n                    // NO RENDER\n                };\n            };\n            svg.Element.clipPath.prototype = new svg.Element.ElementBase;\n\n            // filters\n            svg.Element.filter = function (node) {\n                this.base = svg.Element.ElementBase;\n                this.base(node);\n\n                this.apply = function (ctx, element) {\n                    // render as temp svg\n                    var bb = element.getBoundingBox(ctx);\n                    var x = Math.floor(bb.x1);\n                    var y = Math.floor(bb.y1);\n                    var width = Math.floor(bb.width());\n                    var height = Math.floor(bb.height());\n\n                    // temporarily remove filter to avoid recursion\n                    var filter = element.style('filter').value;\n                    element.style('filter').value = '';\n\n                    var px = 0,\n                        py = 0;\n                    for (var i = 0; i < this.children.length; i++) {\n                        var efd = this.children[i].extraFilterDistance || 0;\n                        px = Math.max(px, efd);\n                        py = Math.max(py, efd);\n                    }\n\n                    var c = createCanvas(width + 2 * px, height + 2 * py);\n                    var tempCtx = c.getContext('2d');\n                    tempCtx.translate(-x + px, -y + py);\n                    element.render(tempCtx);\n\n                    // apply filters\n                    for (var i = 0; i < this.children.length; i++) {\n                        if (typeof this.children[i].apply == 'function') {\n                            this.children[i].apply(tempCtx, 0, 0, width + 2 * px, height + 2 * py);\n                        }\n                    }\n\n                    // render on me\n                    ctx.drawImage(c, 0, 0, width + 2 * px, height + 2 * py, x - px, y - py, width + 2 * px, height + 2 * py);\n\n                    // reassign filter\n                    element.style('filter', true).value = filter;\n                };\n\n                this.render = function (/* ctx */) {\n                    // NO RENDER\n                };\n            };\n            svg.Element.filter.prototype = new svg.Element.ElementBase;\n\n            svg.Element.feDropShadow = function (node) {\n                this.base = svg.Element.ElementBase;\n                this.base(node);\n                this.addStylesFromStyleDefinition();\n\n                this.apply = function (/* ctx, x, y, width, height */) {\n                    // TODO: implement\n                };\n            };\n            svg.Element.feDropShadow.prototype = new svg.Element.ElementBase;\n\n            svg.Element.feMorphology = function (node) {\n                this.base = svg.Element.ElementBase;\n                this.base(node);\n\n                this.apply = function (/* ctx, x, y, width, height */) {\n                    // TODO: implement\n                };\n            };\n            svg.Element.feMorphology.prototype = new svg.Element.ElementBase;\n\n            svg.Element.feComposite = function (node) {\n                this.base = svg.Element.ElementBase;\n                this.base(node);\n\n                this.apply = function (/* ctx, x, y, width, height */) {\n                    // TODO: implement\n                };\n            };\n            svg.Element.feComposite.prototype = new svg.Element.ElementBase;\n\n            svg.Element.feColorMatrix = function (node) {\n                this.base = svg.Element.ElementBase;\n                this.base(node);\n\n                var matrix = svg.ToNumberArray(this.attribute('values').value);\n                switch (this.attribute('type').valueOrDefault('matrix')) { // http://www.w3.org/TR/SVG/filters.html#feColorMatrixElement\n                    case 'saturate':\n                        var s = matrix[0];\n                        matrix = [0.213 + 0.787 * s, 0.715 - 0.715 * s, 0.072 - 0.072 * s, 0, 0,\n                            0.213 - 0.213 * s, 0.715 + 0.285 * s, 0.072 - 0.072 * s, 0, 0,\n                            0.213 - 0.213 * s, 0.715 - 0.715 * s, 0.072 + 0.928 * s, 0, 0,\n                            0, 0, 0, 1, 0,\n                            0, 0, 0, 0, 1\n                        ];\n                        break;\n                    case 'hueRotate':\n                        var a = matrix[0] * Math.PI / 180.0;\n                        var c = function (m1, m2, m3) { return m1 + Math.cos(a) * m2 + Math.sin(a) * m3; };\n                        matrix = [c(0.213, 0.787, -0.213), c(0.715, -0.715, -0.715), c(0.072, -0.072, 0.928), 0, 0,\n                            c(0.213, -0.213, 0.143), c(0.715, 0.285, 0.140), c(0.072, -0.072, -0.283), 0, 0,\n                            c(0.213, -0.213, -0.787), c(0.715, -0.715, 0.715), c(0.072, 0.928, 0.072), 0, 0,\n                            0, 0, 0, 1, 0,\n                            0, 0, 0, 0, 1\n                        ];\n                        break;\n                    case 'luminanceToAlpha':\n                        matrix = [0, 0, 0, 0, 0,\n                            0, 0, 0, 0, 0,\n                            0, 0, 0, 0, 0,\n                            0.2125, 0.7154, 0.0721, 0, 0,\n                            0, 0, 0, 0, 1\n                        ];\n                        break;\n                }\n\n                function imGet(img, x, y, width, height, rgba) {\n                    return img[y * width * 4 + x * 4 + rgba];\n                }\n\n                function imSet(img, x, y, width, height, rgba, val) {\n                    img[y * width * 4 + x * 4 + rgba] = val;\n                }\n\n                function m(i, v) {\n                    var mi = matrix[i];\n                    return mi * (mi < 0 ? v - 255 : v);\n                }\n\n                this.apply = function (ctx, x, y, width, height) {\n                    // assuming x==0 && y==0 for now\n                    var srcData = ctx.getImageData(0, 0, width, height);\n                    for (var y = 0; y < height; y++) {\n                        for (var x = 0; x < width; x++) {\n                            var r = imGet(srcData.data, x, y, width, height, 0);\n                            var g = imGet(srcData.data, x, y, width, height, 1);\n                            var b = imGet(srcData.data, x, y, width, height, 2);\n                            var a = imGet(srcData.data, x, y, width, height, 3);\n                            imSet(srcData.data, x, y, width, height, 0, m(0, r) + m(1, g) + m(2, b) + m(3, a) + m(4, 1));\n                            imSet(srcData.data, x, y, width, height, 1, m(5, r) + m(6, g) + m(7, b) + m(8, a) + m(9, 1));\n                            imSet(srcData.data, x, y, width, height, 2, m(10, r) + m(11, g) + m(12, b) + m(13, a) + m(14, 1));\n                            imSet(srcData.data, x, y, width, height, 3, m(15, r) + m(16, g) + m(17, b) + m(18, a) + m(19, 1));\n                        }\n                    }\n                    ctx.clearRect(0, 0, width, height);\n                    ctx.putImageData(srcData, 0, 0);\n                };\n            };\n            svg.Element.feColorMatrix.prototype = new svg.Element.ElementBase;\n\n            svg.Element.feGaussianBlur = function (node) {\n                this.base = svg.Element.ElementBase;\n                this.base(node);\n\n                this.blurRadius = Math.floor(this.attribute('stdDeviation').numValue());\n                this.extraFilterDistance = this.blurRadius;\n\n                this.apply = function (ctx, x, y, width, height) {\n                    if (!stackblurCanvas || typeof stackblurCanvas.canvasRGBA === 'undefined') {\n                        svg.log('ERROR: StackBlur.js must be included for blur to work');\n                        return;\n                    }\n\n                    // StackBlur requires canvas be on document\n                    ctx.canvas.id = svg.UniqueId();\n                    {\n                        ctx.canvas.style.display = 'none';\n                        doc.body.appendChild(ctx.canvas);\n                    }\n                    stackblurCanvas.canvasRGBA(ctx.canvas, x, y, width, height, this.blurRadius);\n                    {\n                        doc.body.removeChild(ctx.canvas);\n                    }\n                };\n            };\n            svg.Element.feGaussianBlur.prototype = new svg.Element.ElementBase;\n\n            // title element, do nothing\n            svg.Element.title = function (/* node */) { };\n            svg.Element.title.prototype = new svg.Element.ElementBase;\n\n            // desc element, do nothing\n            svg.Element.desc = function (/* node */) { };\n            svg.Element.desc.prototype = new svg.Element.ElementBase;\n\n            svg.Element.MISSING = function (node) {\n                svg.log('ERROR: Element \\'' + node.nodeName + '\\' not yet implemented.');\n            };\n            svg.Element.MISSING.prototype = new svg.Element.ElementBase;\n\n            // element factory\n            svg.CreateElement = function (node) {\n                var className = node.nodeName.replace(/^[^:]+:/, ''); // remove namespace\n                className = className.replace(/\\-/g, ''); // remove dashes\n                var e = null;\n                if (typeof svg.Element[className] != 'undefined') {\n                    e = new svg.Element[className](node);\n                } else {\n                    e = new svg.Element.MISSING(node);\n                }\n\n                e.type = node.nodeName;\n                return e;\n            };\n\n            // load from url\n            svg.load = function (ctx, url) {\n                svg.loadXml(ctx, svg.ajax(url));\n            };\n\n            // load from xml\n            svg.loadXml = function (ctx, xml) {\n                svg.loadXmlDoc(ctx, svg.parseXml(xml));\n            };\n\n            svg.loadXmlDoc = function (ctx, dom) {\n                svg.init(ctx);\n\n                var mapXY = function (p) {\n                    var e = ctx.canvas;\n                    while (e) {\n                        p.x -= e.offsetLeft;\n                        p.y -= e.offsetTop;\n                        e = e.offsetParent;\n                    }\n                    if (windowEnv.scrollX) p.x += windowEnv.scrollX;\n                    if (windowEnv.scrollY) p.y += windowEnv.scrollY;\n                    return p;\n                };\n\n                // bind mouse\n                if (svg.opts['ignoreMouse'] != true) {\n                    ctx.canvas.onclick = function (e) {\n                        var p = mapXY(new svg.Point(e != null ? e.clientX : event.clientX, e != null ? e.clientY : event.clientY));\n                        svg.Mouse.onclick(p.x, p.y);\n                    };\n                    ctx.canvas.onmousemove = function (e) {\n                        var p = mapXY(new svg.Point(e != null ? e.clientX : event.clientX, e != null ? e.clientY : event.clientY));\n                        svg.Mouse.onmousemove(p.x, p.y);\n                    };\n                }\n\n                var e = svg.CreateElement(dom.documentElement);\n                e.root = true;\n                e.addStylesFromStyleDefinition();\n\n                // render loop\n                var isFirstRender = true;\n                var draw = function () {\n                    svg.ViewPort.Clear();\n                    if (ctx.canvas.parentNode) {\n                        svg.ViewPort.SetCurrent(ctx.canvas.parentNode.clientWidth, ctx.canvas.parentNode.clientHeight);\n                    } else {\n                        svg.ViewPort.SetCurrent(defaultClientWidth, defaultClientHeight);\n                    }\n\n                    if (svg.opts['ignoreDimensions'] != true) {\n                        // set canvas size\n                        if (e.style('width').hasValue()) {\n                            ctx.canvas.width = e.style('width').toPixels('x');\n                            if (ctx.canvas.style) { ctx.canvas.style.width = ctx.canvas.width + 'px'; }\n                        }\n                        if (e.style('height').hasValue()) {\n                            ctx.canvas.height = e.style('height').toPixels('y');\n                            if (ctx.canvas.style) { ctx.canvas.style.height = ctx.canvas.height + 'px'; }\n                        }\n                    }\n                    var cWidth = ctx.canvas.clientWidth || ctx.canvas.width;\n                    var cHeight = ctx.canvas.clientHeight || ctx.canvas.height;\n                    if (svg.opts['ignoreDimensions'] == true && e.style('width').hasValue() && e.style('height').hasValue()) {\n                        cWidth = e.style('width').toPixels('x');\n                        cHeight = e.style('height').toPixels('y');\n                    }\n                    svg.ViewPort.SetCurrent(cWidth, cHeight);\n\n                    if (svg.opts['offsetX'] != null) e.attribute('x', true).value = svg.opts['offsetX'];\n                    if (svg.opts['offsetY'] != null) e.attribute('y', true).value = svg.opts['offsetY'];\n                    if (svg.opts['scaleWidth'] != null || svg.opts['scaleHeight'] != null) {\n                        var xRatio = null,\n                            yRatio = null,\n                            viewBox = svg.ToNumberArray(e.attribute('viewBox').value);\n\n                        if (svg.opts['scaleWidth'] != null) {\n                            if (e.attribute('width').hasValue()) xRatio = e.attribute('width').toPixels('x') / svg.opts['scaleWidth'];\n                            else if (!isNaN(viewBox[2])) xRatio = viewBox[2] / svg.opts['scaleWidth'];\n                        }\n\n                        if (svg.opts['scaleHeight'] != null) {\n                            if (e.attribute('height').hasValue()) yRatio = e.attribute('height').toPixels('y') / svg.opts['scaleHeight'];\n                            else if (!isNaN(viewBox[3])) yRatio = viewBox[3] / svg.opts['scaleHeight'];\n                        }\n\n                        if (xRatio == null) { xRatio = yRatio; }\n                        if (yRatio == null) { yRatio = xRatio; }\n\n                        e.attribute('width', true).value = svg.opts['scaleWidth'];\n                        e.attribute('height', true).value = svg.opts['scaleHeight'];\n                        e.style('transform', true, true).value += ' scale(' + (1.0 / xRatio) + ',' + (1.0 / yRatio) + ')';\n                    }\n\n                    // clear and render\n                    if (svg.opts['ignoreClear'] != true) {\n                        ctx.clearRect(0, 0, cWidth, cHeight);\n                    }\n                    e.render(ctx);\n                    if (isFirstRender) {\n                        isFirstRender = false;\n                        if (typeof svg.opts['renderCallback'] == 'function') svg.opts['renderCallback'](dom);\n                    }\n                };\n\n                var waitingForImages = true;\n                if (svg.ImagesLoaded()) {\n                    waitingForImages = false;\n                    draw();\n                }\n                {\n                    //In node, in the most cases, we don't need the animation listener.\n                    svg.intervalID = setInterval(function () {\n                        var needUpdate = false;\n\n                        if (waitingForImages && svg.ImagesLoaded()) {\n                            waitingForImages = false;\n                            needUpdate = true;\n                        }\n\n                        // need update from mouse events?\n                        if (svg.opts['ignoreMouse'] != true) {\n                            needUpdate = needUpdate || svg.Mouse.hasEvents();\n                        }\n\n                        // need update from animations?\n                        if (svg.opts['ignoreAnimation'] != true) {\n                            for (var i = 0; i < svg.Animations.length; i++) {\n                                var needAnimationUpdate = svg.Animations[i].update(1000 / svg.FRAMERATE);\n                                needUpdate = needUpdate || needAnimationUpdate;\n                            }\n                        }\n\n                        // need update from redraw?\n                        if (typeof svg.opts['forceRedraw'] == 'function') {\n                            if (svg.opts['forceRedraw']() == true) needUpdate = true;\n                        }\n\n                        // render if needed\n                        if (needUpdate) {\n                            draw();\n                            svg.Mouse.runEvents(); // run and clear our events\n                        }\n                    }, 1000 / svg.FRAMERATE);\n                }\n            };\n\n            svg.stop = function () {\n                if (svg.intervalID) {\n                    clearInterval(svg.intervalID);\n                }\n            };\n\n            svg.Mouse = new (function () {\n                this.events = [];\n                this.hasEvents = function () { return this.events.length != 0; };\n\n                this.onclick = function (x, y) {\n                    this.events.push({\n                        type: 'onclick',\n                        x: x,\n                        y: y,\n                        run: function (e) { if (e.onclick) e.onclick(); }\n                    });\n                };\n\n                this.onmousemove = function (x, y) {\n                    this.events.push({\n                        type: 'onmousemove',\n                        x: x,\n                        y: y,\n                        run: function (e) { if (e.onmousemove) e.onmousemove(); }\n                    });\n                };\n\n                this.eventElements = [];\n\n                this.checkPath = function (element, ctx) {\n                    for (var i = 0; i < this.events.length; i++) {\n                        var e = this.events[i];\n                        if (ctx.isPointInPath && ctx.isPointInPath(e.x, e.y)) this.eventElements[i] = element;\n                    }\n                };\n\n                this.checkBoundingBox = function (element, bb) {\n                    for (var i = 0; i < this.events.length; i++) {\n                        var e = this.events[i];\n                        if (bb.isPointInBox(e.x, e.y)) this.eventElements[i] = element;\n                    }\n                };\n\n                this.runEvents = function () {\n                    svg.ctx.canvas.style.cursor = '';\n\n                    for (var i = 0; i < this.events.length; i++) {\n                        var e = this.events[i];\n                        var element = this.eventElements[i];\n                        while (element) {\n                            e.run(element);\n                            element = element.parent;\n                        }\n                    }\n\n                    // done running, clear\n                    this.events = [];\n                    this.eventElements = [];\n                };\n            });\n\n            return svg;\n        }\n\n        if (typeof CanvasRenderingContext2D != 'undefined') {\n            CanvasRenderingContext2D.prototype.drawSvg = function (s, dx, dy, dw, dh, opts) {\n                var cOpts = {\n                    ignoreMouse: true,\n                    ignoreAnimation: true,\n                    ignoreDimensions: true,\n                    ignoreClear: true,\n                    offsetX: dx,\n                    offsetY: dy,\n                    scaleWidth: dw,\n                    scaleHeight: dh\n                };\n\n                for (var prop in opts) {\n                    if (opts.hasOwnProperty(prop)) {\n                        cOpts[prop] = opts[prop];\n                    }\n                }\n                canvg(this.canvas, s, cOpts);\n            };\n        }\n\n        module.exports = canvg;\n    });\n\n    return canvg_1;\n\n})));","/**\n * A class to parse color values\n * @author Stoyan Stefanov <sstoo@gmail.com>\n * @link   http://www.phpied.com/rgb-color-parser-in-javascript/\n * @license Use it if you like it\n */\n\n(function ( global ) {\n\n    function RGBColor(color_string)\n    {\n        this.ok = false;\n\n        // strip any leading #\n        if (color_string.charAt(0) == '#') { // remove # if any\n            color_string = color_string.substr(1,6);\n        }\n\n        color_string = color_string.replace(/ /g,'');\n        color_string = color_string.toLowerCase();\n\n        // before getting into regexps, try simple matches\n        // and overwrite the input\n        var simple_colors = {\n            aliceblue: 'f0f8ff',\n            antiquewhite: 'faebd7',\n            aqua: '00ffff',\n            aquamarine: '7fffd4',\n            azure: 'f0ffff',\n            beige: 'f5f5dc',\n            bisque: 'ffe4c4',\n            black: '000000',\n            blanchedalmond: 'ffebcd',\n            blue: '0000ff',\n            blueviolet: '8a2be2',\n            brown: 'a52a2a',\n            burlywood: 'deb887',\n            cadetblue: '5f9ea0',\n            chartreuse: '7fff00',\n            chocolate: 'd2691e',\n            coral: 'ff7f50',\n            cornflowerblue: '6495ed',\n            cornsilk: 'fff8dc',\n            crimson: 'dc143c',\n            cyan: '00ffff',\n            darkblue: '00008b',\n            darkcyan: '008b8b',\n            darkgoldenrod: 'b8860b',\n            darkgray: 'a9a9a9',\n            darkgreen: '006400',\n            darkkhaki: 'bdb76b',\n            darkmagenta: '8b008b',\n            darkolivegreen: '556b2f',\n            darkorange: 'ff8c00',\n            darkorchid: '9932cc',\n            darkred: '8b0000',\n            darksalmon: 'e9967a',\n            darkseagreen: '8fbc8f',\n            darkslateblue: '483d8b',\n            darkslategray: '2f4f4f',\n            darkturquoise: '00ced1',\n            darkviolet: '9400d3',\n            deeppink: 'ff1493',\n            deepskyblue: '00bfff',\n            dimgray: '696969',\n            dodgerblue: '1e90ff',\n            feldspar: 'd19275',\n            firebrick: 'b22222',\n            floralwhite: 'fffaf0',\n            forestgreen: '228b22',\n            fuchsia: 'ff00ff',\n            gainsboro: 'dcdcdc',\n            ghostwhite: 'f8f8ff',\n            gold: 'ffd700',\n            goldenrod: 'daa520',\n            gray: '808080',\n            green: '008000',\n            greenyellow: 'adff2f',\n            honeydew: 'f0fff0',\n            hotpink: 'ff69b4',\n            indianred : 'cd5c5c',\n            indigo : '4b0082',\n            ivory: 'fffff0',\n            khaki: 'f0e68c',\n            lavender: 'e6e6fa',\n            lavenderblush: 'fff0f5',\n            lawngreen: '7cfc00',\n            lemonchiffon: 'fffacd',\n            lightblue: 'add8e6',\n            lightcoral: 'f08080',\n            lightcyan: 'e0ffff',\n            lightgoldenrodyellow: 'fafad2',\n            lightgrey: 'd3d3d3',\n            lightgreen: '90ee90',\n            lightpink: 'ffb6c1',\n            lightsalmon: 'ffa07a',\n            lightseagreen: '20b2aa',\n            lightskyblue: '87cefa',\n            lightslateblue: '8470ff',\n            lightslategray: '778899',\n            lightsteelblue: 'b0c4de',\n            lightyellow: 'ffffe0',\n            lime: '00ff00',\n            limegreen: '32cd32',\n            linen: 'faf0e6',\n            magenta: 'ff00ff',\n            maroon: '800000',\n            mediumaquamarine: '66cdaa',\n            mediumblue: '0000cd',\n            mediumorchid: 'ba55d3',\n            mediumpurple: '9370d8',\n            mediumseagreen: '3cb371',\n            mediumslateblue: '7b68ee',\n            mediumspringgreen: '00fa9a',\n            mediumturquoise: '48d1cc',\n            mediumvioletred: 'c71585',\n            midnightblue: '191970',\n            mintcream: 'f5fffa',\n            mistyrose: 'ffe4e1',\n            moccasin: 'ffe4b5',\n            navajowhite: 'ffdead',\n            navy: '000080',\n            oldlace: 'fdf5e6',\n            olive: '808000',\n            olivedrab: '6b8e23',\n            orange: 'ffa500',\n            orangered: 'ff4500',\n            orchid: 'da70d6',\n            palegoldenrod: 'eee8aa',\n            palegreen: '98fb98',\n            paleturquoise: 'afeeee',\n            palevioletred: 'd87093',\n            papayawhip: 'ffefd5',\n            peachpuff: 'ffdab9',\n            peru: 'cd853f',\n            pink: 'ffc0cb',\n            plum: 'dda0dd',\n            powderblue: 'b0e0e6',\n            purple: '800080',\n            red: 'ff0000',\n            rosybrown: 'bc8f8f',\n            royalblue: '4169e1',\n            saddlebrown: '8b4513',\n            salmon: 'fa8072',\n            sandybrown: 'f4a460',\n            seagreen: '2e8b57',\n            seashell: 'fff5ee',\n            sienna: 'a0522d',\n            silver: 'c0c0c0',\n            skyblue: '87ceeb',\n            slateblue: '6a5acd',\n            slategray: '708090',\n            snow: 'fffafa',\n            springgreen: '00ff7f',\n            steelblue: '4682b4',\n            tan: 'd2b48c',\n            teal: '008080',\n            thistle: 'd8bfd8',\n            tomato: 'ff6347',\n            turquoise: '40e0d0',\n            violet: 'ee82ee',\n            violetred: 'd02090',\n            wheat: 'f5deb3',\n            white: 'ffffff',\n            whitesmoke: 'f5f5f5',\n            yellow: 'ffff00',\n            yellowgreen: '9acd32'\n        };\n        for (var key in simple_colors) {\n            if (color_string == key) {\n                color_string = simple_colors[key];\n            }\n        }\n        // emd of simple type-in colors\n\n        // array of color definition objects\n        var color_defs = [\n            {\n                re: /^rgb\\((\\d{1,3}),\\s*(\\d{1,3}),\\s*(\\d{1,3})\\)$/,\n                example: ['rgb(123, 234, 45)', 'rgb(255,234,245)'],\n                process: function (bits){\n                    return [\n                        parseInt(bits[1]),\n                        parseInt(bits[2]),\n                        parseInt(bits[3])\n                    ];\n                }\n            },\n            {\n                re: /^(\\w{2})(\\w{2})(\\w{2})$/,\n                example: ['#00ff00', '336699'],\n                process: function (bits){\n                    return [\n                        parseInt(bits[1], 16),\n                        parseInt(bits[2], 16),\n                        parseInt(bits[3], 16)\n                    ];\n                }\n            },\n            {\n                re: /^(\\w{1})(\\w{1})(\\w{1})$/,\n                example: ['#fb0', 'f0f'],\n                process: function (bits){\n                    return [\n                        parseInt(bits[1] + bits[1], 16),\n                        parseInt(bits[2] + bits[2], 16),\n                        parseInt(bits[3] + bits[3], 16)\n                    ];\n                }\n            }\n        ];\n\n        // search through the definitions to find a match\n        for (var i = 0; i < color_defs.length; i++) {\n            var re = color_defs[i].re;\n            var processor = color_defs[i].process;\n            var bits = re.exec(color_string);\n            if (bits) {\n                channels = processor(bits);\n                this.r = channels[0];\n                this.g = channels[1];\n                this.b = channels[2];\n                this.ok = true;\n            }\n\n        }\n\n        // validate/cleanup values\n        this.r = (this.r < 0 || isNaN(this.r)) ? 0 : ((this.r > 255) ? 255 : this.r);\n        this.g = (this.g < 0 || isNaN(this.g)) ? 0 : ((this.g > 255) ? 255 : this.g);\n        this.b = (this.b < 0 || isNaN(this.b)) ? 0 : ((this.b > 255) ? 255 : this.b);\n\n        // some getters\n        this.toRGB = function () {\n            return 'rgb(' + this.r + ', ' + this.g + ', ' + this.b + ')';\n        }\n        this.toHex = function () {\n            var r = this.r.toString(16);\n            var g = this.g.toString(16);\n            var b = this.b.toString(16);\n            if (r.length == 1) r = '0' + r;\n            if (g.length == 1) g = '0' + g;\n            if (b.length == 1) b = '0' + b;\n            return '#' + r + g + b;\n        }\n\n        // help\n        this.getHelpXML = function () {\n\n            var examples = new Array();\n            // add regexps\n            for (var i = 0; i < color_defs.length; i++) {\n                var example = color_defs[i].example;\n                for (var j = 0; j < example.length; j++) {\n                    examples[examples.length] = example[j];\n                }\n            }\n            // add type-in colors\n            for (var sc in simple_colors) {\n                examples[examples.length] = sc;\n            }\n\n            var xml = document.createElement('ul');\n            xml.setAttribute('id', 'rgbcolor-examples');\n            for (var i = 0; i < examples.length; i++) {\n                try {\n                    var list_item = document.createElement('li');\n                    var list_color = new RGBColor(examples[i]);\n                    var example_div = document.createElement('div');\n                    example_div.style.cssText =\n                        'margin: 3px; '\n                        + 'border: 1px solid black; '\n                        + 'background:' + list_color.toHex() + '; '\n                        + 'color:' + list_color.toHex()\n                    ;\n                    example_div.appendChild(document.createTextNode('test'));\n                    var list_item_value = document.createTextNode(\n                        ' ' + examples[i] + ' -> ' + list_color.toRGB() + ' -> ' + list_color.toHex()\n                    );\n                    list_item.appendChild(example_div);\n                    list_item.appendChild(list_item_value);\n                    xml.appendChild(list_item);\n\n                } catch(e){}\n            }\n            return xml;\n\n        }\n\n    }\n\n    // export as AMD...\n    if ( typeof define !== 'undefined' && define.amd ) {\n        define( function () { return RGBColor; });\n    }\n\n    // ...or as browserify\n    else if ( typeof module !== 'undefined' && module.exports ) {\n        module.exports = RGBColor;\n    }\n\n    global.RGBColor = RGBColor;\n\n}( typeof window !== 'undefined' ? window : this ));","!function(t,e){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=e():\"function\"==typeof define&&define.amd?define(e):t.ResizeObserver=e()}(this,function(){\"use strict\";var t=function(){if(\"undefined\"!=typeof Map)return Map;function t(t,e){var n=-1;return t.some(function(t,i){return t[0]===e&&(n=i,!0)}),n}return function(){function e(){this.__entries__=[]}var n={size:{configurable:!0}};return n.size.get=function(){return this.__entries__.length},e.prototype.get=function(e){var n=t(this.__entries__,e),i=this.__entries__[n];return i&&i[1]},e.prototype.set=function(e,n){var i=t(this.__entries__,e);~i?this.__entries__[i][1]=n:this.__entries__.push([e,n])},e.prototype.delete=function(e){var n=this.__entries__,i=t(n,e);~i&&n.splice(i,1)},e.prototype.has=function(e){return!!~t(this.__entries__,e)},e.prototype.clear=function(){this.__entries__.splice(0)},e.prototype.forEach=function(t,e){void 0===e&&(e=null);for(var n=0,i=this.__entries__;n<i.length;n+=1){var r=i[n];t.call(e,r[1],r[0])}},Object.defineProperties(e.prototype,n),e}()}(),e=\"undefined\"!=typeof window&&\"undefined\"!=typeof document&&window.document===document,n=\"undefined\"!=typeof global&&global.Math===Math?global:\"undefined\"!=typeof self&&self.Math===Math?self:\"undefined\"!=typeof window&&window.Math===Math?window:Function(\"return this\")(),i=\"function\"==typeof requestAnimationFrame?requestAnimationFrame.bind(n):function(t){return setTimeout(function(){return t(Date.now())},1e3/60)},r=2,o=[\"top\",\"right\",\"bottom\",\"left\",\"width\",\"height\",\"size\",\"weight\"],s=\"undefined\"!=typeof MutationObserver,a=function(){this.connected_=!1,this.mutationEventsAdded_=!1,this.mutationsObserver_=null,this.observers_=[],this.onTransitionEnd_=this.onTransitionEnd_.bind(this),this.refresh=function(t,e){var n=!1,o=!1,s=0;function a(){n&&(n=!1,t()),o&&h()}function c(){i(a)}function h(){var t=Date.now();if(n){if(t-s<r)return;o=!0}else n=!0,o=!1,setTimeout(c,e);s=t}return h}(this.refresh.bind(this),20)};a.prototype.addObserver=function(t){~this.observers_.indexOf(t)||this.observers_.push(t),this.connected_||this.connect_()},a.prototype.removeObserver=function(t){var e=this.observers_,n=e.indexOf(t);~n&&e.splice(n,1),!e.length&&this.connected_&&this.disconnect_()},a.prototype.refresh=function(){this.updateObservers_()&&this.refresh()},a.prototype.updateObservers_=function(){var t=this.observers_.filter(function(t){return t.gatherActive(),t.hasActive()});return t.forEach(function(t){return t.broadcastActive()}),t.length>0},a.prototype.connect_=function(){e&&!this.connected_&&(document.addEventListener(\"transitionend\",this.onTransitionEnd_),window.addEventListener(\"resize\",this.refresh),s?(this.mutationsObserver_=new MutationObserver(this.refresh),this.mutationsObserver_.observe(document,{attributes:!0,childList:!0,characterData:!0,subtree:!0})):(document.addEventListener(\"DOMSubtreeModified\",this.refresh),this.mutationEventsAdded_=!0),this.connected_=!0)},a.prototype.disconnect_=function(){e&&this.connected_&&(document.removeEventListener(\"transitionend\",this.onTransitionEnd_),window.removeEventListener(\"resize\",this.refresh),this.mutationsObserver_&&this.mutationsObserver_.disconnect(),this.mutationEventsAdded_&&document.removeEventListener(\"DOMSubtreeModified\",this.refresh),this.mutationsObserver_=null,this.mutationEventsAdded_=!1,this.connected_=!1)},a.prototype.onTransitionEnd_=function(t){var e=t.propertyName;void 0===e&&(e=\"\"),o.some(function(t){return!!~e.indexOf(t)})&&this.refresh()},a.getInstance=function(){return this.instance_||(this.instance_=new a),this.instance_},a.instance_=null;var c=function(t,e){for(var n=0,i=Object.keys(e);n<i.length;n+=1){var r=i[n];Object.defineProperty(t,r,{value:e[r],enumerable:!1,writable:!1,configurable:!0})}return t},h=function(t){return t&&t.ownerDocument&&t.ownerDocument.defaultView||n},u=_(0,0,0,0);function f(t){return parseFloat(t)||0}function d(t){for(var e=[],n=arguments.length-1;n-- >0;)e[n]=arguments[n+1];return e.reduce(function(e,n){return e+f(t[\"border-\"+n+\"-width\"])},0)}function p(t){var e=t.clientWidth,n=t.clientHeight;if(!e&&!n)return u;var i,r=h(t).getComputedStyle(t),o=function(t){for(var e={},n=0,i=[\"top\",\"right\",\"bottom\",\"left\"];n<i.length;n+=1){var r=i[n],o=t[\"padding-\"+r];e[r]=f(o)}return e}(r),s=o.left+o.right,a=o.top+o.bottom,c=f(r.width),p=f(r.height);if(\"border-box\"===r.boxSizing&&(Math.round(c+s)!==e&&(c-=d(r,\"left\",\"right\")+s),Math.round(p+a)!==n&&(p-=d(r,\"top\",\"bottom\")+a)),(i=t)!==h(i).document.documentElement){var v=Math.round(c+s)-e,l=Math.round(p+a)-n;1!==Math.abs(v)&&(c-=v),1!==Math.abs(l)&&(p-=l)}return _(o.left,o.top,c,p)}var v=\"undefined\"!=typeof SVGGraphicsElement?function(t){return t instanceof h(t).SVGGraphicsElement}:function(t){return t instanceof h(t).SVGElement&&\"function\"==typeof t.getBBox};function l(t){return e?v(t)?_(0,0,(n=t.getBBox()).width,n.height):p(t):u;var n}function _(t,e,n,i){return{x:t,y:e,width:n,height:i}}var b=function(t){this.broadcastWidth=0,this.broadcastHeight=0,this.contentRect_=_(0,0,0,0),this.target=t};b.prototype.isActive=function(){var t=l(this.target);return this.contentRect_=t,t.width!==this.broadcastWidth||t.height!==this.broadcastHeight},b.prototype.broadcastRect=function(){var t=this.contentRect_;return this.broadcastWidth=t.width,this.broadcastHeight=t.height,t};var m=function(t,e){var n,i,r,o,s,a,h,u=(i=(n=e).x,r=n.y,o=n.width,s=n.height,a=\"undefined\"!=typeof DOMRectReadOnly?DOMRectReadOnly:Object,h=Object.create(a.prototype),c(h,{x:i,y:r,width:o,height:s,top:r,right:i+o,bottom:s+r,left:i}),h);c(this,{target:t,contentRect:u})},y=function(e,n,i){if(this.activeObservations_=[],this.observations_=new t,\"function\"!=typeof e)throw new TypeError(\"The callback provided as parameter 1 is not a function.\");this.callback_=e,this.controller_=n,this.callbackCtx_=i};y.prototype.observe=function(t){if(!arguments.length)throw new TypeError(\"1 argument required, but only 0 present.\");if(\"undefined\"!=typeof Element&&Element instanceof Object){if(!(t instanceof h(t).Element))throw new TypeError('parameter 1 is not of type \"Element\".');var e=this.observations_;e.has(t)||(e.set(t,new b(t)),this.controller_.addObserver(this),this.controller_.refresh())}},y.prototype.unobserve=function(t){if(!arguments.length)throw new TypeError(\"1 argument required, but only 0 present.\");if(\"undefined\"!=typeof Element&&Element instanceof Object){if(!(t instanceof h(t).Element))throw new TypeError('parameter 1 is not of type \"Element\".');var e=this.observations_;e.has(t)&&(e.delete(t),e.size||this.controller_.removeObserver(this))}},y.prototype.disconnect=function(){this.clearActive(),this.observations_.clear(),this.controller_.removeObserver(this)},y.prototype.gatherActive=function(){var t=this;this.clearActive(),this.observations_.forEach(function(e){e.isActive()&&t.activeObservations_.push(e)})},y.prototype.broadcastActive=function(){if(this.hasActive()){var t=this.callbackCtx_,e=this.activeObservations_.map(function(t){return new m(t.target,t.broadcastRect())});this.callback_.call(t,e,t),this.clearActive()}},y.prototype.clearActive=function(){this.activeObservations_.splice(0)},y.prototype.hasActive=function(){return this.activeObservations_.length>0};var g=\"undefined\"!=typeof WeakMap?new WeakMap:new t,w=function(t){if(!(this instanceof w))throw new TypeError(\"Cannot call a class as a function.\");if(!arguments.length)throw new TypeError(\"1 argument required, but only 0 present.\");var e=a.getInstance(),n=new y(t,e,this);g.set(this,n)};return[\"observe\",\"unobserve\",\"disconnect\"].forEach(function(t){w.prototype[t]=function(){return(e=g.get(this))[t].apply(e,arguments);var e}}),void 0!==n.ResizeObserver?n.ResizeObserver:w});","var content = require(\"!!../../../../node_modules/css-loader/dist/cjs.js!./Markups.css\");\n\nif (typeof content === 'string') {\n  content = [[module.id, content, '']];\n}\n\nvar options = {}\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = require(\"!../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\")(content, options);\n\nif (content.locals) {\n  module.exports = content.locals;\n}\n","exports = module.exports = require(\"../../../../node_modules/css-loader/dist/runtime/api.js\")(false);\n// Module\nexports.push([module.id, \".adsk-viewing-viewer .autodesk-markups-extension-core-make-me-bigger:after {\\n\\tcontent: \\\"\\\"; \\n\\tposition: absolute; \\n\\ttop: -15px; \\n\\tbottom: -15px; \\n\\tleft: -15px; \\n\\tright: -15px;\\n}\\n\\n.adsk-viewing-viewer .autodesk-markups-extension-core-make-me-bigger.rotation-bridge:after {\\n\\ttop: 0; \\n\\tbottom: 0px; \\n}\\n\\n.adsk-viewing-viewer .selector-box {\\n\\tposition: absolute;\\n    border: 1px dashed #0696D7;\\n    background: rgba(6, 150, 215, 0.05);\\n    z-index: 1;\\n    cursor: move;\\n    box-sizing: border-box;\\n}\\n\\n.adsk-viewing-viewer .selector-drag-point,\\n.adsk-viewing-viewer .selector-rotate-point {\\n\\tposition: absolute;\\n\\theight: 8px;\\n\\twidth: 8px;\\n\\tborder-radius: 8px;\\t\\t\\t\\t\\t/*HANDLE_SIZE*/\\n    background: #FFFFFF;\\t\\t\\t\\t/*HANDLE_BACKGROUND_COLOR*/\\n    border-color: rgba(107,120,127,0.7); /* HANDLE_BORDER_COLOR; */\\n    border-width: 1px; \\t\\t\\t\\t\\t/* BORDER_WIDTH */\\n    border-style: solid;\\n}\\n\\n.adsk-viewing-viewer .selector-rotate-point {\\n\\ttop: calc(100% + 22px); /* 30 - 8 = 22 */\\n\\tleft: calc(50% + 1px);\\n\\ttransform: translate3d(-50%, 0px, 0px);\\n}\\n\\n.adsk-viewing-viewer .selector-drag-point.selected,\\n.adsk-viewing-viewer .selector-rotate-point.selected:not(.rotation-bridge) {\\n\\tbackground: #0696D7;\\n\\tborder-color: #0696D7;\\n}\\n\\n.adsk-viewing-viewer .rotation-bridge {\\n\\tposition: absolute;\\n\\tbackground-color: rgba(0,0,0,0);\\n\\theight: 30px;\\n\\twidth: 0px;\\n\\ttop: 100%;\\n\\tleft: calc(50% + 1px);\\n\\tborder: unset;\\n    border-left: 1px dashed #0696D7;\\n}\\n/*var placementOffset = -6;*/\\n.adsk-viewing-viewer .selector-drag-point.sdp-handle-n {\\n\\ttop: -6px;\\n\\tleft: calc(50% - 4px);\\n\\tposition: relative;\\n}\\n\\n.adsk-viewing-viewer .selector-drag-point.sdp-handle-s {\\n\\ttop: calc(100% - 14px);\\n    left: calc(50% - 4px);\\n    position: relative;\\n}\\n\\n.adsk-viewing-viewer .selector-drag-point.sdp-handle-w {\\n\\tleft: -6px;\\n\\ttop: 50%;\\n\\ttransform: translate3d(0, -50%, 0);\\n}\\n\\n.adsk-viewing-viewer .selector-drag-point.sdp-handle-e {\\n\\tright: -6px;\\n\\ttop: 50%;\\n    transform: translate3d(0, -50%, 0);\\n}\\n\\n.adsk-viewing-viewer .selector-drag-point.sdp-handle-nw {\\n\\ttop: -6px;\\n\\tleft: -6px;\\n}\\n\\n.adsk-viewing-viewer .selector-drag-point.sdp-handle-ne {\\n\\ttop: -6px;\\n\\tright: -6px;\\n}\\n\\n.adsk-viewing-viewer .selector-drag-point.sdp-handle-sw {\\n\\tbottom: -6px;\\n\\tleft: -6px;\\n}\\n\\n.adsk-viewing-viewer .selector-drag-point.sdp-handle-se {\\n\\tbottom: -6px;\\n\\tright: -6px;\\n}\", \"\"]);\n","var content = require(\"!!../../../../node_modules/css-loader/dist/cjs.js!./MarkupsGui.css\");\n\nif (typeof content === 'string') {\n  content = [[module.id, content, '']];\n}\n\nvar options = {}\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = require(\"!../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\")(content, options);\n\nif (content.locals) {\n  module.exports = content.locals;\n}\n","exports = module.exports = require(\"../../../../node_modules/css-loader/dist/runtime/api.js\")(false);\n// Module\nexports.push([module.id, \"\\n.adsk-icon-markup:before {\\n  content: \\\"a\\\";\\n}\\n\\n.lmv-markup-gui-toolbar {\\n  position: absolute;\\n  top: 0;\\n  margin: 5px 5px;\\n  color: #000000;\\n}\\n\\n.lmv-markup-gui-toolbar-content > * {\\n  margin: 0 2px;\\n}\\n\\n.lmv-markup-gui-style-options {\\n  display: inline-block;\\n}\", \"\"]);\n","\n// These are all the supported markup types.\n\n    export const MARKUP_TYPE_ARROW = \"arrow\";\n    export const MARKUP_TYPE_TEXT = \"label\";\n    export const MARKUP_TYPE_RECTANGLE = \"rectangle\";\n    export const MARKUP_TYPE_CIRCLE = \"ellipse\";\n    export const MARKUP_TYPE_CLOUD = \"cloud\";\n    export const MARKUP_TYPE_FREEHAND = \"freehand\";\n    export const MARKUP_TYPE_HIGHLIGHT = \"highlight\";\n    export const MARKUP_TYPE_POLYLINE = \"polyline\";\n    export const MARKUP_TYPE_POLYCLOUD = \"polycloud\";\n    export const MARKUP_TYPE_CALLOUT = \"callout\";\n    export const MARKUP_TYPE_DIMENSION = \"dimension\";","'use strict';\n\n    /**\n     * Base class for all markup edit actions.\n     *\n     * EditActions encapsulate {@link Autodesk.Viewing.Extensions.Markups.Core.Markup|Markup}\n     * operations (such as creation, edition and deletion) that hook into the undo/redo system.\n     *\n     * The minimum set of methods to implement on an EditAction extension are:\n     * - execute()\n     * - undo()\n     * - redo()\n     *\n     * A good set of classes to check their implementation are:\n     * {@link Autodesk.Viewing.Extensions.Markups.Core.CreateCircle|CreateCircle}.\n     * {@link Autodesk.Viewing.Extensions.Markups.Core.DeleteCircle|DeleteCircle}.\n     * {@link Autodesk.Viewing.Extensions.Markups.Core.SetCircle|SetCircle}.\n     *\n     * @tutorial feature_markup\n     * @constructor\n     * @memberof Autodesk.Viewing.Extensions.Markups.Core\n     *\n     * @param {Autodesk.Viewing.Extensions.Markups.Core.MarkupsCore} editor\n     * @param {String} type - An identifier for the EditAction.\n     * @param {number} targetId - The id of the markup being affected.\n     */\n    export function EditAction(editor, type, targetId) {\n\n        this.type =  type;\n        this.editor = editor;\n        this.targetId = targetId;\n        this.addToHistory = true;\n        this.selectOnExecution = true;\n    }\n\n    /**\n     * Performs the action.\n     */\n    EditAction.prototype.execute = function() {\n\n        this.editor.actionManager.execute(this);\n    };\n\n    /**\n     * @abstract\n     */\n    EditAction.prototype.redo = function() {\n\n    };\n\n    /**\n     * @abstract\n     */\n    EditAction.prototype.undo = function() {\n\n    };\n\n    /**\n     * Provides a mechanism to merge consecutive actions of the same type.\n     * @param {Autodesk.Viewing.Extensions.Markups.Core.EditAction} action - Action to check if it can be merged with 'this'.\n     * @returns {boolean} Returns true if merge has been applied. Parameter will be discarded.\n     */\n    EditAction.prototype.merge = function(action) {\n\n        return false;\n    };\n\n    /**\n     * Provides a mechanism to check whether the action yields no results.\n     * @returns {boolean} Returns true if no changes happen with this action.\n     */\n    EditAction.prototype.isIdentity = function() {\n\n        return false;\n    };\n\n","\n/**\n * \n * @param {*} attributes \n * @param {*} editor \n */\nexport var createStyle = function(attributes, editor) {\n\n    var style = {};\n\n    for(var i = 0; i < attributes.length; ++i) {\n\n        style[attributes[i]] = null;\n    }\n\n    var defaults = getStyleDefaultValues(style, editor);\n\n    for(var i = 0; i < attributes.length; ++i) {\n\n        var attribute = attributes[i];\n        style[attribute] = defaults[attribute].values[defaults[attribute].default].value;\n    }\n\n    return style;\n};\n\n/**\n *\n * @param source\n * @param destination\n * @returns {*}\n */\nexport var copyStyle = function(source, destination) {\n\n    for(var attribute in destination) {\n        if (source.hasOwnProperty(attribute)) {\n            destination[attribute] = source[attribute];\n        }\n    }\n\n    return destination;\n};\n\n/**\n *\n * @param source\n * @param destination\n * @returns {*}\n */\nexport var isStyleEqual = function(source, destination) {\n\n    for(var attribute in destination) {\n        if (source.hasOwnProperty(attribute) && source[attribute] !== destination[attribute]) {\n            return false;\n        }\n    }\n\n    return true;\n};\n\n/**\n *\n * @param source\n * @returns {{}}\n */\nexport var cloneStyle = function(source) {\n\n    var clone = {};\n\n    for(var attribute in source) {\n        clone[attribute] = source[attribute];\n    }\n\n    return clone;\n};\n\n/**\n *\n * @param style\n * @param editor\n * @returns {{}}\n */\nexport var getStyleDefaultValues = function(style, editor) {\n\n    function getWidths(normalWidth) {\n\n        return {\n            values: [\n                {name:'Thin', value: normalWidth / 3},\n                {name:'Normal', value: normalWidth},\n                {name:'Thick', value: normalWidth * 3},\n                {name:'Very Thick', value: normalWidth * 9}],\n            default: 1\n        };\n    }\n\n    function getLineJoins() {\n\n        return {\n            values: [\n                {name:'Miter', value: 'miter'},\n                {name:'Round', value: 'round'},\n                {name:'Bevel', value: 'bevel'}],\n            default: 0\n        };\n    }\n\n    function getFontSizes(normalWidth) {\n\n        return {\n            values: [\n                {name:'Thin', value: normalWidth / 2},\n                {name:'Normal', value: normalWidth},\n                {name:'Thick', value: normalWidth * 4}],\n            default: 1\n        };\n    }\n\n    function getColors() {\n\n        return {\n            values: [\n                {name:'red', value: '#ff0000'},\n                {name:'green', value: '#00ff00'},\n                {name:'blue', value: '#0000ff'},\n                {name:'white', value: '#ffffff'},\n                {name:'black', value: '#000000'},\n                {name:'yellow', value: '#ffff00'}],\n            default: 0\n        };\n    }\n\n    function getOpacities(defaultTransparent) {\n\n        return {\n            values: [\n                {name:'100%', value: 1.00},\n                {name:'75%', value:  0.75},\n                {name:'50%', value: 0.50},\n                {name:'25%', value: 0.25},\n                {name:'0%', value: 0.00}],\n            default: (defaultTransparent ? 4 : 0)\n        };\n    }\n\n    function getFontFamilies() {\n\n        // TODO: Localize?\n        // TODO: Validate fonts with design\n        // Source: http://www.webdesigndev.com/web-development/16-gorgeous-web-safe-fonts-to-use-with-css\n        return {\n            values:[\n                {name:'Arial', value: 'Arial'},\n                {name:'Arial Black', value: 'Arial Black'},\n                {name:'Arial Narrow', value: 'Arial Narrow'},\n                {name:'Century Gothic', value: 'Century Gothic'},\n                {name:'Courier New', value: 'Courier New'},\n                {name:'Georgia', value: 'Georgia'},\n                {name:'Impact', value: 'Impact'},\n                {name:'Lucida Console', value: 'Lucida Console'},\n                {name:'Tahoma', value: 'Tahoma'},\n                {name:'Verdana', value: 'Verdana'}\n            ],\n            default: 0\n        };\n    }\n\n    function getFontStyles() {\n        return {\n            values:[\n                {name:'Normal', value: 'normal'},\n                {name:'Italic', value: 'italic'}],\n            default: 0\n        };\n    }\n\n    function getFontWeights() {\n        return {\n            values:[\n                {name:'Normal', value: 'normal'},\n                {name:'Bold', value: 'bold'}],\n            default: 0};\n    }\n\n    var values = cloneStyle(style);\n    var normaStrokeWidth = editor.getStrokeWidth();\n    var normaFontWidth = editor.getFontWidth();\n\n    for(var attribute in values) {\n\n        switch(attribute) {\n            case 'stroke-width':\n                values[attribute] = getWidths(normaStrokeWidth);\n                break;\n\n            case 'stroke-linejoin':\n                values[attribute] = getLineJoins();\n                break;\n\n            case 'font-size':\n                values[attribute] = getFontSizes(normaFontWidth);\n                break;\n\n            case 'font-family':\n                values[attribute] = getFontFamilies();\n                break;\n\n            case 'font-style':\n                values[attribute] = getFontStyles();\n                break;\n\n            case 'font-weight':\n                values[attribute] = getFontWeights();\n                break;\n\n            case 'stroke-color':\n            case 'fill-color':\n                values[attribute] = getColors();\n                break;\n\n            case 'stroke-opacity':\n                var defaultTransparent = false;\n                values[attribute] = getOpacities(defaultTransparent);\n                break;\n\n            case 'fill-opacity':\n                var defaultTransparent = true;\n                values[attribute] = getOpacities(defaultTransparent);\n                break;\n\n            default:\n                break;\n        }\n    }\n\n    return values;\n};\n","'use strict';\n\n    /**\n     * Fired whenever the drawing tool changes. For example, when the Arrow drawing\n     * tool changes into the Rectangle drawing tool.\n     * See {@link Autodesk.Viewing.Extensions.Markups.Core.MarkupsCore/#changeEditMode|MarkupsCore.changeEditMode()}\n     * for a list of all supported drawing tools (EditModes).\n     * \n     * @event Autodesk.Viewing.Extensions.Markups.Core.MarkupsCore#EVENT_EDITMODE_CHANGED\n     * @type {string}\n     */\n    export const EVENT_EDITMODE_CHANGED = \"EVENT_EDITMODE_CHANGED\";\n\n    /**\n     * Fired when Edit mode has been enabled, which allows the end user to start\n     * drawing markups over the Viewer canvas.\n     * See also {@link Autodesk.Viewing.Extensions.Markups.Core.MarkupsCore/#enterEditMode|MarkupsCore.enterEditMode()}.\n     * \n     * @event Autodesk.Viewing.Extensions.Markups.Core.MarkupsCore#EVENT_EDITMODE_ENTER\n     * @type {string}\n     */\n    export const EVENT_EDITMODE_ENTER = \"EVENT_EDITMODE_ENTER\";\n\n    /**\n     * Fired when Edit mode has been disabled, preventing the end user from\n     * drawing markups over the Viewer canvas.\n     * See also {@link Autodesk.Viewing.Extensions.Markups.Core.MarkupsCore/#leaveEditMode|MarkupsCore.leaveEditMode()}.\n     * \n     * @event Autodesk.Viewing.Extensions.Markups.Core.MarkupsCore#EVENT_EDITMODE_LEAVE\n     * @type {string}\n     */\n    export const EVENT_EDITMODE_LEAVE = \"EVENT_EDITMODE_LEAVE\";\n\n    /**\n     * Fired when a drawn markup has been selected by the end user with a click command.\n     * \n     * @event Autodesk.Viewing.Extensions.Markups.Core.MarkupsCore#EVENT_MARKUP_SELECTED\n     * @type {string}\n     */\n    export const EVENT_MARKUP_SELECTED = \"EVENT_MARKUP_SELECTED\";\n\n    /**\n     * Fired when a drawn markup is being dragged over the Viewer canvas.\n     * \n     * @event Autodesk.Viewing.Extensions.Markups.Core.MarkupsCore#EVENT_MARKUP_DRAGGING\n     * @type {string}\n     */\n    export const EVENT_MARKUP_DRAGGING = \"EVENT_MARKUP_DRAGGING\";\n\n    /**\n     * Internal usage only.\n     * \n     * @event Autodesk.Viewing.Extensions.Markups.Core.MarkupsCore#EVENT_MARKUP_ENTER_EDITION\n     * @type {string}\n     * @private\n     */\n    export const EVENT_MARKUP_ENTER_EDITION = \"EVENT_MARKUP_ENTER_EDITION\";\n\n    /**\n     * Internal usage only.\n     * \n     * @event Autodesk.Viewing.Extensions.Markups.Core.MarkupsCore#EVENT_MARKUP_CANCEL_EDITION\n     * @type {string}\n     * @private\n     */\n    export const EVENT_MARKUP_CANCEL_EDITION = \"EVENT_MARKUP_CANCEL_EDITION\";\n\n    /**\n     * Internal usage only.\n     * \n     * @event Autodesk.Viewing.Extensions.Markups.Core.MarkupsCore#EVENT_MARKUP_DELETE_EDITION\n     * @type {string}\n     * @private\n     */\n    export const EVENT_MARKUP_DELETE_EDITION = \"EVENT_MARKUP_DELETE_EDITION\";\n\n\n    /**\n     * Fired whenever a new undo or redo action is available.\n     */\n    export const EVENT_HISTORY_CHANGED = \"EVENT_HISTORY_CHANGED\";\n\n    /**\n     * Fired when a markup creation begins. \n     * For example, as soon as the user starts dragging with the mouse\n     * to draw an arrow on the screen.\n     */\n    export const EVENT_EDITMODE_CREATION_BEGIN = \"EVENT_EDITMODE_CREATION_BEGIN\";\n\n    /**\n     * Fired when a markup has been created.\n     * For example, as soon as the user stops dragging and releases the\n     * mouse button to finish drawing an arrow on the screen\n     */\n    export const EVENT_EDITMODE_CREATION_END = \"EVENT_EDITMODE_CREATION_END\";\n\n    /**\n     * Fired when a markup is no longer selected.\n     */\n    export const EVENT_MARKUP_DESELECT = \"EVENT_MARKUP_DESELECT\";\n\n    /**\n     * The selected markup is being modified\n     */\n    export const EVENT_EDITFRAME_EDITION_START = \"EVENT_EDITFRAME_EDITION_START\";\n\n    /**\n     * The selected markup is no longer being modified\n     */\n    export const EVENT_EDITFRAME_EDITION_END = \"EVENT_EDITFRAME_EDITION_END\";","'use strict';\n\nimport { addTraitEventDispatcher, renderToCanvas, radiansToDegrees, \n         checkPolygon, checkLineSegment, isTouchDevice } from './MarkupsCoreUtils'\nimport { createStyle, copyStyle, cloneStyle } from './StyleUtils'\nimport * as MarkupEvents from './MarkupEvents'\n\n    var av = Autodesk.Viewing;\n\n    /**\n     * Base class for all markups.\n     *\n     * A Markup is a class that is capable of rendering itself as an Svg node.<br>\n     * It can also render itself into a canvas-2d context.\n     * Component within {@link Autodesk.Viewing.Extensions.Markups.Core.MarkupsCore MarkupsCore} extension.\n     *\n     * Any class extending Markup should contain at least the following methods:\n     * - getEditMode()\n     * - set()\n     * - updateStyle()\n     * - setParent()\n     * - setRotation()\n     * - setSize()\n     * - setPosition()\n     * - renderToCanvas()\n     * - setMetadata()\n     *\n     * A good reference is the rectangle markup implementation available in\n     * {@link Autodesk.Viewing.Extensions.Markups.Core.MarkupRectangle|MarkupRectangle}.\n     *\n     * @tutorial feature_markup\n     * @constructor\n     * @memberof Autodesk.Viewing.Extensions.Markups.Core\n     *\n     * @param {number} id - Identifier, populated with return value of {@link Autodesk.Viewing.Extensions.Markups.Core.MarkupsCore#getId getId()}.\n     * @param {Autodesk.Viewing.Extensions.Markups.Core.MarkupsCore} editor - Markups extension\n     * @param {Array} styleAttributes - Attributes for customization. Related to {@link Autodesk.Viewing.Extensions.Markups.Core.MarkupsCore#setStyle setStyle()}.\n     * @constructor\n     */\n    export function Markup(id, editor, styleAttributes) {\n\n        this.id = id;\n        this.type = \"\";\n        this.editor = editor;\n        this.viewer = editor.viewer;\n        this.setGlobalManager(this.viewer.globalManager);\n        this.position = {x: 0, y: 0};\n        this.size = {x:0, y:0};\n        this.rotation = 0;\n        this.style = createStyle(styleAttributes, this.editor);\n        this.style = copyStyle(editor.getDefaultStyle(), this.style);\n        this.highlightColor = '#0696D7';\n        this.constraintWidth = false;\n        this.constraintHeight = false;\n        this.constraintRotation = false;\n        this.minWidth = -10000;\n        this.minHeight = -10000;\n        this.highlighted = false;\n        this.selected = false;\n\n        // bind to this to pass this.globalManager\n        this.checkLineSegment = checkLineSegment.bind(this);\n        this.checkPolygon = checkPolygon.bind(this);\n        this.renderToCanvasX = renderToCanvas.bind(this);\n\n        addTraitEventDispatcher(this);\n    }\n\n    av.GlobalManagerMixin.call(Markup.prototype);\n    var proto = Markup.prototype;\n\n    proto.destroy = function () {\n\n        this.unselect();\n        this.setParent(null);\n    };\n\n    /**\n     * Specifies the parent layer which will contain the markup.\n     * @param {HTMLElement} parent\n     */\n    proto.setParent = function(parent) {\n\n        var div = this.shape;\n        div.parentNode && div.parentNode.removeChild(div);\n        parent && parent.appendChild(div);\n    };\n\n    /**\n     * Clones (deep-copy) the markup. Used internally by the copy/cut/paste mechanism in\n     * {@link Autodesk.Viewing.Extensions.Markups.Core.MarkupsCore MarkupsCore}.\n     *\n     * @returns {Autodesk.Viewing.Extensions.Markups.Core.Markup} clone of the current markup\n     */\n    proto.clone = function() {\n\n        var clone = Object.create(this.__proto__);\n        var overrides = this.getCloneOverrides();\n\n        for (var name in this) {\n\n            if(!this.hasOwnProperty(name)) {\n                continue;\n            }\n\n            var member = this[name];\n\n            // Is there an override for this member?\n            if (overrides.hasOwnProperty(name)) {\n                clone[name] = overrides[name];\n                continue;\n            }\n\n            // Member is null or undefined?\n            if (member === null || member === undefined) {\n                clone[name] = member;\n                continue;\n            }\n\n            // Member has a clone function?\n            if (member['clone'] instanceof Function) {\n                clone[name] = member.clone();\n                continue;\n            }\n\n            // Is it a function?\n            if (member instanceof Function) {\n                clone[name] = member.bind(clone);\n                continue;\n            }\n\n            // Is it an html node?\n            if (member.nodeType) {\n                clone[name] = member.cloneNode(true);\n                continue;\n            }\n\n            // Is it the globalManager?\n            if (member instanceof av.GlobalManager) {\n                av.GlobalManagerMixin.call(clone);\n                clone.setGlobalManager(member);\n                continue;\n            }\n\n            // Just a plain object?\n            if (member instanceof Object) {\n                clone[name] = JSON.parse(JSON.stringify(member));\n                continue;\n            }\n\n            // Ok, it seems it's just a primitive type.\n            clone[name] = member;\n        }\n\n        this.cloneShape(clone);\n        return clone;\n    };\n\n    proto.cloneShape = function(clone) {\n\n        clone.shape.markup = clone.shape.childNodes.item(0);\n        clone.shape.hitarea = clone.shape.childNodes.item(1);\n        clone.bindDomEvents();\n    };\n\n    /**\n     * Used internally by\n     * {@link Autodesk.Viewing.Extensions.Markups.Core.Markup#clone clone()},\n     * provides a mechanism to avoid cloning specific attributes.<br>\n     * Developers only need to override this method when creating new Markup types.\n     * When overriding, first call the super() implementation and then include additional attribute/value pairs to it.\n     * @returns {Object} containing attributes that need not to be cloned.\n     */\n    proto.getCloneOverrides = function() {\n\n        return {\n            viewer: this.viewer,\n            editor: this.editor,\n            hammer: null,\n            listeners: {}\n        }\n    };\n\n    /**\n     * Used internally to select a markup.<br>\n     * Fires event Autodesk.Viewing.Extensions.Markups.Core.EVENT_MARKUP_SELECTED.\n     */\n    proto.select = function () {\n\n        if (this.selected) {\n            return;\n        }\n\n        this.selected = true;\n        this.highlighted = false;\n        this.updateStyle();\n        this.dispatchEvent({type: MarkupEvents.EVENT_MARKUP_SELECTED, markup: this});\n    };\n\n    /**\n     * Used internally to signal that the current markup has been unselected.<br>\n     * No event is fired.\n     */\n    proto.unselect = function() {\n\n        this.selected = false;\n    };\n\n    proto.highlight = function(highlight) {\n\n        if (this.interactionsDisabled) {\n            return;\n        }\n\n        this.highlighted = highlight;\n        this.updateStyle();\n    };\n\n    /**\n     * Returns a copy of the markup's style.\n     * @returns {Object}\n     */\n    proto.getStyle = function() {\n\n        return cloneStyle(this.style);\n    };\n\n    /**\n     * Used internally to set the style object. Triggers a re-render of the markup (Svg)\n     * @param {Object} style - Dictionary with key/value pairs\n     */\n    proto.setStyle = function(style) {\n\n        copyStyle(style, this.style);\n        this.updateStyle();\n    };\n\n    /**\n     * Used internally and implemented by specific Markup types to render themselves as Svg.\n     */\n    proto.updateStyle = function () {\n\n    };\n\n    /**\n     * Used internally to notify the markup that it is now being edited.<br>\n     * Fires event Autodesk.Viewing.Extensions.Markups.Core.EVENT_MARKUP_ENTER_EDITION.\n     */\n    proto.edit = function() {\n\n        this.dispatchEvent({type: MarkupEvents.EVENT_MARKUP_ENTER_EDITION, markup: this});\n    };\n\n    /**\n     * Used internally to signal that it is no longer being edited.<br>\n     * Fires event Autodesk.Viewing.Extensions.Markups.Core.EVENT_MARKUP_CANCEL_EDITION.\n     */\n    proto.cancel = function() {\n\n        this.dispatchEvent({type: MarkupEvents.EVENT_MARKUP_CANCEL_EDITION, markup: this});\n    };\n\n    /**\n     * Used internally to signal that the markup is being deleted.<br>\n     * Fires event Autodesk.Viewing.Extensions.Markups.Core.EVENT_MARKUP_DELETE_EDITION.\n     */\n    proto.deleteMarkup = function() {\n\n        this.dispatchEvent({type: MarkupEvents.EVENT_MARKUP_DELETE_EDITION, markup: this});\n    };\n\n    /**\n     * Used internally to get the {@link Autodesk.Viewing.Extensions.Markups.Core.EditMode EditMode}\n     * associated with the current Markup.<br>\n     * Implemented by classes extending this one.\n     * @returns {Autodesk.Viewing.Extensions.Markups.Core.EditMode}\n     */\n    proto.getEditMode = function() {\n\n        console.warn('EditMode of markup type' + this.type + ' not defined.' );\n        return null;\n    };\n\n    /**\n     * Used internally to get the markup's position in browser pixel space.<br>\n     * Notice that (0,0) is top left.<br>\n     * See also\n     * {@link Autodesk.Viewing.Extensions.Markups.Core.Markup#getClientSize|getClientSize()}.\n     * @returns {*}\n     */\n    proto.getClientPosition = function() {\n\n        var position = this.position;\n        return this.editor.positionFromMarkupsToClient(position.x, position.y);\n    };\n\n    /**\n     * Used internally to get the markup's bounding rect in browser pixel space.<br>\n     * See also\n     * {@link Autodesk.Viewing.Extensions.Markups.Core.Markup#getClientPosition|getClientPosition()}.\n     * @returns {*}\n     */\n    proto.getClientSize = function () {\n\n        var size = this.size;\n        return this.editor.sizeFromMarkupsToClient(size.x, size.y);\n    };\n\n    /**\n     * Used internally to get the markup's bounding rect in browser pixel space, including the stroke width.<br>\n     * @returns {Object} a rectangle with right, top, left, bottom attributes\n     */\n    proto.getBoundingRect = function () {\n\n        var rotation = this.rotation;\n\n        if (rotation !== 0) { // Undo rotation to find a tight bounding rect\n            this.setRotation(0);\n        }\n\n        var parentRect = this.viewer.impl.getCanvasBoundingClientRect();\n\n        var boundRect = this.shape.markup.getBoundingClientRect();\n        var top = boundRect.top - parentRect.top;\n\n        var strokeWidth = this.style['stroke-width'] || 0;\n        var offset = this.editor.sizeFromMarkupsToClient(strokeWidth, 0).x;\n\n        if (rotation !== 0) {\n            this.setRotation(rotation);\n        }\n\n        return {\n            x: boundRect.left - parentRect.left - offset,\n            y: top - offset,\n            width: boundRect.width + 2*offset,\n            height: boundRect.height + 2*offset\n        };\n    };\n\n    /**\n     * Changes the rotation of the markup to the given angle.\n     * This gets called by the Autodesk.Viewing.Extensions.Markups.Core.SetRotation edit action\n     *\n     * @param {Number} angle\n     */\n    proto.setRotation = function(angle) {\n\n        this.rotation = angle;\n        this.updateStyle();\n    };\n\n    proto.getRotation = function () {\n\n        return this.rotation;\n    };\n\n    /**\n     * Used by the EditFrame to move the markup in Client Space coordinates\n     * @param {Number} x - New X location for the markup. Notice that markups are centered on this value.\n     * @param {Number} y - New Y location for the markup. Notice that markups are centered on this value.\n     */\n    proto.setPosition = function(x,y) {\n\n        this.position.x = x;\n        this.position.y = y;\n\n        this.updateStyle();\n    };\n\n    /**\n     * Changes the position and size of the markup.\n     * This gets called by the Autodesk.Viewing.Extensions.Markups.Core.SetSize edit action\n     * @param {{x: Number, y: Number}} position\n     * @param {Number} width\n     * @param {Number} height\n     */\n    proto.setSize = function (position, width, height) {\n\n        this.position.x = position.x;\n        this.position.y = position.y;\n        this.size.x = width;\n        this.size.y = height;\n\n        this.updateStyle();\n    };\n\n    proto.isWidthConstrained = function() {\n\n        return this.constraintWidth;\n    };\n\n    proto.isHeightConstrained = function() {\n\n        return this.constraintHeight;\n    };\n\n    proto.isRotationConstrained = function() {\n\n        return this.constraintRotation;\n    };\n\n    proto.setMinWidth = function(minWidth) {\n        this.minWidth = minWidth;\n    };\n\n    proto.setMinHeight = function(minHeight) {\n        this.minHeight = minHeight;\n    };\n\n    proto.getMinWidth = function() {\n        return this.minWidth;\n    };\n\n    proto.getMinHeight = function() {\n        return this.minHeight;\n    };\n\n    /**\n     * Used to disable highlight on annotations while a new annotation is being created.\n     * @param {Boolean} disable - Whether (mouse) interactions are enable.\n     */\n    proto.disableInteractions = function(disable) {\n\n        this.interactionsDisabled = disable;\n    };\n\n    /**\n     *\n     * @param width\n     */\n    proto.setStrokeWidth = function(width) {\n\n    };\n\n    proto.constrainsToBounds = function(bounds) {\n\n    };\n\n    proto.onMouseDown = function(event) {\n\n        if (this.interactionsDisabled) {\n            return;\n        }\n\n        this.select();\n        this.editor.editFrame.startDrag(event);\n    };\n\n    /**\n     *\n     * @param idTarget\n     * @returns *\n     */\n    proto.generatePoint3d = function(idTarget) {\n\n        var viewer = this.viewer;\n        var polygon = this.generateBoundingPolygon();\n        var self = this;\n\n        function checkLineSegmentAux(a, b) {\n\n            var point2d = self.checkLineSegment(a.x, a.y, b.x, b.y, idTarget);\n            var point3d = point2d && viewer.clientToWorld(point2d.x, point2d.y);\n            return point3d && point3d.point;\n        }\n\n        function checkPolygonAux(polygon) {\n\n            var point2d = self.checkPolygon(polygon, idTarget);\n            var point3d = point2d && viewer.clientToWorld(point2d.x, point2d.y);\n            return point3d && point3d.point;\n        }\n\n        // Try to avoid expensive calculations by checking some lines segments first.\n        // If line check cannot find a point the costly one by area is used.\n        // A ----midAB---- B\n        // |               |\n        // |     center    |\n        // |               |\n        // C --------------D\n\n        var xVertices = polygon.xVertices;\n        var yVertices = polygon.yVertices;\n\n        var midAB = new THREE.Vector2(xVertices[0] + xVertices[1], yVertices[0] + yVertices[1]).multiplyScalar(0.5);\n        var midAC = new THREE.Vector2(xVertices[0] + xVertices[3], yVertices[0] + yVertices[3]).multiplyScalar(0.5);\n        var midDB = new THREE.Vector2(xVertices[2] + xVertices[1], yVertices[2] + yVertices[1]).multiplyScalar(0.5);\n        var midDC = new THREE.Vector2(xVertices[2] + xVertices[3], yVertices[2] + yVertices[3]).multiplyScalar(0.5);\n        var center = midAC.clone().add(midDB).multiplyScalar(0.5);\n\n        var point3d =\n            checkLineSegmentAux(center, midDB) ||\n            checkLineSegmentAux(center, midAC) ||\n            checkLineSegmentAux(center, midAB) ||\n            checkLineSegmentAux(center, midDC);\n\n        return point3d || checkPolygonAux(polygon);\n    };\n\n    /**\n     *\n     * @returns {{min: {x: number, y: number}, max: {x: number, y: number}}}\n     */\n    proto.generateBoundingBox = function() {\n\n        var boundingBox = {min: {x: 0,y: 0}, max: {x: 0, y: 0}};\n\n        // Get bounding box from markup bounding polygon.\n        var polygon = this.generateBoundingPolygon();\n\n        var vertexCount = polygon.vertexCount;\n        var xVertices = polygon.xVertices;\n        var yVertices = polygon.yVertices;\n\n        var bbX0 = Number.POSITIVE_INFINITY;\n        var bbY0 = Number.POSITIVE_INFINITY;\n        var bbX1 = Number.NEGATIVE_INFINITY;\n        var bbY1 = Number.NEGATIVE_INFINITY;\n\n        for(var i = 0; i < vertexCount; ++i) {\n\n            var bbX = xVertices[i];\n            var bbY = yVertices[i];\n\n            bbX0 = Math.min(bbX0, bbX);\n            bbY0 = Math.min(bbY0, bbY);\n            bbX1 = Math.max(bbX1, bbX);\n            bbY1 = Math.max(bbY1, bbY);\n        }\n\n        boundingBox.min.x = bbX0;\n        boundingBox.min.y = bbY0;\n        boundingBox.max.x = bbX1;\n        boundingBox.max.y = bbY1;\n\n        return boundingBox;\n    };\n\n    /**\n     *\n     * @returns {{vertexCount: number, xVertices: Float32Array, yVertices: Float32Array}}\n     */\n    proto.generateBoundingPolygon = function() {\n\n        var position = this.getClientPosition();\n        var halfSize = this.getClientSize();\n\n        halfSize.x *= 0.5;\n        halfSize.y *= 0.5;\n\n        var lt = new THREE.Vector3(-halfSize.x,-halfSize.y).add(position);\n        var rt = new THREE.Vector3( halfSize.x,-halfSize.y).add(position);\n        var rb = new THREE.Vector3( halfSize.x, halfSize.y).add(position);\n        var lb = new THREE.Vector3(-halfSize.x, halfSize.y).add(position);\n\n        if (this.rotation !== 0) {\n\n            var m1 = new THREE.Matrix4().makeTranslation(-position.x, -position.y, 0);\n            var m2 = new THREE.Matrix4().makeRotationZ(this.rotation);\n            var m3 = new THREE.Matrix4().makeTranslation(position.x, position.y, 0);\n            var transform = m3.multiply(m2).multiply(m1);\n\n            lt.applyMatrix4(transform);\n            rt.applyMatrix4(transform);\n            rb.applyMatrix4(transform);\n            lb.applyMatrix4(transform);\n        }\n\n        return { // packed for fast access in test algorithm.\n            vertexCount: 4,\n            xVertices : new Float32Array([lt.x, rt.x, rb.x, lb.x]),\n            yVertices : new Float32Array([lt.y, rt.y, rb.y, lb.y])\n        };\n    };\n\n    /**\n     * Implemented by extending classes.<br>\n     * Gets called automatically when\n     * {@link Autodesk.Viewing.Extensions.Markups.Core.MarkupsCore#generateData|generateData()}\n     * @returns {null|Element} - Either null (default) or the metadata Svg node\n     */\n    proto.setMetadata = function() {\n\n        return null; // No metadata is injected by default.\n    };\n\n    proto.setMouseDisabledWhenTouching = function(event) {\n\n        if (event.isFirst) {\n            this.shape.removeEventListener('mousedown', this.onMouseDownBinded);\n        } else if (event.isFinal) {\n            var _this = this;\n            setTimeout(function() {\n                _this.shape.addEventListener('mousedown', _this.onMouseDownBinded);\n            }, 10);\n        }\n    };\n\n    proto.bindDomEvents = function() {\n\n        if (isTouchDevice()) {\n\n            this.hammer = new av.Hammer.Manager(this.shape, {\n                recognizers: [\n                    av.GestureRecognizers.singletap\n                ],\n                handlePointerEventMouse: false,\n                inputClass: av.isIE11 ? av.Hammer.PointerEventInput : av.Hammer.TouchInput\n            });\n\n            this.onSingleTapBinded = function(event) {\n\n                this.onMouseDown(event);\n            }.bind(this);\n\n            this.onHammerInputBinded = function(event) {\n\n                this.setMouseDisabledWhenTouching(event);\n            }.bind(this);\n\n            this.hammer.on('singletap', this.onSingleTapBinded);\n            this.hammer.on('hammer.input', this.onHammerInputBinded);\n        }\n\n        this.onMouseDownBinded = this.onMouseDown.bind(this);\n        this.onMouseOutBinded = function() {\n\n            this.highlight(false);\n        }.bind(this);\n\n        this.onMouseOverBinded = function() {\n\n            this.highlight(true);\n        }.bind(this);\n\n        this.shape.addEventListener('mousedown', this.onMouseDownBinded);\n        this.shape.addEventListener('mouseout', this.onMouseOutBinded);\n        this.shape.addEventListener('mouseover', this.onMouseOverBinded);\n    };\n\n    proto.renderToCanvas = function(ctx, viewBox, width, height, callback) {\n\n        this.renderToCanvasX(this.shape, viewBox, width, height, ctx, callback);\n    };\n\n    proto.getPath = function() {\n\n    };\n\n    proto.getTransform = function() {\n\n        return [\n            'translate(', this.position.x, ',', this.position.y, ')',\n            'rotate(', radiansToDegrees(-this.rotation), ')'\n        ].join(' ');\n    };\n\n","'use strict';\n\nimport { EditAction } from './EditAction'\nimport { cloneStyle } from '../StyleUtils'\n\n    /**\n     *\n     * @param editor\n     * @param markup\n     * @param style\n     * @constructor\n     */\n    export function SetStyle(editor, markup, style) {\n\n        EditAction.call(this, editor, 'SET-STYLE', markup.id);\n\n        this.newStyle = cloneStyle(style);\n        this.oldStyle = markup.getStyle();\n    }\n\n    SetStyle.prototype = Object.create(EditAction.prototype);\n    SetStyle.prototype.constructor = SetStyle;\n\n    var proto = SetStyle.prototype;\n\n    proto.redo = function() {\n\n        var markup = this.editor.getMarkup(this.targetId);\n        markup && markup.setStyle(this.newStyle);\n    };\n\n    proto.undo = function() {\n\n        var markup = this.editor.getMarkup(this.targetId);\n        markup && markup.setStyle(this.oldStyle);\n    };\n","'use strict';\n\nimport * as MarkupEvents from '../MarkupEvents'\nimport { createStyle, copyStyle } from '../StyleUtils'\nimport { addTraitEventDispatcher, removeTraitEventDispatcher, sign } from '../MarkupsCoreUtils'\nimport { SetStyle } from '../edit-actions/SetStyle'\n\nconst av = Autodesk.Viewing;\n\n    /**\n     * Base class for all markup edit modes.\n     *\n     * An EditMode is responsible for handling user input to create and edit a\n     * {@link Autodesk.Viewing.Extensions.Markups.Core.Markup|Markup}.\n     *\n     * Any class extending Markup should contain at least the following methods:\n     * - deleteMarkup()\n     * - onMouseDown()\n     * - onMouseMove()\n     *\n     * A good reference is the Circle EditMode implementation available in\n     * {@link Autodesk.Viewing.Extensions.Markups.Core.EditModeCircle|EditModeCircle}.\n     *\n     * @tutorial feature_markup\n     * @constructor\n     * @memberof Autodesk.Viewing.Extensions.Markups.Core\n     *\n     * @param {Autodesk.Viewing.Extensions.Markups.Core.MarkupsCore} editor - Markups extension.\n     * @param {String} type - An identifier for the EditMode type. Not to be confused by the Markup's id.\n     * @param {Array} styleAttributes - Attributes for customization.\n     * @constructor\n     */\n    export function EditMode(editor, type, styleAttributes) {\n\n        this.editor = editor;\n        this.viewer = editor.viewer;\n        this.setGlobalManager(this.viewer.globalManager);\n        this.type = type;\n        this.selectedMarkup = null;\n        this.dragging = false;\n        this.draggingAnnotationIniPosition = null;\n        this.draggingMouseIniPosition = new THREE.Vector2();\n        this.initialX = 0;\n        this.initialY = 0;\n        this.minSize = 9; // In pixels\n        this.creating = false;\n        this.size = {x: 0, y: 0};\n        this.style = createStyle(styleAttributes, this.editor);\n        this.style = copyStyle(editor.getDefaultStyle(), this.style);\n\n        this.CREATION_METHOD_DRAG = 'CREATION_METHOD_DRAG';\n        this.CREATION_METHOD_CLICK = 'CREATION_METHOD_CLICK';\n        this.CREATION_METHOD_CLICKS = 'CREATION_METHOD_CLICKS';\n        this.creationMethod = this.CREATION_METHOD_DRAG;\n\n        addTraitEventDispatcher(this);\n    }\n\n    av.GlobalManagerMixin.call(EditMode.prototype);\n    var proto = EditMode.prototype;\n\n    proto.destroy = function() {\n\n        this.unselect();\n        removeTraitEventDispatcher(this);\n    };\n\n    proto.unselect = function() {\n\n        var fireEv = false;\n        var selectedMarkup = this.selectedMarkup;\n        var selectedId = null;\n\n        if (selectedMarkup) {\n            selectedId = selectedMarkup.id;\n            selectedMarkup.unselect();\n            this.selectedMarkup = null;\n            fireEv = true;\n        }\n\n        this.editor.editFrame.setMarkup(null);\n\n        if (fireEv) {\n            this.dispatchEvent({ type: MarkupEvents.EVENT_MARKUP_DESELECT, markupId: selectedId });\n        }\n    };\n\n    proto.creationBegin = function() {\n\n        if (this.creating) {\n            return;\n        }\n\n        this.creating = true;\n        this.dispatchEvent({ type: MarkupEvents.EVENT_EDITMODE_CREATION_BEGIN });\n    };\n\n    proto.creationEnd = function(isCancelling) {\n\n        if (!this.creating) {\n            return;\n        }\n\n        if (this.creationMethod !== this.CREATION_METHOD_CLICK) {\n\n            if (this.selectedMarkup && !this.isMinSizeValid()) {\n\n                this.creationCancel();\n                isCancelling = true;\n            } else {\n\n                if (this.creationMethod === this.CREATION_METHOD_DRAG) {\n                    this.finishDragging();\n                }\n\n                if (this.selectedMarkup) {\n\n                    // Opened on mouse down.\n                    this.editor.closeActionGroup();\n                    this.selectedMarkup = null;\n                }\n            }\n        }\n\n        this.creating = false;\n        this.dispatchEvent({ type: MarkupEvents.EVENT_EDITMODE_CREATION_END, creationCancelled: !!isCancelling });\n    };\n\n    proto.creationCancel = function() {\n\n        this.editor.cancelActionGroup();\n        this.creationEnd(true);\n        this.selectedMarkup = null; // No need to call unselect\n    };\n\n    /**\n     *\n     * @param style\n     */\n    proto.setStyle = function(style) {\n\n        this.style = style;\n\n        var selectedMarkup = this.selectedMarkup;\n        if(!selectedMarkup) {\n            return;\n        }\n\n        var setStyle = new SetStyle(this.editor, selectedMarkup, style);\n        setStyle.execute();\n    };\n\n    proto.getStyle = function() {\n\n        return this.style;\n    };\n\n    proto.setSelection = function(markup) {\n\n        if (this.selectedMarkup !== markup) {\n            this.unselect();\n            markup && markup.select();\n        }\n\n        this.selectedMarkup = markup;\n\n        var editor = this.editor;\n        markup && editor.bringToFront(markup);\n\n        if (this.isTextInputHelperActive() && editor.editFrame.markup) {\n            this.textInputHelper.setEditFrame();\n        } else if (!this.creating) {\n            editor.editFrame.setMarkup(markup);\n        }\n    };\n\n    proto.getSelection = function() {\n\n        return this.selectedMarkup;\n    };\n\n    /**\n     *\n     * @param [markup] If provided deletes markup (has to have same type that the edit mode), otherwise deletes selected one.\n     * @param [cantUndo] If true to not add deletion to undo history.\n     * @returns {boolean}\n     */\n    proto.deleteMarkup = function (markup, cantUndo) {\n\n        return false;\n    };\n\n    /**\n     * Used by classes extending EditMode to validate the minimum size (in screen coordinates) of the markup.\n     * See minSize attribute\n     * @return {Boolean} Whether current size is valid for creating the markup\n     * @private\n     */\n    proto.isMinSizeValid = function() {\n\n        if (this.minSize !== 0) {\n\n            var tmp = this.editor.sizeFromMarkupsToClient(this.size.x, this.size.y);\n            return (tmp.x*tmp.x + tmp.y*tmp.y) >= (this.minSize * this.minSize);\n\n        }\n        return true;\n    };\n\n    /**\n     * @private\n     */\n    proto.startDragging = function() {\n\n        var selectedMarkup = this.selectedMarkup;\n        var mousePosition = this.editor.getMousePosition();\n\n        if (selectedMarkup) {\n\n            this.dragging = true;\n            this.draggingAnnotationIniPosition = selectedMarkup.getClientPosition();\n            this.draggingMouseIniPosition.set(mousePosition.x, mousePosition.y);\n        }\n    };\n\n    /**\n     * @private\n     */\n    proto.finishDragging = function() {\n\n        var dragging = this.dragging;\n        var selectedMarkup = this.selectedMarkup;\n\n        this.dragging = false;\n\n        if (selectedMarkup && dragging) {\n\n            selectedMarkup.finishDragging();\n        }\n    };\n\n    /**\n     *\n     * @returns {{x: number, y: number}}\n     */\n    proto.getFinalMouseDraggingPosition = function() {\n\n        var editor = this.editor;\n        var bounds = editor.getBounds();\n        var mousePosition = editor.getMousePosition();\n\n        var initialX = this.initialX;\n        var initialY = this.initialY;\n\n        var finalX = Math.min(Math.max(bounds.x, mousePosition.x), bounds.x + bounds.width);\n        var finalY = Math.min(Math.max(bounds.y, mousePosition.y), bounds.y + bounds.height);\n\n        if (finalX == initialX &&\n            finalY == initialY) {\n            finalX++;\n            finalY++;\n        }\n\n        // Make equal x/y when shift is down\n        if (editor.input.makeSameXY) {\n            var dx = Math.abs(finalX - initialX);\n            var dy = Math.abs(finalY - initialY);\n\n            var maxDelta = Math.max(dx, dy);\n\n            // These calculations have the opportunity to go beyond 'bounds'.\n            finalX = initialX + maxDelta * sign(finalX - initialX);\n            finalY = initialY + maxDelta * sign(finalY - initialY);\n        }\n\n        return { x:finalX, y:finalY };\n    };\n\n    proto.notifyAllowNavigation = function(allows) {\n\n    };\n\n    proto.onMouseMove = function (event) {\n\n    };\n\n    proto.onMouseDown = function () {\n\n    };\n\n    /**\n     * Handler to mouse up events, used to start annotations creation.\n     * It will cancel the creation of a markup if its minSize conditions are not met.\n     *\n     * @param {MouseEvent} event Mouse event.\n     * @private\n     */\n    proto.onMouseUp = function(event) {\n\n        if (this.creationMethod !== this.CREATION_METHOD_DRAG) {\n            return;\n        }\n\n        this.creationEnd();\n    };\n\n    proto.onMouseDoubleClick = function(event) {\n\n        if (this.creationMethod !== this.CREATION_METHOD_CLICKS) {\n            return;\n        }\n\n        this.creationEnd();\n    };\n\n    /**\n     * Notify the markup that the displayed markups are being saved so edit mode can finish current editions.\n     */\n    proto.onSave = function() {\n\n        if (this.creating) {\n            this.creationCancel();\n        }\n    };\n\n    /**\n     *\n     * @returns {{x: *, y: *}}\n     */\n    proto.getDraggingPosition = function () {\n\n        var mousePosition = this.editor.getMousePosition();\n\n        var dx = mousePosition.x - this.draggingMouseIniPosition.x;\n        var dy = mousePosition.y - this.draggingMouseIniPosition.y;\n\n        return {\n            x: this.draggingAnnotationIniPosition.x + dx,\n            y: this.draggingAnnotationIniPosition.y + dy\n        };\n    };\n\n    /**\n     *\n     * @param x\n     * @param y\n     * @param bounds\n     * @returns {boolean}\n     * @orivate\n     */\n    proto.isInsideBounds = function (x, y, bounds) {\n\n        return x >= bounds.x && x <= bounds.x + bounds.width &&\n               y >= bounds.y && y <= bounds.y + bounds.height;\n    };\n\n    /*\n     * Decides whether to use the snapper in the current edit mode or not.\n     * \n     * @returns {boolean}\n     */\n    proto.useWithSnapping = function () {\n        return this.viewer.model.is2d();\n    };\n\n    \n    proto.isTextInputHelperActive = function() {\n        return this.textInputHelper && this.textInputHelper.isActive();\n    };\n","'use strict';\n\nimport { EditAction } from './EditAction'\nimport { CreateArrow } from './CreateArrow'\n\n    /**\n     *\n     * @param editor\n     * @param arrow\n     * @constructor\n     */\n    export function DeleteArrow(editor, arrow) {\n\n        // Confusing naming here. Arrow.tail is the starting point of the arrow,\n        // and arrow.head is the final point. In CreateArrow the head argument\n        // is the first point of the arrow and the tail argument is the second\n        // point of the argument. So construct CreateArrow with the tail before\n        // the head. \n        EditAction.call(this, editor, 'DELETE-ARROW', arrow.id);\n        this.createArrow = new CreateArrow(\n            editor,\n            arrow.id,\n            arrow.tail,\n            arrow.head,\n            arrow.getStyle());\n    }\n\n    DeleteArrow.prototype = Object.create(EditAction.prototype);\n    DeleteArrow.prototype.constructor = DeleteArrow;\n\n    var proto = DeleteArrow.prototype;\n\n    proto.redo = function() {\n\n        this.createArrow.undo();\n    };\n\n    proto.undo = function() {\n\n        this.createArrow.redo();\n    };\n","'use strict';\n\nimport { EditAction } from './EditAction'\n\n    /**\n     *\n     * @param editor\n     * @param arrow\n     * @param head\n     * @param tail\n     * @constructor\n     */\n    export function SetArrow(editor, arrow, head, tail) {\n\n        EditAction.call(this, editor, 'SET-ARROW', arrow.id);\n\n        this.newHead = {x: head.x, y: head.y};\n        this.newTail = {x: tail.x, y: tail.y};\n        this.oldHead = {x: arrow.head.x, y: arrow.head.y};\n        this.oldTail = {x: arrow.tail.x, y: arrow.tail.y};\n    }\n\n    SetArrow.prototype = Object.create(EditAction.prototype);\n    SetArrow.prototype.constructor = SetArrow;\n\n    var proto = SetArrow.prototype;\n\n    proto.redo = function() {\n\n        this.applyState(this.targetId, this.newHead, this.newTail);\n    };\n\n    proto.undo = function() {\n\n        this.applyState(this.targetId, this.oldHead, this.oldTail);\n    };\n\n    proto.merge = function(action) {\n\n        if (this.targetId === action.targetId &&\n            this.type === action.type) {\n\n            this.newHead = action.newHead;\n            this.newTail = action.newTail;\n            return true;\n        }\n        return false;\n    };\n\n    /**\n     *\n     * @private\n     */\n    proto.applyState = function(targetId, head, tail) {\n\n        var arrow = this.editor.getMarkup(targetId);\n        if(!arrow) {\n            return;\n        }\n\n        // Different stroke widths make positions differ at sub-pixel level.\n        var epsilon = 0.0001;\n\n        if (Math.abs(arrow.head.x - head.x) >= epsilon || Math.abs(arrow.head.y - head.y) >= epsilon ||\n            Math.abs(arrow.tail.x - tail.x) >= epsilon || Math.abs(arrow.tail.y - tail.y) >= epsilon) {\n\n            // Confusing naming here. in arrow.set the first two numbers are\n            // the point you drag from and the second two are the point you\n            // drag to. So the head point is actually where the tail of the\n            // arrow is positioned and the tail point is the head is positioned.\n            arrow.set(head.x, head.y, tail.x, tail.y);\n        }\n    };\n\n    /**\n     * @returns {boolean}\n     */\n    proto.isIdentity = function() {\n\n        return (\n            this.newHead.x === this.oldHead.x &&\n            this.newHead.y === this.oldHead.y &&\n            this.newTail.x === this.oldTail.x &&\n            this.newTail.y === this.oldTail.y);\n    };\n\n","'use strict';\n\nimport { EditMode } from './EditMode'\nimport { DeleteArrow } from '../edit-actions/DeleteArrow'\nimport { CreateArrow } from '../edit-actions/CreateArrow'\nimport { SetArrow } from '../edit-actions/SetArrow'\nimport * as MarkupTypes from '../MarkupTypes'\n\n\n    var MeasureCommon = Autodesk.Viewing.MeasureCommon;\n\n    /**\n     *\n     * @param editor\n     * @constructor\n     */\n    export function EditModeArrow(editor) {\n\n        var styleAttributes = ['stroke-width', 'stroke-color', 'stroke-opacity'];\n        EditMode.call(this, editor, MarkupTypes.MARKUP_TYPE_ARROW, styleAttributes);\n    }\n\n    EditModeArrow.prototype = Object.create(EditMode.prototype);\n    EditModeArrow.prototype.constructor = EditModeArrow;\n\n\n    var proto = EditModeArrow.prototype;\n\n    proto.deleteMarkup = function(markup, cantUndo) {\n\n        markup = markup || this.selectedMarkup;\n        if (markup && markup.type == this.type) {\n            var deleteArrow = new DeleteArrow(this.editor, markup);\n            deleteArrow.addToHistory = !cantUndo;\n            deleteArrow.execute();\n            return true;\n        }\n        return false;\n    };\n\n    /**\n     * Handler to mouse down events, used to start markups creation.\n     * @private\n     */\n    proto.onMouseDown = function() {\n\n        EditMode.prototype.onMouseDown.call(this);\n\n        if (this.selectedMarkup) {\n            return;\n        }\n\n        var editor = this.editor;\n        var mousePosition = editor.getMousePosition();\n\n        this.initialX = mousePosition.x;\n        this.initialY = mousePosition.y;\n\n        this.size.x = 0;\n        this.size.y = 0;\n\n        // Snap to parallel/perpendicular of underlying vectors\n        this.lineSnapped = null;\n        if (editor.snapper) {\n            var geomType = editor.snapper.getGeometryType();\n            if (geomType === MeasureCommon.SnapType.SNAP_VERTEX || \n                geomType === MeasureCommon.SnapType.SNAP_EDGE || \n                geomType === MeasureCommon.SnapType.SNAP_MIDPOINT || \n                geomType === MeasureCommon.SnapType.SNAP_CIRCLE_CENTER) \n            {\n                this.lineSnapped = editor.snapper.getEdge();\n            }\n        }\n\n        // Calculate head and tail.\n        var arrowMinSize = this.style['stroke-width'] * 3.5;\n\n        var head = this.head = editor.positionFromClientToMarkups(this.initialX, this.initialY);\n        var tail = {\n            x: head.x + Math.cos( Math.PI * 0.25) * arrowMinSize,\n            y: head.y + Math.sin(-Math.PI * 0.25) * arrowMinSize\n        };\n        // Constrain head and tail inside working area.\n        var constrain = function(head, tail, size, bounds) {\n\n            if (this.isInsideBounds(tail.x, tail.y, bounds)) {\n                return;\n            }\n\n            tail.y = head.y + Math.sin( Math.PI * 0.25) * size;\n            if (this.isInsideBounds( tail.x, tail.y, bounds)) {\n                return;\n            }\n\n            tail.x = head.x + Math.cos(-Math.PI * 0.25) * size;\n            if (this.isInsideBounds( tail.x, tail.y, bounds)) {\n                return;\n            }\n\n            tail.y = head.y + Math.sin(-Math.PI * 0.25) * size;\n\n        }.bind(this);\n\n        constrain( head, tail, arrowMinSize, editor.getBounds());\n\n        // Create arrow.\n        editor.beginActionGroup();\n\n        var arrowVector = new THREE.Vector2(tail.x - head.x, tail.y - head.y);\n        if (arrowVector.lengthSq() < arrowMinSize * arrowMinSize) {\n\n            arrowVector = arrowVector.normalize().multiplyScalar(arrowMinSize);\n            tail.x = head.x + arrowVector.x;\n            tail.y = head.y + arrowVector.y;\n        }\n\n        var arrowId = editor.getId();\n        var create = new CreateArrow(editor, arrowId, head, tail, this.style);\n        create.execute();\n\n        this.selectedMarkup = editor.getMarkup(arrowId);\n        this.creationBegin();\n    };\n\n    /**\n     * Handler to mouse move events, used to create markups.\n     * @param {MouseEvent} event Mouse event.\n     * @private\n     */\n    proto.onMouseMove = function(event) {\n\n        EditMode.prototype.onMouseMove.call( this, event );\n\n        var selectedMarkup = this.selectedMarkup;\n        if(!selectedMarkup || !this.creating) {\n            return;\n        }\n\n        var editor = this.editor;\n        var final = this.getFinalMouseDraggingPosition();\n        var initialX = this.initialX;\n        var initialY = this.initialY;\n\n        // Snap to parallel/perpendicular of underlying vectors\n        if (editor.snapper && !editor.snapper.isSnapped() && this.lineSnapped) {\n            var start = editor.project(this.lineSnapped.vertices[0]);\n            var end = editor.project(this.lineSnapped.vertices[1]);\n            var p = new THREE.Vector3(final.x, final.y, start.z);\n\n            var parallel = MeasureCommon.nearestPointInPointToLine(p, start, end);\n\n            // select an arbitrary point on the perpendicular line\n            var k = -(start.x - end.x) / (start.y - end.y);\n            var b = initialY - k * initialX;\n            var x = initialX + 1;\n            var y = k * x + b;\n            var pEnd = new THREE.Vector3(x, y, start.z);\n\n            var pStart = new THREE.Vector3(initialX, initialY, start.z);\n            var perpendicular = MeasureCommon.nearestPointInPointToLine(p, pStart, pEnd);\n\n            // Snap to parallel of underlying vectors\n            if (parallel.distanceTo(p) <= 20) {\n                final.x = parallel.x;\n                final.y = parallel.y;\n            }\n            // Snap to perpendicular of underlying vectors\n            else if (perpendicular.distanceTo(p) <= 20) {\n                final.x = perpendicular.x;\n                final.y = perpendicular.y;\n            }\n        }\n\n        var head = this.head;\n        var tail = editor.positionFromClientToMarkups(final.x, final.y);\n\n        var arrowVector = new THREE.Vector2(tail.x - head.x, tail.y - head.y);\n        var arrowMinSize = selectedMarkup.style['stroke-width'] * 3.5;\n\n        if (arrowVector.lengthSq() < arrowMinSize * arrowMinSize) {\n\n            arrowVector = arrowVector.normalize().multiplyScalar(arrowMinSize);\n            tail.x = head.x + arrowVector.x;\n            tail.y = head.y + arrowVector.y;\n        }\n\n        this.size = editor.sizeFromClientToMarkups((final.x - initialX), (final.y - initialY));\n\n        var setArrow = new SetArrow(editor, selectedMarkup, head, tail);\n        setArrow.execute();\n    };","'use strict';\n\nimport { Markup } from './Markup'\nimport * as MarkupTypes from './MarkupTypes'\nimport { createMarkupPathSvg, composeRGBAString, setAttributeToMarkupSvg,\n    updateMarkupPathSvgHitarea, checkLineSegment, addMarkupMetadata } from './MarkupsCoreUtils'\nimport { cloneStyle } from './StyleUtils'\nimport { EditModeArrow } from './edit-modes/EditModeArrow'\n\n    /**\n     *\n     * @param id\n     * @param editor\n     * @constructor\n     */\n    export function MarkupArrow(id, editor) {\n\n        var styleAttributes = ['stroke-width', 'stroke-color', 'stroke-opacity'];\n        Markup.call(this, id, editor, styleAttributes);\n\n        // bind to this to pass this.globalManager\n        this.addMarkupMetadata = addMarkupMetadata.bind(this);\n        this.checkLineSegment = checkLineSegment.bind(this);\n\n        this.type = MarkupTypes.MARKUP_TYPE_ARROW;\n        this.constraintHeight = true;\n\n        // Create head and tail.\n        this.head = new THREE.Vector3();\n        this.tail = new THREE.Vector3();\n        this.size.y = this.style['stroke-width'] * 3;\n        this.shape = createMarkupPathSvg();\n\n        this.bindDomEvents();\n    }\n\n    MarkupArrow.prototype = Object.create(Markup.prototype);\n    MarkupArrow.prototype.constructor = MarkupArrow;\n\n    var proto = MarkupArrow.prototype;\n\n    proto.getEditMode = function() {\n\n        return new EditModeArrow(this.editor);\n    };\n\n    /**\n     * Sets top-left and bottom-right values in client space coordinates (2d).\n     * Notice that for the arrow, the top left is the \"tail\" of the arrow and\n     * the bottom right is the \"head\" of it.\n     *\n     * @param {Number} xO - tail\n     * @param {Number} yO - tail\n     * @param {Number} xF - head\n     * @param {Number} yF - head\n     */\n    proto.set = function(xO, yO, xF, yF) {\n\n        var vO = new THREE.Vector2(xO, yO);\n        var vF = new THREE.Vector2(xF, yF);\n        var vDir = vF.clone().sub(vO).normalize();\n\n        this.size.x = vO.distanceTo(vF); // TODO: Clamp min length\n        this.rotation = Math.acos(vDir.dot(new THREE.Vector2(1,0)));\n        this.rotation = yF > yO ? (Math.PI*2)-this.rotation : this.rotation;\n\n        var head = this.head;\n        var tail = this.tail;\n\n        head.set(xF, yF, 0);\n        tail.set(xO, yO, 0);\n\n        this.position.x = tail.x + (head.x - tail.x) * 0.5;\n        this.position.y = tail.y + (head.y - tail.y) * 0.5;\n\n        this.updateStyle();\n    };\n\n    /**\n     * Changes the rotation of the markup to the given angle.\n     * This gets called by the Autodesk.Viewing.Extensions.Markups.Core.SetRotation edit action\n     *\n     * @param {Number} angle\n     */\n    proto.setRotation = function(angle) {\n\n        this.rotation = angle;\n\n        var xF = Math.cos(-angle);\n        var yF = Math.sin(-angle);\n        var vFDir = new THREE.Vector2(xF, yF); // already normalized\n        vFDir.multiplyScalar(this.size.x*0.5);\n\n        var vCenter = new THREE.Vector2(this.position.x, this.position.y);\n        var vO = vCenter.clone().sub(vFDir);\n        var vF = vCenter.clone().add(vFDir);\n\n        this.head.set(vF.x, vF.y, 0);\n        this.tail.set(vO.x, vO.y, 0);\n\n        this.updateStyle();\n    };\n\n    /**\n     * Changes the position and size of the markup.\n     * This gets called by the namespace.SetSize edit action\n     * @param {{x: Number, y: Number}} position - arrow's center\n     * @param {Number} width - Arrow's length\n     * @param {Number} height - We ignore this one because we use the arrow's stroke width instead\n     */\n    proto.setSize = function(position, width, height) {\n\n        var xF = Math.cos(-this.rotation);\n        var yF = Math.sin(-this.rotation);\n        var vFDir = new THREE.Vector2(xF, yF); // already normalized\n        vFDir.multiplyScalar(width*0.5);\n\n        var vCenter = new THREE.Vector2(position.x, position.y);\n        var vO = vCenter.clone().sub(vFDir);\n        var vF = vCenter.clone().add(vFDir);\n\n        this.head.set(vF.x, vF.y, 0);\n        this.tail.set(vO.x, vO.y, 0);\n\n        this.position.x = position.x;\n        this.position.y = position.y;\n        this.size.x = width;\n\n        this.updateStyle();\n    };\n\n    proto.updateStyle = function() {\n\n        var style = this.style;\n        var shape = this.shape;\n        var strokeWidth = style['stroke-width'];\n        var strokeColor = this.highlighted ? this.highlightColor : composeRGBAString(style['stroke-color'], style['stroke-opacity']);\n        var transform = this.getTransform();\n\n        this.size.y = strokeWidth * 3;\n        this.style['fill-color'] = style['stroke-color'];\n        this.style['fill-opacity'] = style['stroke-opacity'];\n\n        setAttributeToMarkupSvg(shape, 'd', this.getPath().join(' '));\n        setAttributeToMarkupSvg(shape, 'stroke-width', strokeWidth);\n        setAttributeToMarkupSvg(shape, 'stroke', strokeColor);\n        setAttributeToMarkupSvg(shape, 'fill', strokeColor);\n        setAttributeToMarkupSvg(shape, 'transform', transform);\n        updateMarkupPathSvgHitarea(shape, this.editor);\n    };\n\n    /**\n     * Used by the EditFrame to move the markup in Client Space coordinates\n     * @param {Number} x - New X location for the markup. Notice that markups are centered on this value.\n     * @param {Number} y - New Y location for the markup. Notice that markups are centered on this value.\n     */\n    proto.setPosition = function (x, y) {\n\n        var head = this.head;\n        var tail = this.tail;\n\n        var dx = head.x - tail.x;\n        var dy = head.y - tail.y;\n\n        var xo = x + dx * 0.5;\n        var yo = y + dy * 0.5;\n\n        head.x = xo;\n        head.y = yo;\n\n        tail.x = xo - dx;\n        tail.y = yo - dy;\n\n        this.position.x = tail.x + (head.x - tail.x) * 0.5;\n        this.position.y = tail.y + (head.y - tail.y) * 0.5;\n\n        this.updateStyle();\n    };\n\n    proto.generatePoint3d = function(idTarget) {\n\n        var head = this.editor.positionFromMarkupsToClient(this.head.x, this.head.y);\n        var tail = this.editor.positionFromMarkupsToClient(this.tail.x, this.tail.y);\n\n        var direction = head.clone().sub(tail).normalize();\n\n        var point2d = this.checkLineSegment(head.x, head.y, head.x + direction.x * 200, head.y + direction.y * 200, idTarget);\n        var point3d = point2d && this.viewer.clientToWorld(point2d.x, point2d.y);\n\n        return point3d && point3d.point;\n    };\n\n    proto.setMetadata = function() {\n\n        var metadata = cloneStyle(this.style);\n\n        metadata.type = this.type;\n        metadata.head = [this.head.x, this.head.y].join(\" \");\n        metadata.tail = [this.tail.x, this.tail.y].join(\" \");\n        metadata.rotation = String(this.rotation);\n\n        return this.addMarkupMetadata(this.shape, metadata);\n    };\n\n    proto.getPath = function() {\n\n        // To build the arrow we need 7 points in total\n        // The 'default' arrow built here has the following characteristics:\n        //\n        // 1. It is built horizontally facing right\n        // 2. It's bounding rectangle has length: this.size.x\n        // 3. It's bounding rectangle has height: 2 * this.strokeWidth\n        // 4. The arrow tail's thickness is: this.strokeWidth\n        // 5. The arrow head's length is: 2/3 of (point 3)\n        // 6. The arrow head's thickness is: (point 3)\n        // 7. The arrow generated is centered in its local (0,0), meaning that\n        //    two points are placed with negative x values, and all other have\n        //    positive x values:\n        //\n        //                            (3)\\\n        //                              \\  \\\n        //             (1)-------------(2)   \\\n        //              |         (0)        (4)\n        //             (7)-------------(6)   /\n        //                              /  /\n        //                            (5)/\n        //\n\n        var sizeX = this.size.x;\n        var sizeY = this.size.y;\n        var sizeYOver3 = sizeY/3;\n        var strokeWidth = this.style['stroke-width'];\n        var tailW = sizeX - strokeWidth * 3;\n        var headW = sizeX - tailW;\n        var spikeOffset = strokeWidth * 0.3;\n\n        return [\n            'M', -sizeX * 0.5        , -sizeY * 0.5 + sizeYOver3,    // (1)\n            'l',  tailW              ,  0,                           // (2)\n            'l', -spikeOffset        , -sizeYOver3,                  // (3)\n            'l',  headW + spikeOffset,  sizeYOver3 * 1.5,            // (4)\n            'l', -headW - spikeOffset,  sizeYOver3 * 1.5,            // (5)\n            'l',  spikeOffset        , -sizeYOver3,                  // (6)\n            'l', -tailW              ,  0,                           // (7)\n            'z'\n        ];\n    };\n\n","'use strict';\n\nimport { EditAction } from './EditAction'\nimport { MarkupArrow } from '../MarkupArrow'\nimport { cloneStyle } from '../StyleUtils'\n\n    /**\n     * @constructor\n     */\n    export function CreateArrow(editor, id, head, tail, style) {\n\n        EditAction.call(this, editor, 'CREATE-ARROW', id);\n\n        this.selectOnExecution = false;\n        this.tail = tail;\n        this.head = head;\n        this.style = cloneStyle(style);\n    }\n\n    CreateArrow.prototype = Object.create(EditAction.prototype);\n    CreateArrow.prototype.constructor = CreateArrow;\n\n    var proto = CreateArrow.prototype;\n\n    proto.redo = function() {\n\n        var editor = this.editor;\n        var arrow = new MarkupArrow(this.targetId, editor);\n\n        editor.addMarkup(arrow);\n\n        // Confusing naming here. in arrow.set the first two numbers are\n        // the point you drag from and the second two are the point you\n        // drag to. So the head point is actually where the tail of the\n        // arrow is positioned and the tail point is the head is positioned.\n\n        //TODO: In MarkupArrow \"set\" function has tail x, tail y, head x, head y but used here in the opposite way\n        arrow.set(this.head.x, this.head.y, this.tail.x, this.tail.y);\n        arrow.setStyle(this.style);\n    };\n\n    proto.undo = function() {\n\n        var markup = this.editor.getMarkup(this.targetId);\n        markup && this.editor.removeMarkup(markup);\n    };\n\n","'use strict';\n\nimport { EditAction } from './EditAction'\nimport { CreateRectangle } from './CreateRectangle'\n\n    /**\n     *\n     * @param editor\n     * @param rectangle\n     * @constructor\n     */\n    export var DeleteRectangle = function(editor, rectangle) {\n\n        EditAction.call(this, editor, 'DELETE-RECTANGLE', rectangle.id);\n        this.createRectangle = new CreateRectangle(\n            editor,\n            rectangle.id,\n            rectangle.position,\n            rectangle.size,\n            rectangle.rotation,\n            rectangle.getStyle());\n    };\n\n    DeleteRectangle.prototype = Object.create(EditAction.prototype);\n    DeleteRectangle.prototype.constructor = DeleteRectangle;\n\n    var proto = DeleteRectangle.prototype;\n\n    proto.redo = function() {\n\n        this.createRectangle.undo();\n    };\n\n    proto.undo = function() {\n\n        this.createRectangle.redo();\n    };\n","'use strict';\n\nimport { EditAction } from './EditAction'\n\n    /**\n     *\n     * @param editor\n     * @param rectangle\n     * @param position\n     * @param size\n     * @constructor\n     */\n    export function SetRectangle(editor, rectangle, position, size) {\n\n        EditAction.call(this, editor, 'SET-RECTANGLE', rectangle.id);\n\n        this.newPosition = {x: position.x, y: position.y};\n        this.newSize = {x: size.x, y: size.y};\n        this.oldPosition = {x: rectangle.position.x, y: rectangle.position.y};\n        this.oldSize = {x: rectangle.size.x, y: rectangle.size.y};\n    }\n\n    SetRectangle.prototype = Object.create(EditAction.prototype);\n    SetRectangle.prototype.constructor = SetRectangle;\n\n    var proto = SetRectangle.prototype;\n\n    proto.redo = function() {\n\n        this.applyState(this.targetId, this.newPosition, this.newSize);\n    };\n\n    proto.undo = function() {\n\n        this.applyState(this.targetId, this.oldPosition, this.oldSize);\n    };\n\n    proto.merge = function(action) {\n\n        if (this.targetId === action.targetId &&\n            this.type === action.type) {\n\n            this.newPosition = action.newPosition;\n            this.newSize = action.newSize;\n            return true;\n        }\n        return false;\n    };\n\n    /**\n     *\n     * @private\n     */\n    proto.applyState = function(targetId, position, size) {\n\n        var rectangle = this.editor.getMarkup(targetId);\n        if(!rectangle) {\n            return;\n        }\n\n        // Different stroke widths make positions differ at sub-pixel level.\n        var epsilon = 0.0001;\n\n        if (Math.abs(rectangle.position.x - position.x) > epsilon || Math.abs(rectangle.size.y - size.y) > epsilon ||\n            Math.abs(rectangle.position.y - position.y) > epsilon || Math.abs(rectangle.size.y - size.y) > epsilon) {\n\n            rectangle.set(position, size);\n        }\n    };\n\n    /**\n     * @returns {boolean}\n     */\n    proto.isIdentity = function() {\n\n        return(\n            this.newPosition.x === this.oldPosition.x &&\n            this.newPosition.y === this.oldPosition.y &&\n            this.newSize.x === this.oldSize.x &&\n            this.newSize.y === this.oldSize.y);\n    };\n","'use strict';\n\nimport { EditMode } from './EditMode'\nimport { DeleteRectangle } from '../edit-actions/DeleteRectangle'\nimport { CreateRectangle } from '../edit-actions/CreateRectangle'\nimport { SetRectangle } from '../edit-actions/SetRectangle'\nimport * as MarkupTypes from '../MarkupTypes'\n\n    var MeasureCommon = Autodesk.Viewing.MeasureCommon;\n\n    /**\n     *\n     * @param editor\n     * @constructor\n     */\n    export function EditModeRectangle(editor) {\n\n        var styleAttributes = ['stroke-width', 'stroke-color', 'stroke-opacity', 'fill-color', 'fill-opacity'];\n        EditMode.call(this, editor, MarkupTypes.MARKUP_TYPE_RECTANGLE, styleAttributes);\n    }\n\n    EditModeRectangle.prototype = Object.create(EditMode.prototype);\n    EditModeRectangle.prototype.constructor = EditModeRectangle;\n\n    var proto = EditModeRectangle.prototype;\n\n    proto.deleteMarkup = function(markup, cantUndo) {\n\n        markup = markup || this.selectedMarkup;\n        if (markup && markup.type == this.type) {\n            var deleteRectangle = new DeleteRectangle(this.editor, markup);\n            deleteRectangle.addToHistory = !cantUndo;\n            deleteRectangle.execute();\n            return true;\n        }\n        return false;\n    };\n\n    /**\n     * Handler to mouse move events, used to create markups.\n     * @param {MouseEvent} event Mouse event.\n     * @private\n     */\n    proto.onMouseMove = function(event) {\n\n        EditMode.prototype.onMouseMove.call( this, event );\n\n        var selectedMarkup = this.selectedMarkup;\n        if(!selectedMarkup || !this.creating) {\n            return;\n        }\n\n        var editor = this.editor;\n\n        var pos = this.getFinalMouseDraggingPosition();\n        var final = editor.clientToMarkups(pos.x, pos.y);\n        var position = {x: (this.firstCorner.x + final.x) / 2, y: (this.firstCorner.y + final.y) / 2};\n\n        var width, height;\n        // Snap to parallel/perpendicular of underlying vectors\n        if (editor.snapper && this.lineSnapped) {\n            var start = editor.project(this.lineSnapped.vertices[0]);\n            var end = editor.project(this.lineSnapped.vertices[1]);\n\n            var startZ = start.z;\n\n            start = editor.clientToMarkups(start.x, start.y);\n            end = editor.clientToMarkups(end.x, end.y);\n\n            start = new THREE.Vector3(start.x, start.y, startZ);\n            end = new THREE.Vector3(end.x, end.y, startZ);\n\n            var p = new THREE.Vector3(final.x, final.y, startZ);\n\n            var parallel = MeasureCommon.nearestPointInPointToLine(p, start, end);\n            height = p.distanceTo(parallel);\n\n            // select an arbitrary point on the perpendicular line\n            var k = -(start.x - end.x) / (start.y - end.y);\n            var b = this.firstCorner.y - k * this.firstCorner.x;\n            var x = this.firstCorner.x + 1;\n            var y = k * x + b;\n            var pEnd = new THREE.Vector3(x, y, startZ);\n\n            var pStart = new THREE.Vector3(this.firstCorner.x, this.firstCorner.y, startZ);\n            var perpendicular = MeasureCommon.nearestPointInPointToLine(p, pStart, pEnd);\n            width = p.distanceTo(perpendicular);\n        }\n        else {\n            width = final.x - this.firstCorner.x;\n            height = final.y - this.firstCorner.y;\n        }\n\n        var size = this.size = {x: Math.abs(width), y: Math.abs(height)};\n\n        var setRectangle = new SetRectangle(\n            editor,\n            selectedMarkup,\n            position,\n            size);\n\n        setRectangle.execute();\n    };\n\n    /**\n     * Handler to mouse down events, used to start markups creation.\n     * @private\n     */\n    proto.onMouseDown = function() {\n\n        EditMode.prototype.onMouseDown.call(this);\n\n        if (this.selectedMarkup) {\n            return;\n        }\n\n        var editor = this.editor;\n        var mousePosition = editor.getMousePosition();\n\n        this.initialX = mousePosition.x;\n        this.initialY = mousePosition.y;\n\n        // Calculate center and size.\n        var position = this.firstCorner = editor.clientToMarkups(this.initialX, this.initialY);\n        var size = this.size = editor.sizeFromClientToMarkups(1, 1);\n\n        // Calculate rotation\n        var rotation = 0;\n        this.lineSnapped = null;\n        if (editor.snapper) {\n            // Snap to parallel/perpendicular of underlying vectors\n            var geomType = editor.snapper.getGeometryType();\n            if (geomType === MeasureCommon.SnapType.SNAP_EDGE) {\n                this.lineSnapped = editor.snapper.getEdge();\n                var start = editor.project(this.lineSnapped.vertices[0]);\n                var end = editor.project(this.lineSnapped.vertices[1]);\n                var dx = end.x - start.x;\n                var dy = end.y - start.y;\n                rotation = this.rotation = Math.atan2(dy, dx);\n            }\n        }\n\n        // Create rectangle.\n        editor.beginActionGroup();\n\n        var markupId = editor.getId();\n        var create = new CreateRectangle(\n            editor,\n            markupId,\n            position,\n            size,\n            rotation,\n            this.style);\n\n        create.execute();\n\n        this.selectedMarkup = editor.getMarkup(markupId);\n        this.creationBegin();\n    };\n\n","'use strict';\n\nimport { Markup } from './Markup'\nimport * as MarkupTypes from './MarkupTypes'\nimport { createMarkupPathSvg, composeRGBAString, createRectanglePath,\n    setAttributeToMarkupSvg, updateMarkupPathSvgHitarea, addMarkupMetadata } from './MarkupsCoreUtils'\nimport { cloneStyle } from './StyleUtils'\nimport { EditModeRectangle } from './edit-modes/EditModeRectangle'\n\n    /**\n     * Rectangle markup.\n     *\n     * Implements a Rectangle {@link Autodesk.Viewing.Extensions.Markups.Core.Markup|Markup}.\n     * Included in documentation as an example of how to create\n     * a specific markup type. Developers are encourage to look into this class's source code and copy\n     * as much code as they need. Find link to source code below.\n     *\n     * @tutorial feature_markup\n     * @constructor\n     * @memberof Autodesk.Viewing.Extensions.Markups.Core\n     * @extends Autodesk.Viewing.Extensions.Markups.Core.Markup\n     *\n     * @param {number} id\n     * @param {Autodesk.Viewing.Extensions.Markups.Core.MarkupsCore} editor\n     * @constructor\n     */\n    export function MarkupRectangle(id, editor) {\n\n        var styleAttributes = ['stroke-width', 'stroke-color', 'stroke-opacity', 'fill-color', 'fill-opacity'];\n        Markup.call(this, id, editor, styleAttributes);\n\n        // Bind to this to pass this.globalManager\n        this.addMarkupMetadata = addMarkupMetadata.bind(this);\n\n        this.type = MarkupTypes.MARKUP_TYPE_RECTANGLE;\n        this.shape = createMarkupPathSvg();\n\n        this.bindDomEvents();\n    }\n\n    MarkupRectangle.prototype = Object.create(Markup.prototype);\n    MarkupRectangle.prototype.constructor = MarkupRectangle;\n\n    var proto = MarkupRectangle.prototype;\n\n    proto.getEditMode = function() {\n\n        return new EditModeRectangle(this.editor);\n    };\n\n    /**\n     * Sets position and size in markup space coordinates\n     * @param {Object} position\n     * @param {Object} size\n     */\n    proto.set = function(position, size) {\n\n        this.position.x = position.x;\n        this.position.y = position.y;\n        this.size.x = size.x;\n        this.size.y = size.y;\n\n        this.updateStyle();\n    };\n\n    /**\n     * Applies data values into DOM element style/attribute(s)\n     *\n     */\n    proto.updateStyle = function() {\n\n        var style = this.style;\n        var shape = this.shape;\n        var path = this.getPath().join(' ');\n\n        var strokeWidth = this.style['stroke-width'];\n        var strokeColor = this.highlighted ? this.highlightColor : composeRGBAString(style['stroke-color'], style['stroke-opacity']);\n        var fillColor = composeRGBAString(style['fill-color'], style['fill-opacity']);\n        var transform = this.getTransform();\n\n        setAttributeToMarkupSvg(shape, 'd', path);\n        setAttributeToMarkupSvg(shape, 'stroke-width', strokeWidth);\n        setAttributeToMarkupSvg(shape, 'stroke', strokeColor);\n        setAttributeToMarkupSvg(shape, 'fill', fillColor);\n        setAttributeToMarkupSvg(shape, 'transform', transform);\n        updateMarkupPathSvgHitarea(shape, this.editor);\n    };\n\n    proto.setMetadata = function() {\n\n        var metadata = cloneStyle(this.style);\n\n        metadata.type = this.type;\n        metadata.position = [this.position.x, this.position.y].join(\" \");\n        metadata.size = [this.size.x, this.size.y].join(\" \");\n        metadata.rotation = String(this.rotation);\n\n        return this.addMarkupMetadata(this.shape, metadata);\n    };\n\n    proto.getPath = function() {\n\n        var strokeWidth = this.style['stroke-width'];\n\n        var w = this.size.x - strokeWidth;\n        var h = this.size.y - strokeWidth;\n        var x =-w * 0.5;\n        var y =-h * 0.5;\n\n        var path = [];\n        createRectanglePath(x, y, w, h, false, path);\n\n        return path;\n    };\n","'use strict';\n\nimport { EditAction } from './EditAction'\nimport { MarkupRectangle } from '../MarkupRectangle'\nimport { cloneStyle } from '../StyleUtils'\n\n    /**\n     *\n     * @param editor\n     * @param id\n     * @param position\n     * @param size\n     * @param rotation\n     * @param style\n     * @constructor\n     */\n    export function CreateRectangle(editor, id, position, size, rotation, style) {\n\n        EditAction.call(this, editor, 'CREATE-RECTANGLE', id);\n\n        this.selectOnExecution = false;\n        this.position = {x: position.x, y: position.y};\n        this.size = {x: size.x, y: size.y};\n        this.rotation = rotation;\n        this.style = cloneStyle(style);\n    }\n\n    CreateRectangle.prototype = Object.create(EditAction.prototype);\n    CreateRectangle.prototype.constructor = CreateRectangle;\n\n    var proto = CreateRectangle.prototype;\n\n    proto.redo = function() {\n\n        var editor = this.editor;\n        var rectangle = new MarkupRectangle(this.targetId, editor);\n\n        editor.addMarkup(rectangle);\n\n        rectangle.set(this.position, this.size);\n        rectangle.setRotation(this.rotation);\n        rectangle.setStyle(this.style);\n    };\n\n    proto.undo = function() {\n\n        var markup = this.editor.getMarkup(this.targetId);\n        markup && this.editor.removeMarkup(markup);\n    };\n\n","'use strict';\n\nimport { EditAction } from './EditAction'\nimport { CreateText } from './CreateText'\n\n    /**\n     *\n     * @param editor\n     * @param text\n     * @constructor\n     */\n    export function DeleteText(editor, text) {\n\n        EditAction.call(this, editor, 'DELETE-TEXT', text.id);\n\n        var position = {x: text.position.x, y: text.position.y};\n        var size = {x: text.size.x, y: text.size.y};\n\n        this.createText = new CreateText(\n            editor,\n            text.id,\n            position,\n            size,\n            text.getText(),\n            text.getStyle());\n    }\n\n    DeleteText.prototype = Object.create(EditAction.prototype);\n    DeleteText.prototype.constructor = DeleteText;\n\n    var proto = DeleteText.prototype;\n\n    proto.redo = function() {\n\n        this.createText.undo();\n    };\n\n    proto.undo = function() {\n\n        this.createText.redo();\n    };\n","'use strict';\n\nimport { EditAction } from './EditAction'\n\n    /**\n     *\n     * @param editor\n     * @param markup\n     * @param position\n     * @param size\n     * @param text\n     * @constructor\n     */\n    export function SetCallout(editor, markup, position, size, text, isFrameUsed) {\n\n        EditAction.call(this, editor, 'SET-CALLOUT', markup.id);\n\n        this.newPosition = {x: position.x, y: position.y};\n        this.oldPosition = {x: markup.position.x, y: markup.position.y};\n        this.newSize = {x: size.x, y: size.y};\n        this.oldSize = {x: markup.size.x, y: markup.size.y};\n        this.newText = text;\n        this.oldText = markup.getText();\n        this.newIsFrameUsed = isFrameUsed;\n        this.oldIsFrameUsed = markup.isFrameUsed;\n    }\n\n    SetCallout.prototype = Object.create(EditAction.prototype);\n    SetCallout.prototype.constructor = SetCallout;\n\n    var proto = SetCallout.prototype;\n\n    proto.redo = function() {\n\n        var callout = this.editor.getMarkup(this.targetId);\n        callout && callout.set(this.newPosition, this.newSize, this.newText, this.newIsFrameUsed);\n    };\n\n    proto.undo = function() {\n\n        var callout = this.editor.getMarkup(this.targetId);\n        callout && callout.set(this.oldPosition, this.oldSize, this.oldText, this.oldIsFrameUsed);\n    };\n","'use strict';\n\nimport { EditAction } from './EditAction'\n\n    /**\n     *\n     * @param editor\n     * @param markup\n     * @param position\n     * @param width\n     * @param height\n     * @constructor\n     */\n    export function SetSize(editor, markup, position, width, height) {\n\n        EditAction.call(this, editor, 'SET-SIZE', markup.id);\n\n        this.newPosition = {x: position.x, y: position.y};\n        this.oldPosition = {x: markup.position.x, y: markup.position.y};\n        this.newWidth = width;\n        this.oldWidth = markup.size.x;\n        this.newHeight = height;\n        this.oldHeight = markup.size.y;\n    }\n\n    SetSize.prototype = Object.create(EditAction.prototype);\n    SetSize.prototype.constructor = SetSize;\n\n    var proto = SetSize.prototype;\n\n    proto.redo = function() {\n\n        var markup = this.editor.getMarkup(this.targetId);\n        markup && markup.setSize(this.newPosition, this.newWidth, this.newHeight);\n    };\n\n    proto.undo = function() {\n\n        var markup = this.editor.getMarkup(this.targetId);\n        markup && markup.setSize(this.oldPosition, this.oldWidth, this.oldHeight);\n    };\n\n    proto.merge = function(action) {\n\n        if (this.targetId === action.targetId &&\n            this.type === action.type) {\n\n            this.newPosition = action.newPosition;\n            this.newWidth = action.newWidth;\n            this.newHeight = action.newHeight;\n            return true;\n        }\n        return false;\n    };\n\n    /**\n     * @returns {boolean}\n     */\n    proto.isIdentity = function() {\n\n        var identity =\n            this.newPosition.x === this.oldPosition.x &&\n            this.newPosition.y === this.oldPosition.y &&\n            this.newWidth === this.oldWidth &&\n            this.newHeight === this.oldHeight;\n\n        return identity;\n    };\n","\n'use strict';\n\n/*!\n    Based on Autosize 4.0.0\n    license: MIT\n    http://www.jacklmoore.com/autosize\n*/\nvar map = typeof Map === \"function\" ? new Map() : (function () {\n    var keys = [];\n    var values = [];\n\n    return {\n        has: function has(key) {\n            return keys.indexOf(key) > -1;\n        },\n        get: function get(key) {\n            return values[keys.indexOf(key)];\n        },\n        set: function set(key, value) {\n            if (keys.indexOf(key) === -1) {\n                keys.push(key);\n                values.push(value);\n            }\n        },\n        'delete': function _delete(key) {\n            var index = keys.indexOf(key);\n            if (index > -1) {\n                keys.splice(index, 1);\n                values.splice(index, 1);\n            }\n        }\n    };\n})();\n\nvar createEvent = function createEvent(name) {\n    return new Event(name, { bubbles: true });\n};\ntry {\n    new Event('test');\n} catch (e) {\n    // IE does not support `new Event()`\n    createEvent = function (name) {\n        const _document = Autodesk.Viewing.getGlobal().document;\n        var evt = _document.createEvent('Event');\n        evt.initEvent(name, true, false);\n        return evt;\n    };\n}\n\nfunction assign(ta) {\n    if (!ta || !ta.nodeName || ta.nodeName !== 'TEXTAREA' || map.has(ta)) return;\n\n    var heightOffset = null;\n    var clientWidth = ta.clientWidth;\n    var cachedHeight = null;\n\n    const self = this;\n    function init() {\n        const _window = self.getWindow();\n        var style = _window.getComputedStyle(ta, null);\n\n        if (style.resize === 'vertical') {\n            ta.style.resize = 'none';\n        } else if (style.resize === 'both') {\n            ta.style.resize = 'horizontal';\n        }\n\n        if (style.boxSizing === 'content-box') {\n            heightOffset = -(parseFloat(style.paddingTop) + parseFloat(style.paddingBottom));\n        } else {\n            heightOffset = parseFloat(style.borderTopWidth) + parseFloat(style.borderBottomWidth);\n        }\n        // Fix when a textarea is not on document body and heightOffset is Not a Number\n        if (isNaN(heightOffset)) {\n            heightOffset = 0;\n        }\n\n        update();\n    }\n\n    function changeOverflow(value) {\n        {\n            // Chrome/Safari-specific fix:\n            // When the textarea y-overflow is hidden, Chrome/Safari do not reflow the text to account for the space\n            // made available by removing the scrollbar. The following forces the necessary text reflow.\n            var width = ta.style.width;\n            ta.style.width = '0px';\n            // Force reflow:\n            /* jshint ignore:start */\n            ta.offsetWidth;\n            /* jshint ignore:end */\n            ta.style.width = width;\n        }\n\n        ta.style.overflow = value;\n    }\n\n    function getParentOverflows(el) {\n        var arr = [];\n\n        while (el && el.parentNode && el.parentNode instanceof Element) {\n            if (el.parentNode.scrollTop) {\n                arr.push({\n                    node: el.parentNode,\n                    scrollTop: el.parentNode.scrollTop\n                });\n            }\n            el = el.parentNode;\n        }\n\n        return arr;\n    }\n\n    function resize() {\n        var originalHeight = ta.style.height;\n        var overflows = getParentOverflows(ta);\n        const _document = self.getDocument();\n        var docTop = _document.documentElement && _document.documentElement.scrollTop; // Needed for Mobile IE (ticket #240)\n\n        ta.style.height = '';\n\n        var endHeight = ta.scrollHeight + heightOffset;\n\n        if (ta.scrollHeight === 0) {\n            // If the scrollHeight is 0, then the element probably has display:none or is detached from the DOM.\n            ta.style.height = originalHeight;\n            return;\n        }\n\n        ta.style.height = endHeight + 'px';\n\n        // used to check if an update is actually necessary on window.resize\n        clientWidth = ta.clientWidth;\n\n        // prevents scroll-position jumping\n        overflows.forEach(function (el) {\n            // This condition is necessary for iOS 11, where you can't assign value to body.scrollTop\n            if (el.node.scrollTop !== el.scrollTop) {\n                el.node.scrollTop = el.scrollTop;\n            }\n        });\n\n        if (docTop) {\n            _document.documentElement.scrollTop = docTop;\n        }\n    }\n\n    function update() {\n        resize();\n\n        const _window = self.getWindow();\n        var styleHeight = Math.round(parseFloat(ta.style.height));\n        var computed = _window.getComputedStyle(ta, null);\n\n        // Using offsetHeight as a replacement for computed.height in IE, because IE does not account use of border-box\n        var actualHeight = computed.boxSizing === 'content-box' ? Math.round(parseFloat(computed.height)) : ta.offsetHeight;\n\n        // The actual height not matching the style height (set via the resize method) indicates that\n        // the max-height has been exceeded, in which case the overflow should be allowed.\n        if (actualHeight !== styleHeight) {\n            if (computed.overflow === 'hidden') {\n                changeOverflow('scroll');\n                resize();\n                actualHeight = computed.boxSizing === 'content-box' ? Math.round(parseFloat(window.getComputedStyle(ta, null).height)) : ta.offsetHeight;\n            }\n        } else {\n            // Normally keep overflow set to hidden, to avoid flash of scrollbar as the textarea expands.\n            if (computed.overflow !== 'hidden') {\n                changeOverflow('hidden');\n                resize();\n                actualHeight = computed.boxSizing === 'content-box' ? Math.round(parseFloat(window.getComputedStyle(ta, null).height)) : ta.offsetHeight;\n            }\n        }\n\n        if (cachedHeight !== actualHeight) {\n            cachedHeight = actualHeight;\n            var evt = createEvent('autosize:resized');\n            try {\n                ta.dispatchEvent(evt);\n            } catch (err) {\n                // Firefox will throw an error on dispatchEvent for a detached element\n                // https://bugzilla.mozilla.org/show_bug.cgi?id=889376\n            }\n        }\n    }\n\n    var pageResize = function pageResize() {\n        if (ta.clientWidth !== clientWidth) {\n            update();\n        }\n    };\n\n    var destroy = (function (style) {\n        self.removeWindowEventListener('resize', pageResize, false);\n        ta.removeEventListener('input', update, false);\n        ta.removeEventListener('keyup', update, false);\n        ta.removeEventListener('autosize:destroy', destroy, false);\n        ta.removeEventListener('autosize:update', update, false);\n\n        Object.keys(style).forEach(function (key) {\n            ta.style[key] = style[key];\n        });\n\n        map['delete'](ta);\n    }).bind(ta, {\n        height: ta.style.height,\n        resize: ta.style.resize,\n        overflow: ta.style.overflow,\n        overflowX: ta.style.overflowX,\n        wordWrap: ta.style.wordWrap\n    });\n\n    ta.addEventListener('autosize:destroy', destroy, false);\n\n    // IE9 does not fire onpropertychange or oninput for deletions,\n    // so binding to onkeyup to catch most of those events.\n    // There is no way that I know of to detect something like 'cut' in IE9.\n    if ('onpropertychange' in ta && 'oninput' in ta) {\n        ta.addEventListener('keyup', update, false);\n    }\n\n    self.addWindowEventListener('resize', pageResize, false);\n    ta.addEventListener('input', update, false);\n    ta.addEventListener('autosize:update', update, false);\n    ta.style.overflowX = 'hidden';\n    ta.style.wordWrap = 'break-word';\n\n    map.set(ta, {\n        destroy: destroy,\n        update: update\n    });\n\n    init();\n}\n\nfunction destroy(ta) {\n    var methods = map.get(ta);\n    if (methods) {\n        methods.destroy();\n    }\n}\n\nfunction update(ta) {\n    var methods = map.get(ta);\n    if (methods) {\n        methods.update();\n    }\n}\n\nfunction isRuntimeSupported() {\n    // Don't support Node.js and IE8 (or lower)\n    const _window = Autodesk.Viewing.getGlobal();\n    if (typeof window === 'undefined' || typeof window.getComputedStyle !== 'function')\n        return false;\n    return true;\n}\n\nconst RUNTIME_SUPPORTED = isRuntimeSupported();\n\n\nexport var autosize = function(el, options) {\n    const self = this;\n    if (RUNTIME_SUPPORTED && el) {\n        Array.prototype.forEach.call(el.length ? el : [el], function (x) {\n            return assign.bind(self)(x, options);\n        });\n    } \n    return el;\n};\n\nautosize.destroy = function(el) {\n    if (RUNTIME_SUPPORTED && el) {\n        Array.prototype.forEach.call(el.length ? el : [el], destroy);\n    }\n    return el;\n}\n\nautosize.update = function(el) {\n    if (RUNTIME_SUPPORTED && el) {\n        Array.prototype.forEach.call(el.length ? el : [el], update);\n    }\n    return el;\n}\n","'use strict';\n\n    /**\n     * Curring object which generate a string that can be used\n     * as a Dom element's 'style' value.\n     *\n     * @constructor\n     */\n    export function DomElementStyle() {\n\n        this.reset();\n    }\n\n    /*\n     * Constants\n     */\n    var BROWSER_PREFIXES = ['-ms-', '-webkit-', '-moz-', '-o-'];\n\n    var proto = DomElementStyle.prototype;\n\n    proto.reset = function() {\n\n        this.attributes = {};\n        this.dirty = false;\n        this.styleString = '';\n\n        return this;\n    };\n\n    /**\n     *\n     * @param {String} key\n     * @param {*} value\n     * @param {Object} [options]\n     * @param {Boolean} [options.allBrowsers] - Whether to add browser prefix to key\n     * @returns {Autodesk.Viewing.Extensions.Markups.Core.Utils.DomeElemStyle}\n     */\n    proto.setAttribute = function(key, value, options) {\n\n        this.attributes[key] = value;\n\n        if (options && options.allBrowsers) {\n            var that = this;\n            BROWSER_PREFIXES.forEach(function(prefix){\n                that.attributes[(prefix+key)] = value;\n            });\n        }\n        this.dirty = true; // Could be optimized\n        return this;\n    };\n\n    /**\n     * Removes one or more attributes\n     * @param {String|Array} key - Key or Keys to be removed\n     * @returns {Autodesk.Viewing.Extensions.Markups.Core.Utils.DomElemStyle} this\n     */\n    proto.removeAttribute = function(key) {\n\n        if (!Array.isArray(key)) {\n            key = [key];\n        }\n\n        var self = this;\n        key.forEach(function(k) {\n            if (k in self.attributes) {\n                delete self.attributes[k];\n                self.dirty = true;\n            }\n        });\n        return this;\n    };\n\n    /**\n     * Gets the String representation of this style object\n     * @returns {string}\n     */\n    proto.getStyleString = function() {\n\n        if (this.dirty) {\n            this.styleString = generateStyle(this.attributes);\n            this.dirty = false;\n        }\n        return this.styleString;\n    };\n\n    /**\n     * Clones the current Object\n     *\n     * @returns {Autodesk.Viewing.Extensions.Markups.Core.Utils.DomElemStyle}\n     */\n    proto.clone = function() {\n\n        var clone = new DomElementStyle();\n        var attributes = this.attributes;\n\n        for (var key in attributes) {\n            clone.setAttribute(key, attributes[key]);\n        }\n        return clone;\n    };\n\n    /**\n     * Generates the style value string. Non mutable function.\n     *\n     * @param {Object} attributes\n     * @private\n     */\n    function generateStyle(attributes) {\n\n        var elements = [];\n        for (var key in attributes) {\n            var val = attributes[key];\n            elements.push(key);\n            elements.push(':');\n            elements.push(val);\n            elements.push('; ');\n        }\n        return elements.join('');\n    }\n","'use strict';\n\nconst ResizeObserver = require('../../../thirdparty/resize-observer-polyfill/ResizeObserver.min.js'); // Required for Markup Text Input\nimport { autosize } from './EditorTextAutosize'\nimport { addTraitEventDispatcher } from '../MarkupsCoreUtils'\nimport { cloneStyle } from '../StyleUtils'\nimport { DomElementStyle } from '../DomElementStyle'\n\nconst av = Autodesk.Viewing;\n\n    /**\n     * Auxiliary class that handles all input for the Label Markup (MarkupText.js)\n     * It instantiates a TEXTAREA where the user can input text. When user input is\n     * disabled, the textarea gets hidden and further rendering is delegated to\n     * MarkupText.js\n     *\n     * @param {HTMLElement} parentDiv\n     * @param {Object} editor - Core Extension\n     * @constructor\n     */\n    export function EditorTextInput(parentDiv, editor, singleLine, defaultText, maxLength) {\n\n        this.parentDiv = parentDiv;\n        this.editor = editor;\n        this.setGlobalManager(editor.viewer.globalManager);\n\n        // Constants\n        this.EVENT_TEXT_CHANGE = 'EVENT_CO2_TEXT_CHANGE';\n        this.EVENT_TEXT_SET_ACTIVE = 'EVENT_CO2_TEXT_SET_ACTIVE';\n        this.EVENT_TEXT_SET_INACTIVE = 'EVENT_CO2_TEXT_SET_INACTIVE';\n\n        const _document = this.getDocument();\n        // The actual TextArea input\n        if (singleLine) {\n            this.textArea = _document.createElement('input');\n            this.textArea.setAttribute('type', 'text');\n        }\n        else {\n            this.textArea = _document.createElement('textarea');\n            this.textArea.rows = '1';\n            if (!Autodesk.Viewing.isIE11) { // auto parameter not available in IE11\n                this.textArea.dir = 'auto';\n            }\n        }\n\n        this.firstEdit = true;\n        this.defaultText = defaultText;\n        this.textArea.setAttribute('maxlength', maxLength); // TODO: Make constant? Change value?\n        this.textArea.setAttribute('data-i18n', defaultText);\n        this.startingHeight = 0;\n\n        autosize.bind(this)(this.textArea);\n\n        var ro = new ResizeObserver(function(entries, observer) {\n            this.setEditFrame();\n        }.bind(this));\n\n        ro.observe(this.textArea);\n\n        this.styleTextArea = new DomElementStyle(); // TODO: Move this to EditMode.\n        this.styleTextArea\n                .setAttribute('position', 'absolute')\n                .setAttribute('resize', 'none')\n                .setAttribute('box-sizing', 'border-box')\n                .setAttribute('-moz-box-sizing', 'border-box')\n                .setAttribute('-webkit-box-sizing', 'border-box')\n                .setAttribute('overflow', 'hidden')\n                .setAttribute('outline', 'none')\n                .setAttribute('border', 'none')\n                .setAttribute('z-index', '1')\n                .setAttribute('padding', '10px');\n\n        // Helper div to measure text width\n        this.measureDiv = _document.createElement('div');\n\n        // Become an event dispatcher\n        addTraitEventDispatcher(this);\n    }\n\n    av.GlobalManagerMixin.call(EditorTextInput.prototype);\n    var proto = EditorTextInput.prototype;\n\n    proto.destroy = function() {\n\n        this.setInactive();\n    };\n\n    /**\n     * Initializes itself given an Label Markup (textMarkup)\n     * @param {Object} textMarkup\n     * @param {Boolean} firstEdit - Whether the markup is being edited for the first time.\n     */\n    proto.setActive = function(textMarkup, firstEdit) {\n\n        if (this.textMarkup === textMarkup) {\n            return;\n        }\n\n        var placeholderText = Autodesk.Viewing.i18n.translate(this.defaultText);\n        this.textArea.setAttribute('placeholder', placeholderText);\n\n        this.setInactive();\n        this.parentDiv.appendChild(this.textArea);\n        this.textMarkup = textMarkup;\n        this.firstEdit = firstEdit || false;\n\n        this.constrainToCanvas = firstEdit;\n\n        this.initFromMarkup();\n\n        this.constrainToCanvas = false;\n\n        // On iOS this doesn't work quite well, the keyboard will dismiss after call focus programatically.\n        // http://stackoverflow.com/questions/32407185/wkwebview-cant-open-keyboard-for-input-field\n        if (!Autodesk.Viewing.isIOSDevice()) {\n          // Focus on next frame\n          var txtArea = this.textArea;\n          const _window = this.getWindow();\n          _window.requestAnimationFrame(function(){\n              txtArea.focus();\n          });\n        }\n\n        var dataBag = {\n            markup: this.textMarkup,\n            firstEdit: this.firstEdit,\n            isActive: true\n        };\n        this.dispatchEvent({ type: this.EVENT_TEXT_SET_ACTIVE, data: dataBag });\n    };\n\n    /**\n     * Closes the editor text input and goes back into normal markup edition mode.\n     */\n    proto.setInactive = function() {\n        var dataBag = {\n            markup: this.textMarkup,\n            isActive: false\n        };\n\n        // In iOS10, the keyboard always show on screen after tap screen out of text\n        // area or save markup to end text edit, call blur to make sure keyboard dismiss.\n        if (Autodesk.Viewing.isIOSDevice())\n        {\n            this.textArea.blur();\n        }\n\n        this.removeWindowEventListener('resize', this.onResizeBinded);\n\n        if (this.textMarkup) {\n            this.textMarkup = null;\n            this.parentDiv.removeChild(this.textArea);\n        }\n        this.style = null;\n\n        this.dispatchEvent({ type: this.EVENT_TEXT_SET_INACTIVE, data: dataBag });\n    };\n\n    proto.isActive = function() {\n\n        return !!this.textMarkup;\n    };\n\n    proto.setEditFrame = function() {\n        if (this.editor.editFrame.markup && this.textMarkup && this.editor.editFrame.markup === this.textMarkup) {\n            var frameWidth = parseFloat(this.textArea.style.width);\n            var frameHeight = parseFloat(this.textArea.style.height);\n\n            var position = this.textMarkup.getClientPosition();\n            var rotation = this.textMarkup.getRotation();\n\n            var xPos = position.x - (frameWidth / 2);\n            var yPos = position.y - (this.startingHeight / 2);\n\n            this.editor.editFrame.setSelection(xPos, yPos, frameWidth, frameHeight, rotation);\n        }\n    };\n\n    /**\n     * Applies Markup styles to TextArea used for editing.\n     * It also saves a copy of the style object.\n     * @private\n     */\n    proto.initFromMarkup = function(updateStyleFirst) {\n\n        var markup = this.textMarkup;\n        var position = markup.getClientPosition();\n        var size = markup.getClientSize();\n\n        // Text area padding is relative to the current font size\n        var padding = markup.getClientFontSize() / 2;\n\n        this.startingHeight = size.y;\n\n        var left = position.x - size.x * 0.5;\n        var top = position.y - size.y * 0.5;\n\n        var lineHeightPercentage = markup.lineHeight + \"%\";\n        this.styleTextArea.setAttribute('line-height', lineHeightPercentage);\n        this.styleTextArea.setAttribute('padding', padding + 'px');\n\n        this.setPosAndSize(left, top, size.x, size.y);\n        if (updateStyleFirst) {\n            this.setStyle(markup.getStyle());\n            this.textArea.value = markup.getText();\n        } else {\n            this.textArea.value = markup.getText();\n            this.setStyle(markup.getStyle());\n        }\n    };\n\n    proto.setPosAndSize = function(left, top, width, height) {\n        if (this.constrainToCanvas) {\n            // Check that it doesn't overflow out of the canvas\n            if (left + width >= this.editor.viewer.container.clientWidth) {\n                left = this.editor.viewer.container.clientWidth - (width + 10);\n            }\n            if (top + height >= this.editor.viewer.container.clientHeight) {\n                top = this.editor.viewer.container.clientHeight - (height + 10);\n            }\n\n            // Make sure text input left side always in the canvas area.\n            // Especially on iPhone6 & iPhone7\n            if (left < 5) {\n                left = 5;\n                width = this.editor.viewer.container.clientWidth - 10;\n            }\n        }\n\n        this.styleTextArea\n            // Size and position\n            .setAttribute('left', left + 'px')\n            .setAttribute('top', top + 'px')\n            .setAttribute('width', width + 'px')\n            .setAttribute('height', height + 'px');\n    };\n\n    proto.setStyle = function(style) {\n\n        if (this.style) {\n            // An already present style means that the user\n            // has changed the style using the UI buttons.\n            // We need to account for the user having changed the\n            // width/height of the TextArea. Since there is no event\n            // we can detect for it, we do it here.\n            var temp = {};\n            this.injectSizeValues(temp);\n            this.setPosAndSize(\n                temp.newPos.x - temp.width * 0.5,\n                temp.newPos.y - temp.height * 0.5,\n                temp.width, temp.height);\n        }\n        var fontHeight = this.editor.sizeFromMarkupsToClient(0, style['font-size']).y;\n        var strokeWidth = this.editor.sizeFromMarkupsToClient(0, style['stroke-width']).y;\n        var textAreaStyle = this.styleTextArea\n            // Visuals\n            .setAttribute('color', style['stroke-color'])\n            .setAttribute('outline', strokeWidth + 'px solid ' + style['stroke-color'])\n            .setAttribute('font-family', style['font-family'])\n            .setAttribute('font-size', fontHeight + 'px')\n            .setAttribute('font-weight', style['font-weight'])\n            .setAttribute('font-style', style['font-style'])\n            .getStyleString();\n        this.textArea.setAttribute('style', textAreaStyle);\n        this.style = cloneStyle(style);\n        autosize.update(this.textArea);\n    };\n\n    /**\n     * Helper function that, for a given markup with some text in it\n     * returns an Array of lines in it.\n     * @param {Object} markup\n     * @returns {{text, lines}|{text: String, lines: Array.<String>}}\n     */\n    proto.getTextValuesForMarkup = function(markup, sizeUpdateRequired) {\n        var active = this.isActive();\n        var activeMarkup = this.textMarkup;\n        var activeFirstEdit = this.firstEdit;\n\n        this.setActive(markup, false);\n        var textValues = this.getTextValues();\n\n        var dataBag = {\n            markup: markup,\n            textValues: textValues\n        };\n\n        if (active) {\n            this.setActive(activeMarkup, activeFirstEdit);\n        } else {\n            if (sizeUpdateRequired) {\n                this.injectSizeValues(dataBag);\n            }\n\n            this.setInactive();\n        }\n\n        return dataBag;\n    };\n\n    /**\n     * Returns the current text as one string and an array of lines\n     * of how the text is being rendered (1 string per line)\n     * @returns {{text: String, lines: Array.<String>}}\n     */\n    proto.getTextValues = function() {\n\n        var newText = this.textArea.value;\n        if (newText === this.defaultText) {\n            newText = '';\n        }\n        return {\n            text: newText,\n            lines: this.generateLines()\n        };\n    };\n\n    /**\n     * Function called by UI\n     */\n    proto.acceptAndExit = function() {\n\n        // If placeholder text, then remove.\n        var textValues = this.getTextValues();\n        var textMarkup = this.textMarkup;\n\n        var dataBag = {\n            markup: this.textMarkup,\n            style: this.style,\n            firstEdit: this.firstEdit,\n            newText: textValues.text,\n            newLines: textValues.lines\n        };\n        this.injectSizeValues(dataBag);\n\n        this.dispatchEvent({ type: this.EVENT_TEXT_CHANGE, data: dataBag });\n        this.setInactive();\n        textMarkup.updateStyle(true); // Hack: LMV-3628\n    };\n\n    /**\n     * Injects position, width and height of the textarea rect\n     * @param {Object} dataBag\n     * @private\n     */\n    proto.injectSizeValues = function(dataBag) {\n\n        // Explicit usage of parseFloat to remove the 'px' suffix.\n        var width = parseFloat(this.textArea.style.width);\n        var height = parseFloat(this.textArea.style.height);\n        var ox = parseFloat(this.textArea.style.left);\n        var oy = parseFloat(this.textArea.style.top);\n\n        dataBag.width = width;\n        dataBag.height = height;\n        dataBag.newPos = {\n            x: ox + (width * 0.5),\n            y: oy + (height * 0.5)\n        };\n    };\n\n    /**\n     * Handler for when the camera moves\n     * @param {Object} event - Camera moves event\n     * @private\n     */\n    proto.onCameraChanged = function(event) {\n        var str = this.textArea.value;\n        this.textMarkup.style = cloneStyle(this.style);\n        this.style = null; // TODO: Revisit this code because style changes are lost by doing this.\n        this.initFromMarkup(true);\n        this.textArea.value = str;\n        this.setEditFrame();\n    };\n\n    /**\n     * Grabs the text content of the textarea and returns\n     * an Array of lines.  Wrapped lines are returned as 2 lines.\n     */\n    proto.generateLines = function() {\n\n        // First, get lines separated by line breaks:\n        var textContent = this.textArea.value;\n        var linesBreaks = textContent.split(/\\r*\\n/);\n\n        var styleMeasureStr = this.styleTextArea.clone()\n            .removeAttribute(['top', 'left', 'width', 'height'])\n            .setAttribute('position','absolute')\n            .setAttribute('white-space','nowrap')\n            .setAttribute('float','left')\n            .setAttribute('visibility','hidden')\n            .getStyleString();\n        this.measureDiv.setAttribute('style', styleMeasureStr);\n        this.parentDiv.appendChild(this.measureDiv);\n\n        var maxLineLength = this.textArea.clientWidth - (2 * parseFloat(this.textArea.style.padding));\n\n        // Now check whether the lines are wrapped.\n        // If so, subdivide into other lines.\n        var linesOutput = [];\n\n        for (var i= 0, len = linesBreaks.length; i<len; ++i) {\n            var line = trimRight(linesBreaks[i]);\n\n            // Add a space in an empty line so it appears in the lines output\n            line = (line === '') ? ' ' : line;\n            this.splitLine(line, maxLineLength, linesOutput);\n        }\n\n        this.parentDiv.removeChild(this.measureDiv);\n        return linesOutput;\n    };\n\n    /**\n     * Given a String that represents one line of text that is\n     * longer than the max length a line is allowed, this method\n     * cuts text into several ones that are no longer than the max\n     * length.\n     *\n     * @param {String} text\n     * @param {Number} maxLength\n     * @param {Array} output\n     * @private\n     */\n    proto.splitLine = function(text, maxLength, output) {\n\n        // End condition\n        if (text === '') {\n            return;\n        }\n\n        var remaining = '';\n        var done = false;\n\n        while (!done){\n            this.measureDiv.innerText = text;\n            var lineLen = this.measureDiv.clientWidth - (2 * parseFloat(this.measureDiv.style.padding));\n            if (lineLen <= maxLength) {\n                output.push(text);\n                this.splitLine(trimLeft(remaining), maxLength, output);\n                done = true;\n            } else {\n                // Need to try with a shorter word!\n                var parts = this.getShorterLine(text);\n                if (parts.length === 1) {\n                    // text is only one word that is way too long.\n                    this.splitWord(text, remaining, maxLength, output);\n                    done = true;\n                } else {\n                    text = parts[0];\n                    remaining = parts[1] + remaining;\n                }\n            }\n        }\n    };\n\n    /**\n     * Given a line of text such as \"hi there programmer\", it returns\n     * an array with 2 parts: [\"hi there\", \" programmer\"].\n     *\n     * It accounts for special cases with multi-spaces, such as for\n     * \"hi there  two-spaces\" returns [\"hi there\", \"  two-spaces\"]\n     *\n     * When there is only one word, it returns the whole word:\n     * \"JustOneWord\" returns [\"JustOneWord\"] (an array of 1 element)\n     *\n     * @param {String} line\n     * @returns {Array}\n     */\n    proto.getShorterLine = function(line) {\n\n        // TODO: Account for TABs\n        // Will probably never do unless a bug is reported.\n\n        var iLastSpace = line.lastIndexOf(' ');\n        if (iLastSpace === -1) {\n            return [line]; // This is a single word\n        }\n\n        // Else\n        // Iterate back removing additional spaces (multi spaces)\n        while (line.charAt(iLastSpace-1) === ' ') {\n            iLastSpace--\n        }\n\n        var trailingWord = line.substr(iLastSpace); // Contains the spaces\n        var shorterLine = line.substr(0,iLastSpace);\n        return [shorterLine, trailingWord];\n    };\n\n    /**\n     * Given a single word, splits it into multiple lines that fits in maxWidth\n     * @param {String} word\n     * @param {String} remaining\n     * @param {Number} maxLength\n     * @param {Array} output\n     */\n    proto.splitWord = function(word, remaining, maxLength, output) {\n\n        var lenSoFar = 1;\n        var fits = true;\n        while (fits) {\n\n            var part = word.substr(0,lenSoFar);\n            this.measureDiv.innerText = part;\n            var lineLen =  this.measureDiv.clientWidth - (2 * parseFloat(this.measureDiv.style.padding));\n\n            if (lineLen > maxLength) {\n\n                if (lenSoFar === 1) {\n                    // we can't split 1 character any longer.\n                    output.push(part);\n                    this.splitWord(word.substr(1), remaining, maxLength, output);\n                    return;\n                }\n\n                // It was fine until one less char //\n                var okayWord = word.substr(0,lenSoFar-1);\n                output.push(okayWord);\n                var extraWord = word.substr(lenSoFar-1);\n                this.splitLine(extraWord + remaining, maxLength, output);\n                return;\n            }\n\n            // Try one more character\n            lenSoFar++;\n\n            // Check if we are done with all characters\n            if (lenSoFar > word.length) {\n                // Okay it fits\n                output.push(word);\n                return;\n            }\n        }\n    };\n\n    function trimRight(text) {\n        if (text.length === 0) {\n            return \"\";\n        }\n        var lastNonSpace = text.length-1;\n        for (var i=lastNonSpace; i>=0; --i) {\n            if (text.charAt(i) !== ' ') {\n                lastNonSpace = i;\n                break;\n            }\n        }\n        return text.substr(0, lastNonSpace+1);\n    }\n\n    function trimLeft(text) {\n        if (text.length === 0) {\n            return \"\";\n        }\n        var firstNonSpace = 0;\n        for (var i=0; i<text.length; ++i) {\n            if (text.charAt(i) !== ' ') {\n                firstNonSpace = i;\n                break;\n            }\n        }\n        return text.substr(firstNonSpace);\n    }\n","'use strict';\n\nimport { EditMode } from './EditMode'\nimport { DeleteCallout } from '../edit-actions/DeleteCallout'\nimport { CreateCallout } from '../edit-actions/CreateCallout'\nimport { SetCallout } from '../edit-actions/SetCallout'\nimport { SetStyle } from '../edit-actions/SetStyle'\nimport { SetSize } from '../edit-actions/SetSize'\nimport * as MarkupTypes from '../MarkupTypes'\nimport * as MarkupEvents from '../MarkupEvents'\nimport { EditorTextInput } from './EditorTextInput'\n\n\n    var STARTING_WIDTH_FACTOR = 6;\n\n    /**\n     *\n     * @param editor\n     * @constructor\n     */\n    export function EditModeCallout(editor) {\n\n        var styleAttributes = [\n            'font-size',\n            'stroke-width',\n            'stroke-color',\n            'stroke-opacity',\n            'fill-color',\n            'fill-opacity',\n            'font-family',\n            'font-style',\n            'font-weight'\n        ];\n        EditMode.call(this, editor, MarkupTypes.MARKUP_TYPE_CALLOUT, styleAttributes);\n\n        this.style['fill-opacity'] = 1.0;\n        this.style['fill-color'] = '#ffffff';\n\n        var helper = new EditorTextInput(this.viewer.container, this.editor, false, 'Text', 360);\n        helper.addEventListener(helper.EVENT_TEXT_CHANGE, this.onHelperTextChange.bind(this), false);\n        helper.addEventListener(helper.EVENT_TEXT_SET_ACTIVE, this.onHelperSetActive.bind(this), false);\n        helper.addEventListener(helper.EVENT_TEXT_SET_INACTIVE, this.onHelperSetActive.bind(this), false);\n\n        this.textInputHelper = helper;\n        this.onHistoryChangeBinded = this.onHistoryChange.bind(this);\n        this.minSize = 0; // No need to size it initially\n        this.creationMethod = this.CREATION_METHOD_CLICK;\n    }\n\n    EditModeCallout.prototype = Object.create(EditMode.prototype);\n    EditModeCallout.prototype.constructor = EditModeCallout;\n\n    var proto = EditModeCallout.prototype;\n\n    proto.deleteMarkup = function(markup, cantUndo) {\n\n        markup = markup || this.selectedMarkup;\n        if (markup && markup.type === this.type) {\n            var deleteCallout = new DeleteCallout(this.editor, markup);\n            deleteCallout.addToHistory = !cantUndo;\n            deleteCallout.execute();\n            return true;\n        }\n        return false;\n    };\n\n    proto.setStyle = function(style) {\n\n        if (this.textInputHelper && this.textInputHelper.isActive()) {\n\n            this.textInputHelper.setStyle(style);\n        } else {\n            EditMode.prototype.setStyle.call(this, style);\n        }\n    };\n\n    proto.notifyAllowNavigation = function(allows) {\n\n        if (allows && this.textInputHelper && this.textInputHelper.isActive()) {\n            this.textInputHelper.acceptAndExit();\n        }\n    };\n\n    proto.destroy = function() {\n\n        if (this.textInputHelper) {\n            if (this.textInputHelper.isActive()) {\n                this.textInputHelper.acceptAndExit();\n            }\n            this.textInputHelper.destroy();\n            this.textInputHelper = null;\n        }\n        EditMode.prototype.destroy.call(this);\n    };\n\n    /**\n     * Handler to mouse down events, used to start markups creation.\n     */\n    proto.onMouseDown = function() {\n\n        if (this.textInputHelper && this.textInputHelper.isActive()) {\n            this.textInputHelper.acceptAndExit();\n            return;\n        }\n\n        if (this.selectedMarkup) {\n            return;\n        }\n\n        var editor = this.editor;\n        var mousePosition = editor.getMousePosition();\n        var clientFontSize = editor.sizeFromMarkupsToClient(0, this.style['font-size']).y;\n        var initialWidth = clientFontSize * STARTING_WIDTH_FACTOR; // Find better way to initialize size.\n        var initialHeight = clientFontSize * 1;\n\n        // Center position.\n        var size = this.size = editor.sizeFromClientToMarkups(initialWidth, initialHeight);\n        var position = editor.positionFromClientToMarkups(\n            mousePosition.x + (initialWidth * 0.5),\n            mousePosition.y + (initialHeight * 0.5));\n\n        this.creationBegin();\n        editor.beginActionGroup();\n\n        // Given the initial width and font size, we assume that the text fits in one line.\n        var createCallout = new CreateCallout(\n            editor,\n            editor.getId(),\n            position,\n            size,\n            '',\n            this.style,\n            true);\n\n        createCallout.execute();\n        this.creationEnd();\n\n        this.selectedMarkup = editor.getMarkup(createCallout.targetId);\n        this.textInputHelper && this.textInputHelper.setActive(this.selectedMarkup, true);\n        this.editor.actionManager.addEventListener(MarkupEvents.EVENT_HISTORY_CHANGED, this.onHistoryChangeBinded);\n    };\n\n    proto.onMouseUp = function(event) {\n\n    };\n\n    proto.onMouseDoubleClick = function(markup) {\n\n        if (markup === this.selectedMarkup) {\n            this.editor.selectMarkup(markup);\n            this.editor.editFrame.setMarkup(markup);\n            this.textInputHelper && this.textInputHelper.setActive(markup, false);\n        }\n    };\n\n    proto.onHelperSetActive = function(event) {\n        var databag = event.data;\n        var markup = databag.markup;\n        if (markup) {\n            markup.setIsHelperTextActive(databag.isActive);\n            markup.setIsShapeVisible(!databag.isActive);\n        }\n    };\n\n    proto.onHelperTextChange = function(event) {\n\n        var dataBag = event.data;\n        var textMarkup = dataBag.markup;\n        var textStyle = dataBag.style;\n        var curSelection = this.selectedMarkup;\n\n        this.editor.actionManager.removeEventListener(MarkupEvents.EVENT_HISTORY_CHANGED, this.onHistoryChangeBinded);\n\n        // Deal with edge case first: Creating a Label without text\n        if (dataBag.newText === '') {\n            this.editor.cancelActionGroup();\n\n            var deleteCallout = new DeleteCallout(this.editor, textMarkup);\n            deleteCallout.execute();\n\n            if (textMarkup !== curSelection) {\n                this.editor.selectMarkup(curSelection);\n            }\n\n            return;\n        }\n\n        // When the text is created for the first time, an action group\n        // is already created and it includes the CreateCallout action.\n        // Thus, no need to begin another action group.\n        if (!dataBag.firstEdit) {\n            this.editor.beginActionGroup();\n        }\n\n        // Size change action //\n        var position = this.editor.positionFromClientToMarkups(\n            dataBag.newPos.x, dataBag.newPos.y\n        );\n        var size = this.editor.sizeFromClientToMarkups(\n            dataBag.width, dataBag.height\n        );\n        var setSize = new SetSize(\n            this.editor,\n            textMarkup,\n            position,\n            size.x,\n            size.y);\n        setSize.execute();\n\n        // Text change action //\n        var setCallout = new SetCallout(\n            this.editor,\n            textMarkup,\n            textMarkup.position,\n            textMarkup.size,\n            dataBag.newText,\n            textMarkup.isFrameUsed);\n        setCallout.execute();\n\n        var setStyle = new SetStyle(\n            this.editor,\n            textMarkup,\n            textStyle\n        );\n        setStyle.execute();\n\n        // However, we do need to close the action group at this point. For both cases.\n        this.editor.closeActionGroup();\n        this.editor.selectMarkup(curSelection);\n    };\n\n    /**\n     * We want to make sure that the Input Helper gets removed from the screen\n     * whenever the user attempts to perform an undo or redo action.\n     * @param {Event} event\n     * @private\n     */\n    proto.onHistoryChange = function(event) {\n\n        if (this.textInputHelper && this.textInputHelper.isActive()) {\n            this.editor.actionManager.removeEventListener(MarkupEvents.EVENT_HISTORY_CHANGED, this.onHistoryChangeBinded);\n            this.textInputHelper.setInactive();\n        }\n    };\n\n    /**\n     * Notify the markup that the displayed markups are being saved so edit mode can finish current editions.\n     */\n    proto.onSave = function() {\n\n        EditMode.prototype.onSave.call(this);\n\n        // Close input helper if it's open.\n        if (this.textInputHelper && this.textInputHelper.isActive()) {\n            var firstEdit = this.textInputHelper.firstEdit;\n\n            this.editor.actionManager.removeEventListener(MarkupEvents.EVENT_HISTORY_CHANGED, this.onHistoryChangeBinded);\n            this.textInputHelper.setInactive();\n\n            // Close action group if open (first edit).\n            if (firstEdit) {\n                this.editor.cancelActionGroup();\n            }\n\n            this.editor.selectMarkup(null);\n            this.selectedMarkup = null;\n        }\n    };\n\n    proto.updateTextBoxStyle = function() {\n        if (this.isTextInputHelperActive()) {\n            this.textInputHelper.onCameraChanged();\n        }\n    };\n","'use strict';\n\nimport { Markup } from './Markup'\nimport * as MarkupTypes from './MarkupTypes'\nimport { createMarkupTextSvg, createMarkupPathSvg, createMarkupGroupSvg,\n    composeRGBAString, setAttributeToMarkupSvg, setMarkupTextSvgTransform,\n    updateMarkupTextSvgClipper, updateMarkupTextSvgHitarea, updateMarkupPathSvgHitarea,\n    createSvgElement, addMarkupMetadata, radiansToDegrees, createRectanglePath,\n    EDIT_FRAME_DEFAULT_MARGIN } from './MarkupsCoreUtils'\nimport { cloneStyle, copyStyle, isStyleEqual } from './StyleUtils'\nimport { EditModeCallout } from './edit-modes/EditModeCallout'\n\n    // LMV ViewerLMV-2170 [Markup] [PDF] Text markup missing/cutoff for normal sized text.\n    // If the font size of an SVG text is too small, the text is not rendered independently of its final screen size.\n    // To solve the issue we multiply font size by 100 and scale down the text in its transform.\n    var FONT_SIZE_SCALE = 100;\n\n    var STARTING_WIDTH_FACTOR = 6;\n\n    /**\n     * Callout Markup.\n     * @constructor\n     */\n    export function MarkupCallout(id, editor, size) {\n\n        var styleAttributes = [\n            'font-size',\n            'stroke-width',\n            'stroke-color',\n            'stroke-opacity',\n            'fill-color',\n            'fill-opacity',\n            'font-family',\n            'font-style',\n            'font-weight'\n        ];\n\n        Markup.call(this, id, editor, styleAttributes);\n\n        // bind to this to pass this.globalManager\n        this.addMarkupMetadata = addMarkupMetadata.bind(this);\n        this.createSvgElement = createSvgElement.bind(this);\n\n\n        this.type = MarkupTypes.MARKUP_TYPE_CALLOUT;\n        this.textShape = createMarkupTextSvg();\n        this.rectShape = createMarkupPathSvg();\n        this.shape = createMarkupGroupSvg([this.rectShape, this.textShape]);\n        this.isFrameUsed = true;\n        this.constraintRotation = true;\n        this.constraintHeight = true;\n        this.constraintWidth = false;\n        this.size.x = size.x;\n        this.size.y = size.y;\n        this.currentText = \"\";\n        this.currentTextLines = [\"\"];\n        this.prevHighlight = false;\n        this.isHelperTextActive = false;\n\n        // Note: We could have this property be a style property.\n        // However, there is no need for this property to be exposed to the user for alteration\n        // This value is a percentage of the font size used to offset vertically 2 text lines\n        // of the same paragraph.\n        // Notice that this value is used by EditorTextInput.js\n        this.lineHeight = 130;\n\n        this.minWidth = this.getClientFontSize() * STARTING_WIDTH_FACTOR;\n\n        this.bindDomEvents();\n    }\n\n    MarkupCallout.prototype = Object.create(Markup.prototype);\n    MarkupCallout.prototype.constructor = MarkupCallout;\n\n    var proto = MarkupCallout.prototype;\n\n    proto.getEditMode = function() {\n\n        return new EditModeCallout(this.editor);\n    };\n\n    /**\n     *\n     * @param {Object} position\n     * @param {Object} size\n     * @param {String} textString\n     */\n    proto.set = function(position, size, textString, isFrameUsed) {\n\n        this.position.x = position.x;\n        this.position.y = position.y;\n        this.size.x = size.x;\n        this.size.y = size.y;\n        this.setIsFilledFrameUsed(isFrameUsed);\n        this.setText(textString);\n    };\n\n    proto.setSize = function(position, width, height) {\n\n        this.position.x = position.x;\n        this.position.y = position.y;\n        this.size.x = width;\n        this.size.y = height;\n\n        var sizeUpdateRequired = true;\n\n        if (this.isHelperTextActive) {\n            this.updateTextBoxStyle();\n        } else {\n            this.updateStyle(sizeUpdateRequired);\n        }\n    };\n\n    proto.setPosition = function(x, y) {\n\n        this.position.x = x;\n        this.position.y = y;\n\n        if (this.isHelperTextActive) {\n            this.updateTextBoxStyle();\n        } else {\n            this.updateStyle();\n        }\n    };\n\n    proto.setStyle = function(style) {\n        var stylesEqual = isStyleEqual(style, this.style);\n\n        if (!stylesEqual) {\n            copyStyle(style, this.style);\n        }\n\n        this.updateStyle(!stylesEqual);\n    };\n\n    proto.setText = function(text) {\n\n        this.currentText = text;\n    };\n\n    /**\n     * Returns the raw string value\n     * @returns {String}\n     */\n    proto.getText = function() {\n\n        return this.currentText;\n    };\n\n    /**\n     * Returns a shallow copy of the text lines used for rendering SVG text\n     * @returns {Array.<String>}\n     */\n    proto.getTextLines = function() {\n\n        return this.currentTextLines.concat();\n    };\n\n    proto.highlightChanged = function() {\n\n        if (this.highlighted && this.highlighted !== this.prevHighlight) {\n            var rect = this.rectShape;\n            var text = this.textShape;\n            var strokeColor = this.highlighted ? this.highlightColor : composeRGBAString(style['stroke-color'], style['stroke-opacity']);\n            setAttributeToMarkupSvg(text, 'fill', strokeColor);\n\n            if (this.isFrameUsed) {\n                setAttributeToMarkupSvg(rect, 'stroke', strokeColor);\n            }\n\n            this.prevHighlight = true;\n            return false;\n        }\n\n        return true;\n    };\n\n    proto.updateTextBoxStyle = function() {\n        var editMode = this.editor.duringEditMode && this.editor.editMode;\n\n        if (!editMode || editMode.type !== this.type) {\n            editMode = this.getEditMode();\n        }\n\n        editMode.updateTextBoxStyle();\n    };\n\n    proto.setIsHelperTextActive = function(isActive) {\n        this.isHelperTextActive = isActive;\n    };\n\n    /**\n     * Applies data values into DOM element style/attribute(s)\n     *\n     */\n    proto.updateStyle = function(sizeUpdateRequired) {\n\n        if (this.highlightChanged()) {\n            this.prevHighlight = false;\n            var style = this.style;\n            var rect = this.rectShape;\n            var text = this.textShape;\n            var fontSize = this.style['font-size'];\n            var fontFamily = this.style['font-family'];\n            var fontWeight = this.style['font-weight'];\n            var fontStyle =  this.style['font-style'];\n            var strokeColor = this.highlighted ? this.highlightColor : composeRGBAString(style['stroke-color'], style['stroke-opacity']);\n            var strokeWidth = this.style['stroke-width'];\n\n            // FONT_SIZE_SCALE is used to scale up fontSize, but it is only needed in cases where the font size is too small\n            FONT_SIZE_SCALE = (fontSize > 1) ? 1 : 100;\n\n            this.rebuildTextSvg(sizeUpdateRequired);\n\n            var editor = this.editor;\n            var textContainerTransform = this.getTextContainerTransform();\n            var textTransform = this.getTextTransform();\n\n            setAttributeToMarkupSvg(text, 'font-family', fontFamily);\n            setAttributeToMarkupSvg(text, 'font-size', fontSize * FONT_SIZE_SCALE);\n            setAttributeToMarkupSvg(text, 'fill', strokeColor);\n            setAttributeToMarkupSvg(text, 'font-weight', fontWeight);\n            setAttributeToMarkupSvg(text, 'font-style', fontStyle);\n\n            setMarkupTextSvgTransform(text, textContainerTransform, textTransform);\n            updateMarkupTextSvgClipper(text, this.size.x, this.size.y);\n            updateMarkupTextSvgHitarea(text, this.size.x, this.size.y, editor);\n\n            var path = this.getPath().join(' ');\n            var transform = this.getTransform();\n            var fillColor = composeRGBAString(style['fill-color'], style['fill-opacity']);\n\n            setAttributeToMarkupSvg(rect, 'd', path);\n            setAttributeToMarkupSvg(rect, 'stroke-width', strokeWidth);\n            setAttributeToMarkupSvg(rect, 'stroke', strokeColor);\n            setAttributeToMarkupSvg(rect, 'transform', transform);\n            setAttributeToMarkupSvg(rect, 'fill', fillColor);\n            updateMarkupPathSvgHitarea(rect, editor);\n        }\n    };\n\n    /**\n     * Re-creates SVG tags that render SVG text.\n     * Each line is placed around tspan tags which are vertically offset to each other.\n     */\n    proto.rebuildTextSvg = function(sizeUpdateRequired) {\n\n        // TODO: Remove the need to get text values from an object in edit mode, should be a function.\n        // editMode needs to be set to load markups in view mode\n        var editMode = this.editor.duringEditMode && this.editor.editMode;\n\n        if (!editMode || editMode.type !== this.type) {\n            editMode = this.getEditMode();\n            editMode.textInputHelper.textArea.value = this.currentText;\n            editMode.textInputHelper.setStyle(this.style);\n        }\n\n        if (editMode.textInputHelper.textMarkup && editMode.textInputHelper.textMarkup !== this) {\n            return;\n        }\n\n        var style = cloneStyle(editMode.textInputHelper.style);\n        var text = editMode.textInputHelper.textArea.value;\n\n        var textHelperValues = editMode.textInputHelper.getTextValuesForMarkup(this, sizeUpdateRequired);\n\n        this.currentTextLines = textHelperValues.textValues.lines;\n\n        if (textHelperValues.newPos) {\n            var position = this.editor.positionFromClientToMarkups(textHelperValues.newPos.x, textHelperValues.newPos.y);\n            var size = this.editor.sizeFromClientToMarkups(textHelperValues.width, textHelperValues.height);\n\n            this.position.x = position.x;\n            this.position.y = position.y;\n            this.size.x = size.x;\n            this.size.y = size.y;\n        }\n\n        if (editMode.selectedMarkup !== this && !editMode.textInputHelper.firstEdit) {\n            editMode.textInputHelper.textArea.value = text;\n            editMode.textInputHelper.setStyle(style);\n        }\n\n        var markup = this.createSvgElement('text');\n        markup.setAttribute('id', 'markup');\n        markup.setAttribute('alignment-baseline', 'middle');\n\n        this.textShape.childNodes[0].removeChild(this.textShape.markup);\n        this.textShape.childNodes[0].appendChild(markup);\n        this.textShape.markup = markup;\n\n        // For each line, create a tspan, add as child and offset it vertically.\n        var yOffset = this.getLineHeight() * FONT_SIZE_SCALE * (this.lineHeight / 100);\n\n        var padding = (this.getLineHeight() * FONT_SIZE_SCALE) / 2;\n        var dx = padding;\n        var dy = padding;\n\n        this.currentTextLines.forEach(function(line){\n\n            var tspan = this.createSvgElement('tspan');\n\n            tspan.setAttribute('x', dx);\n            tspan.setAttribute('y', dy);\n            tspan.textContent = line;\n\n            markup.appendChild(tspan);\n            dy += yOffset;\n        }.bind(this));\n    };\n\n    proto.setIsFilledFrameUsed = function(isFrameUsed) {\n\n        this.isFrameUsed = isFrameUsed;\n\n        var hasRectShape = this.rectShape.parentNode === this.shape;\n        if (isFrameUsed && !hasRectShape) {\n            this.shape.insertBefore(this.rectShape, this.shape.firstChild);\n        } else if (!isFrameUsed && hasRectShape) {\n            this.shape.removeChild(this.rectShape);\n        }\n    };\n\n    proto.setIsFilledFrameVisible = function(isVisible) {\n\n        this.rectShape.markup.style.display = (isVisible && this.isFrameUsed) ? 'block' : 'none';\n    };\n\n    proto.setIsShapeVisible = function(isVisible) {\n\n        this.shape.style.display = (isVisible) ? 'block' : 'none';\n    };\n\n    proto.setMetadata = function() {\n        var metadata = cloneStyle(this.style);\n\n        metadata.type = this.type;\n        metadata.position = [this.position.x, this.position.y].join(\" \");\n        metadata.size = [this.size.x, this.size.y].join(\" \");\n        metadata.text = String(this.currentText);\n        metadata.isframeused = this.isFrameUsed ? 1 : 0;\n\n        return this.addMarkupMetadata(this.shape, metadata);\n    };\n\n    /**\n     * Helper method that returns the font size in client space coords.\n     * @returns {Number}\n     */\n    proto.getClientFontSize = function() {\n\n        return this.editor.sizeFromMarkupsToClient(0, this.style['font-size']).y;\n    };\n\n    proto.getLineHeight = function() {\n        return this.style['font-size'];\n    };\n\n    proto.getTextContainerTransform = function() {\n\n        var x = this.position.x - this.size.x * 0.5;\n        var y = this.position.y + this.size.y * 0.5;\n\n        return [\n            'translate(', x, ',', y, ')',\n            'rotate(', radiansToDegrees(-this.rotation), ')',\n            'scale(1,-1)'\n        ].join(' ');\n    };\n\n    proto.getTextTransform = function() {\n\n        var lineHeight = this.getLineHeight();\n\n        var x = this.position.x - this.size.x * 0.5;\n        var y = this.position.y + this.size.y * 0.5 - lineHeight;\n\n        return [\n            'translate(', x, ',', y, ')',\n            'rotate(', radiansToDegrees(-this.rotation), ')',\n            'scale(' + (1/FONT_SIZE_SCALE) + ',' + (-1/FONT_SIZE_SCALE) + ')'\n        ].join(' ');\n    };\n\n    proto.cloneShape = function(clone) {\n\n        clone.textShape = createMarkupTextSvg();\n        clone.rectShape = createMarkupPathSvg();\n        clone.shape = createMarkupGroupSvg([clone.rectShape, clone.textShape]);\n        clone.bindDomEvents();\n    };\n\n    proto.getPath = function() {\n        var strokeWidth = this.style['stroke-width'];\n\n        var w = this.size.x + strokeWidth;\n        var h = this.size.y + strokeWidth;\n        var x = -w * 0.5;\n        var y = -h * 0.5;\n\n        var path = [];\n        createRectanglePath(x, y, w, h, false, path);\n\n        return path;\n    };\n\n    proto.getBoundingRect = function() {\n\n        var pos = this.getClientPosition();\n        var size = this.getClientSize();\n        var strokeWidth = this.style['stroke-width'];\n        var width = this.editor.sizeFromMarkupsToClient(strokeWidth, 0).x;\n        var margin = width + EDIT_FRAME_DEFAULT_MARGIN;\n\n        return {\n            x: pos.x - size.x / 2,\n            y: pos.y - size.y / 2,\n            width: size.x,\n            height: size.y,\n            margin: margin\n        }\n    };\n","'use strict';\n\nimport { EditAction } from './EditAction'\nimport { MarkupCallout } from '../MarkupCallout'\nimport { cloneStyle } from '../StyleUtils'\n\n    /**\n     *\n     * @param editor\n     * @param id\n     * @param position\n     * @param size\n     * @param text\n     * @param style\n     * @constructor\n     */\n    export function CreateCallout(editor, id, position, size, text, style, isFrameUsed) {\n\n        EditAction.call(this, editor, 'CREATE-CALLOUT', id);\n\n        this.text = text;\n        this.position = {x: position.x, y: position.y};\n        this.size = {x: size.x, y: size.y};\n        this.style = cloneStyle(style);\n        this.isFrameUsed = isFrameUsed;\n    }\n\n    CreateCallout.prototype = Object.create(EditAction.prototype);\n    CreateCallout.prototype.constructor = CreateCallout;\n\n    var proto = CreateCallout.prototype;\n\n    proto.redo = function () {\n\n        var editor = this.editor;\n        var position = this.position;\n        var size = this.size;\n\n        var callout = new MarkupCallout(this.targetId, editor, size);\n\n        editor.addMarkup(callout);\n\n        callout.setIsFilledFrameUsed(this.isFrameUsed);\n        callout.setText(this.text);\n        callout.setSize(position, size.x, size.y);\n        callout.setStyle(this.style);\n    };\n\n    proto.undo = function () {\n\n        var markup = this.editor.getMarkup(this.targetId);\n        if (markup) {\n            this.editor.removeMarkup(markup);\n            markup.destroy();\n        }\n    };\n\n","'use strict';\n\nimport { EditAction } from './EditAction'\nimport { CreateCallout } from './CreateCallout'\n\n    /**\n     *\n     * @param editor\n     * @param text\n     * @constructor\n     */\n    export function DeleteCallout(editor, callout) {\n\n        EditAction.call(this, editor, 'DELETE-CALLOUT', callout.id);\n\n        var position = {x: callout.position.x, y: callout.position.y};\n        var size = {x: callout.size.x, y: callout.size.y};\n\n        this.createCallout = new CreateCallout(\n            editor,\n            callout.id,\n            position,\n            size,\n            callout.getText(),\n            callout.getStyle(),\n            callout.isFrameUsed);\n    }\n\n    DeleteCallout.prototype = Object.create(EditAction.prototype);\n    DeleteCallout.prototype.constructor = DeleteCallout;\n\n    var proto = DeleteCallout.prototype;\n\n    proto.redo = function() {\n\n        this.createCallout.undo();\n    };\n\n    proto.undo = function() {\n\n        this.createCallout.redo();\n    };\n\n","'use strict';\n\nimport { EditAction } from './EditAction'\n\n    /**\n     *\n     * @param editor\n     * @param markup\n     * @param position\n     * @param size\n     * @param text\n     * @constructor\n     */\n    export function SetText(editor, markup, position, size, text) {\n\n        EditAction.call(this, editor, 'SET-TEXT', markup.id);\n\n        this.newPosition = {x: position.x, y: position.y};\n        this.oldPosition = {x: markup.position.x, y: markup.position.y};\n        this.newSize = {x: size.x, y: size.y};\n        this.oldSize = {x: markup.size.x, y: markup.size.y};\n        this.newText = text;\n        this.oldText = markup.getText();\n    }\n\n    SetText.prototype = Object.create(EditAction.prototype);\n    SetText.prototype.constructor = SetText;\n\n    var proto = SetText.prototype;\n\n    proto.redo = function() {\n\n        var text = this.editor.getMarkup(this.targetId);\n        text && text.set(this.newPosition, this.newSize, this.newText);\n    };\n\n    proto.undo = function() {\n\n        var text = this.editor.getMarkup(this.targetId);\n        text && text.set(this.oldPosition, this.oldSize, this.oldText);\n    };\n","'use strict';\n\nimport { EditMode } from './EditMode'\nimport { DeleteText } from '../edit-actions/DeleteText'\nimport { DeleteCallout } from '../edit-actions/DeleteCallout'\nimport { CreateText } from '../edit-actions/CreateText'\nimport { SetText } from '../edit-actions/SetText'\nimport { SetSize } from '../edit-actions/SetSize'\nimport { SetStyle } from '../edit-actions/SetStyle'\nimport * as MarkupTypes from '../MarkupTypes'\nimport * as MarkupEvents from '../MarkupEvents'\nimport { EditorTextInput } from './EditorTextInput'\n\n\n    /**\n     *\n     * @param editor\n     * @constructor\n     */\n    export function EditModeText(editor) {\n\n        var styleAttributes = [\n            'font-size',\n            'stroke-color',\n            'stroke-opacity',\n            'fill-color',\n            'fill-opacity',\n            'font-family',\n            'font-style',\n            'font-weight'\n        ];\n        EditMode.call(this, editor, MarkupTypes.MARKUP_TYPE_TEXT, styleAttributes);\n\n        var helper = new EditorTextInput(this.viewer.container, this.editor, false, 'Text', 260);\n        helper.addEventListener(helper.EVENT_TEXT_CHANGE, this.onHelperTextChange.bind(this), false);\n        helper.addEventListener(helper.EVENT_TEXT_SET_ACTIVE, this.onHelperSetActive.bind(this), false);\n        helper.addEventListener(helper.EVENT_TEXT_SET_INACTIVE, this.onHelperSetActive.bind(this), false);\n\n        this.textInputHelper = helper;\n        this.onHistoryChangeBinded = this.onHistoryChange.bind(this);\n        this.minSize = 0; // No need to size it initially\n        this.creationMethod = this.CREATION_METHOD_CLICK;\n    }\n\n    EditModeText.prototype = Object.create(EditMode.prototype);\n    EditModeText.prototype.constructor = EditModeText;\n\n    var proto = EditModeText.prototype;\n\n    proto.deleteMarkup = function(markup, cantUndo) {\n\n        markup = markup || this.selectedMarkup;\n        if (markup && markup.type == this.type) {\n            var deleteText = new DeleteText(this.editor, markup);\n            deleteText.addToHistory = !cantUndo;\n            deleteText.execute();\n            return true;\n        }\n        return false;\n    };\n\n    /**\n     *\n     * @param style\n     */\n    proto.setStyle = function(style) {\n\n        if (this.textInputHelper && this.textInputHelper.isActive()) {\n\n            this.textInputHelper.setStyle(style);\n        } else {\n            EditMode.prototype.setStyle.call(this, style);\n        }\n    };\n\n    proto.notifyAllowNavigation = function(allows) {\n\n        if (allows && this.textInputHelper && this.textInputHelper.isActive()) {\n            this.textInputHelper.acceptAndExit();\n        }\n    };\n\n    proto.destroy = function() {\n\n        if (this.textInputHelper) {\n            if (this.textInputHelper.isActive()) {\n                this.textInputHelper.acceptAndExit();\n            }\n            this.textInputHelper.destroy();\n            this.textInputHelper = null;\n        }\n        EditMode.prototype.destroy.call(this);\n    };\n\n    /**\n     * Handler to mouse down events, used to start markups creation.\n     */\n    proto.onMouseDown = function() {\n\n        if (this.textInputHelper && this.textInputHelper.isActive()) {\n            this.textInputHelper.acceptAndExit();\n            return;\n        }\n\n        if (this.selectedMarkup) {\n            return;\n        }\n\n        var editor = this.editor;\n        var mousePosition = editor.getMousePosition();\n        var clientFontSize = editor.sizeFromMarkupsToClient(0, this.style['font-size']).y;\n        var initialWidth = clientFontSize * 15; // Find better way to initialize size.\n        var initialHeight = clientFontSize * 1;\n\n        // Center position.\n        var size = this.size = editor.sizeFromClientToMarkups(initialWidth, initialHeight);\n        var position = editor.positionFromClientToMarkups(\n            mousePosition.x + (initialWidth * 0.5),\n            mousePosition.y + (initialHeight * 0.5));\n\n        this.creationBegin();\n        editor.beginActionGroup();\n\n        // Given the initial width and font size, we assume that the text fits in one line.\n        var createText = new CreateText(\n            editor,\n            editor.getId(),\n            position,\n            size,\n            '',\n            this.style);\n\n        createText.execute();\n        this.creationEnd();\n\n        this.selectedMarkup = editor.getMarkup(createText.targetId);\n        this.textInputHelper && this.textInputHelper.setActive(this.selectedMarkup, true);\n        this.editor.actionManager.addEventListener(MarkupEvents.EVENT_HISTORY_CHANGED, this.onHistoryChangeBinded);\n    };\n\n    proto.updateTextBoxStyle = function() {\n        if (this.isTextInputHelperActive()) {\n            this.textInputHelper.onCameraChanged();\n        }\n    };\n\n    proto.onMouseUp = function(event) {\n\n    };\n\n    proto.onMouseDoubleClick = function(markup) {\n\n        if (markup === this.selectedMarkup) {\n            this.editor.selectMarkup(markup);\n            this.editor.editFrame.setMarkup(markup);\n            this.textInputHelper && this.textInputHelper.setActive(markup, false);\n        }\n    };\n\n    proto.onHelperSetActive = function(event) {\n        var databag = event.data;\n        var markup = databag.markup;\n        if (markup) {\n            markup.setIsHelperTextActive(databag.isActive);\n            markup.setIsShapeVisible(!databag.isActive);\n        }\n    };\n\n    proto.onHelperTextChange = function(event) {\n\n        var dataBag = event.data;\n        var textMarkup = dataBag.markup;\n        var textStyle = dataBag.style;\n        var curSelection = this.selectedMarkup;\n\n        this.editor.actionManager.removeEventListener(MarkupEvents.EVENT_HISTORY_CHANGED, this.onHistoryChangeBinded);\n\n        // Deal with edge case first: Creating a Label without text\n        if (dataBag.newText === '') {\n            this.editor.cancelActionGroup();\n\n            var deleteCallout = new DeleteCallout(this.editor, textMarkup);\n            deleteCallout.execute();\n\n            if (textMarkup !== curSelection) {\n                this.editor.selectMarkup(curSelection);\n            }\n\n            return;\n        }\n\n        // When the text is created for the first time, an action group\n        // is already created and it includes the CreateText action.\n        // Thus, no need to begin another action group.\n        if (!dataBag.firstEdit) {\n            this.editor.beginActionGroup();\n        }\n\n        // Size change action //\n        var position = this.editor.positionFromClientToMarkups(\n            dataBag.newPos.x, dataBag.newPos.y\n        );\n        var size = this.editor.sizeFromClientToMarkups(\n            dataBag.width, dataBag.height\n        );\n        var setSize = new SetSize(\n            this.editor,\n            textMarkup,\n            position,\n            size.x,\n            size.y);\n        setSize.execute();\n\n        // Text change action //\n        var setText = new SetText(\n            this.editor,\n            textMarkup,\n            textMarkup.position,\n            textMarkup.size,\n            dataBag.newText);\n        setText.execute();\n\n        var setStyle = new SetStyle(\n            this.editor,\n            textMarkup,\n            textStyle\n        );\n        setStyle.execute();\n\n        // However, we do need to close the action group at this point. For both cases.\n        this.editor.closeActionGroup();\n        this.editor.selectMarkup(curSelection);\n    };\n\n    /**\n     * We want to make sure that the Input Helper gets removed from the screen\n     * whenever the user attempts to perform an undo or redo action.\n     * @param {Event} event\n     * @private\n     */\n    proto.onHistoryChange = function(event) {\n\n        if (this.textInputHelper && this.textInputHelper.isActive()) {\n            this.editor.actionManager.removeEventListener(MarkupEvents.EVENT_HISTORY_CHANGED, this.onHistoryChangeBinded);\n            this.textInputHelper.setInactive();\n        }\n    };\n\n    /**\n     * Notify the markup that the displayed markups are being saved so edit mode can finish current editions.\n     */\n    proto.onSave = function() {\n\n        EditMode.prototype.onSave.call(this);\n\n        // Close input helper if it's open.\n        if (this.textInputHelper && this.textInputHelper.isActive()) {\n            var firstEdit = this.textInputHelper.firstEdit;\n\n            this.editor.actionManager.removeEventListener(MarkupEvents.EVENT_HISTORY_CHANGED, this.onHistoryChangeBinded);\n            this.textInputHelper.setInactive();\n\n            // Close action group if open (first edit).s\n            if (firstEdit) {\n                this.editor.cancelActionGroup();\n            }\n\n            this.editor.selectMarkup(null);\n            this.selectedMarkup = null;\n        }\n    };\n\n    proto.updateTextBoxStyle = function() {\n        if (this.isTextInputHelperActive()) {\n            this.textInputHelper.onCameraChanged();\n        }\n    };\n\n","'use strict';\n\nimport { Markup } from './Markup'\nimport * as MarkupTypes from './MarkupTypes'\nimport { composeRGBAString, setAttributeToMarkupSvg, addMarkupMetadata, radiansToDegrees,\n    createMarkupTextSvg, setMarkupTextSvgTransform, updateMarkupTextSvgBackground,\n    updateMarkupTextSvgClipper, updateMarkupTextSvgHitarea, createSvgElement } from './MarkupsCoreUtils'\nimport { cloneStyle, isStyleEqual, copyStyle } from './StyleUtils'\nimport { EditModeText } from './edit-modes/EditModeText'\n\n    // LMV ViewerLMV-2170 [Markup] [PDF] Text markup missing/cutoff for normal sized text.\n    // If the font size of an SVG text is too small, the text is not rendered independently of its final screen size.\n    // To solve the issue we multiply font size by 100 and scale down the text in its transform.\n    var FONT_SIZE_SCALE = 100;\n\n    var STARTING_WIDTH_FACTOR = 6;\n\n    /**\n     * Text Markup.\n     * @constructor\n     */\n    export function MarkupText(id, editor, size) {\n\n        var styleAttributes = [\n            'font-size',\n            'stroke-color',\n            'stroke-opacity',\n            'fill-color',\n            'fill-opacity',\n            'font-family',\n            'font-style',\n            'font-weight'\n        ];\n\n        Markup.call(this, id, editor, styleAttributes);\n\n        // Bind to this to pass globalManager\n        this.createSvgElement = createSvgElement.bind(this);\n        this.addMarkupMetadata = addMarkupMetadata.bind(this);\n\n        this.type = MarkupTypes.MARKUP_TYPE_TEXT;\n        this.shape = createMarkupTextSvg();\n        this.constraintRotation = true;\n        this.constraintHeight = true;\n        this.constraintWidth = false;\n        this.size.x = size.x;\n        this.size.y = size.y;\n        this.currentText = \"\";\n        this.currentTextLines = [\"\"];\n        this.textDirty = true;\n        this.textSize = {x: 0, y: 0};\n        this.prevHighlight = false;\n        this.isHelperTextActive = false;\n\n        // Note: We could have this property be a style property.\n        // However, there is no need for this property to be exposed to the user for alteration\n        // This value is a percentage of the font size used to offset vertically 2 text lines\n        // of the same paragraph.\n        // Notice that this value is used by EditorTextInput.js\n        this.lineHeight = 130;\n\n        this.minWidth = this.getClientFontSize() * STARTING_WIDTH_FACTOR;\n\n        this.bindDomEvents();\n    }\n\n    MarkupText.prototype = Object.create(Markup.prototype);\n    MarkupText.prototype.constructor = MarkupText;\n\n    var proto = MarkupText.prototype;\n\n    proto.getEditMode = function() {\n\n        return new EditModeText(this.editor);\n    };\n\n    /**\n     *\n     * @param {String} position\n     * @param {String} size\n     * @param {String} textString\n     */\n    proto.set = function(position, size, textString) {\n\n        this.position.x = position.x;\n        this.position.y = position.y;\n        this.size.x = size.x;\n        this.size.y = size.y;\n\n        this.setText(textString);\n    };\n\n    proto.setSize = function(position, width, height) {\n\n        this.position.x = position.x;\n        this.position.y = position.y;\n        this.size.x = width;\n        this.size.y = height;\n\n        var sizeUpdateRequired = true;\n\n        if (this.isHelperTextActive) {\n            this.updateTextBoxStyle();\n        } else {\n            this.updateStyle(sizeUpdateRequired);\n        }\n    };\n\n    proto.setPosition = function(x, y) {\n\n        this.position.x = x;\n        this.position.y = y;\n\n        if (this.isHelperTextActive) {\n            this.updateTextBoxStyle();\n        } else {\n            this.updateStyle();\n        }\n    };\n\n    proto.setStyle = function(style) {\n\n        var stylesEqual = isStyleEqual(style, this.style);\n\n        if (!stylesEqual) {\n            copyStyle(style, this.style);\n        }\n\n        this.updateStyle(!stylesEqual);\n    };\n\n    /**\n     *\n     * @param {String} text\n     */\n    proto.setText = function(text) {\n\n        this.currentText = text;\n    };\n\n    /**\n     * Returns the raw string value\n     * @returns {String}\n     */\n    proto.getText = function() {\n\n        return this.currentText;\n    };\n\n    /**\n     * Returns a shallow copy of the text lines used for rendering SVG text\n     * @returns {Array.<String>}\n     */\n    proto.getTextLines = function() {\n\n        return this.currentTextLines.concat();\n    };\n\n    proto.highlightChanged = function() {\n\n        if (this.highlighted && this.highlighted !== this.prevHighlight) {\n            var shape = this.shape;\n            var strokeColor = this.highlighted ? this.highlightColor : composeRGBAString(style['stroke-color'], style['stroke-opacity']);\n            setAttributeToMarkupSvg(shape, 'fill', strokeColor);\n\n            this.prevHighlight = true;\n            return false;\n        }\n\n        return true;\n    };\n\n    proto.updateTextBoxStyle = function() {\n        var editMode = this.editor.duringEditMode && this.editor.editMode;\n\n        if (!editMode || editMode.type !== this.type) {\n            editMode = this.getEditMode();\n        }\n\n        editMode.updateTextBoxStyle();\n    };\n\n    proto.setIsHelperTextActive = function(isActive) {\n        this.isHelperTextActive = isActive;\n    };\n\n    /**\n     * Applies data values into DOM element style/attribute(s)\n     *\n     */\n    proto.updateStyle = function(sizeUpdateRequired) {\n\n        if (this.highlightChanged()) {\n            this.prevHighlight = false;\n            var style = this.style;\n            var shape = this.shape;\n            var fontSize = this.style['font-size'];\n            var fontFamily = this.style['font-family'];\n            var fontWeight = this.style['font-weight'];\n            var fontStyle = this.style['font-style'];\n            var strokeColor = this.highlighted ? this.highlightColor : composeRGBAString(style['stroke-color'], style['stroke-opacity']);\n            var fillColor = composeRGBAString(style['fill-color'], style['fill-opacity']);\n\n            // FONT_SIZE_SCALE is used to scale up fontSize, but it is only needed in cases where the font size is too small\n            FONT_SIZE_SCALE = (fontSize > 1) ? 1 : 100;\n\n            this.rebuildTextSvg(sizeUpdateRequired);\n\n            setAttributeToMarkupSvg(shape, 'font-family', fontFamily);\n            setAttributeToMarkupSvg(shape, 'font-size', fontSize * FONT_SIZE_SCALE);\n            setAttributeToMarkupSvg(shape, 'fill', strokeColor);\n            setAttributeToMarkupSvg(shape, 'font-weight', fontWeight);\n            setAttributeToMarkupSvg(shape, 'font-style', fontStyle);\n\n            var editor = this.editor;\n            var transform = this.getTransform();\n            var textTransform = this.getTextTransform();\n\n            setMarkupTextSvgTransform(shape, transform, textTransform);\n            updateMarkupTextSvgBackground(shape, this.size.x, this.size.y, fillColor);\n            updateMarkupTextSvgClipper(shape, this.size.x, this.size.y);\n            updateMarkupTextSvgHitarea(shape, this.size.x, this.size.y, editor);\n        }\n    };\n\n    /**\n     * Re-creates SVG tags that render SVG text.\n     * Each line is placed around tspan tags which are vertically offset to each other.\n     */\n    proto.rebuildTextSvg = function(sizeUpdateRequired) {\n\n        // TODO: Remove the need to get text values from an object in edit mode, should be a function.\n        // editMode needs to be set to load markups in view mode\n        var editMode = this.editor.duringEditMode && this.editor.editMode;\n\n        if (!editMode || editMode.type !== this.type) {\n            editMode = this.getEditMode();\n            editMode.textInputHelper.textArea.value = this.currentText;\n            editMode.textInputHelper.setStyle(this.style);\n        }\n\n        if (editMode.textInputHelper.textMarkup && editMode.textInputHelper.textMarkup !== this) {\n            return;\n        }\n\n        var style = cloneStyle(editMode.textInputHelper.style);\n        var text = editMode.textInputHelper.textArea.value;\n\n        var textHelperValues = editMode.textInputHelper.getTextValuesForMarkup(this, sizeUpdateRequired);\n\n        this.currentTextLines = textHelperValues.textValues.lines;\n\n        if (textHelperValues.newPos) {\n            var position = this.editor.positionFromClientToMarkups(textHelperValues.newPos.x, textHelperValues.newPos.y);\n            var size = this.editor.sizeFromClientToMarkups(textHelperValues.width, textHelperValues.height);\n\n            this.position.x = position.x;\n            this.position.y = position.y;\n            this.size.x = size.x;\n            this.size.y = size.y;\n        }\n\n        if (editMode.selectedMarkup !== this && !editMode.textInputHelper.firstEdit) {\n            editMode.textInputHelper.textArea.value = text;\n            editMode.textInputHelper.setStyle(style);\n        }\n\n        var markup = this.createSvgElement('text');\n        markup.setAttribute('id', 'markup');\n        markup.setAttribute('alignment-baseline', 'middle');\n\n        this.shape.childNodes[0].removeChild(this.shape.markup);\n        this.shape.childNodes[0].appendChild(markup);\n        this.shape.markup = markup;\n\n        // For each line, create a tspan, add as child and offset it vertically.\n        var yOffset = this.getLineHeight() * FONT_SIZE_SCALE * (this.lineHeight / 100);\n\n        var padding = (this.getLineHeight() * FONT_SIZE_SCALE) / 2;\n        var dx = padding;\n        var dy = padding;\n\n        this.currentTextLines.forEach(function(line){\n\n            var tspan = this.createSvgElement('tspan');\n\n            tspan.setAttribute('x', dx);\n            tspan.setAttribute('y', dy);\n            tspan.textContent = line;\n\n            markup.appendChild(tspan);\n            dy += yOffset;\n        }.bind(this));\n    };\n\n    proto.setIsShapeVisible = function(isVisible) {\n\n        this.shape.style.display = (isVisible) ? 'block' : 'none';\n    };\n\n    proto.setMetadata = function() {\n\n        var metadata = cloneStyle(this.style);\n\n        metadata.type = this.type;\n        metadata.position = [this.position.x, this.position.y].join(\" \");\n        metadata.size = [this.size.x, this.size.y].join(\" \");\n        metadata.text = String(this.currentText);\n\n        return this.addMarkupMetadata(this.shape, metadata);\n    };\n\n    /**\n     * Helper method that returns the font size in client space coords.\n     * @returns {Number}\n     */\n    proto.getClientFontSize = function() {\n\n        return this.editor.sizeFromMarkupsToClient(0, this.style['font-size']).y;\n    };\n\n    proto.getLineHeight = function() {\n\n        return this.style['font-size'];\n    };\n\n    proto.getTransform = function() {\n\n        var x = this.position.x - this.size.x * 0.5;\n        var y = this.position.y + this.size.y * 0.5;\n\n        return [\n            'translate(', x, ',', y, ')',\n            'rotate(', radiansToDegrees(-this.rotation), ')',\n            'scale(1,-1)'\n        ].join(' ');\n    };\n\n    proto.getTextTransform = function() {\n\n        var lineHeight = this.getLineHeight();\n\n        var x = this.position.x - this.size.x * 0.5;\n        var y = this.position.y + this.size.y * 0.5 - lineHeight;\n\n        return [\n            'translate(', x, ',', y, ')',\n            'rotate(', radiansToDegrees(-this.rotation), ')',\n            'scale(' + (1/FONT_SIZE_SCALE) + ',' + (-1/FONT_SIZE_SCALE) + ')'\n        ].join(' ');\n    };\n\n    proto.cloneShape = function(clone) {\n\n        clone.shape = createMarkupTextSvg();\n        clone.bindDomEvents();\n    };\n\n    proto.getBoundingRect = function() {\n        var pos = this.getClientPosition();\n        var size = this.getClientSize();\n        return {\n            x: pos.x - size.x / 2,\n            y: pos.y - size.y / 2,\n            width: size.x,\n            height: size.y\n        }\n    };\n","'use strict';\n\nimport { EditAction } from './EditAction'\nimport { MarkupText } from '../MarkupText'\nimport { cloneStyle } from '../StyleUtils'\n\n    /**\n     *\n     * @param editor\n     * @param id\n     * @param position\n     * @param size\n     * @param text\n     * @param style\n     * @constructor\n     */\n    export function CreateText(editor, id, position, size, text, style ) {\n\n        EditAction.call(this, editor, 'CREATE-TEXT', id);\n\n        this.text = text;\n        this.position = {x: position.x, y: position.y};\n        this.size = {x: size.x, y: size.y};\n        this.style = cloneStyle(style);\n    }\n\n    CreateText.prototype = Object.create(EditAction.prototype);\n    CreateText.prototype.constructor = CreateText;\n\n    var proto = CreateText.prototype;\n\n    proto.redo = function () {\n\n        var editor = this.editor;\n        var position = this.position;\n        var size = this.size;\n\n        var text = new MarkupText(this.targetId, editor, size);\n\n        editor.addMarkup(text);\n\n        text.set(position, size, this.text);\n        text.setStyle(this.style);\n    };\n\n    proto.undo = function () {\n\n        var markup = this.editor.getMarkup(this.targetId);\n        if (markup) {\n            this.editor.removeMarkup(markup);\n            markup.destroy();\n        }\n    };\n\n\n","'use strict';\n\nimport { EditAction } from './EditAction'\nimport { CreateCircle } from './CreateCircle'\n\n    /**\n     * Markup delete circle action.\n     * \n     * Implements an {@link Autodesk.Viewing.Extensions.Markups.Core.EditAction|EditAction}\n     * for deleting a Circle {@link Autodesk.Viewing.Extensions.Markups.Core.Markup|Markup}.\n     * Included in documentation as an example of how to create\n     * a specific EditAction that deals with Markup deletion.\n     * Developers are encourage to look into this class's source code and copy\n     * as much code as they need. Find link to source code below.\n     *\n     * @tutorial feature_markup\n     * @constructor\n     * @memberof Autodesk.Viewing.Extensions.Markups.Core\n     * @extends Autodesk.Viewing.Extensions.Markups.Core.EditAction\n     *\n     * @param editor\n     * @param circle\n     */\n    export function DeleteCircle(editor, circle) {\n\n        EditAction.call(this, editor, 'DELETE-CIRCLE', circle.id);\n        this.createCircle = new CreateCircle(\n            editor,\n            circle.id,\n            circle.position,\n            circle.size,\n            circle.rotation,\n            circle.getStyle());\n    }\n\n    DeleteCircle.prototype = Object.create(EditAction.prototype);\n    DeleteCircle.prototype.constructor = DeleteCircle;\n\n    var proto = DeleteCircle.prototype;\n\n    proto.redo = function() {\n\n        this.createCircle.undo();\n    };\n\n    proto.undo = function() {\n\n        this.createCircle.redo();\n    };\n\n\n","'use strict';\n\nimport { EditAction } from './EditAction'\n\n    /**\n     * Markup set circle action.\n     *\n     * Implements an {@link Autodesk.Viewing.Extensions.Markups.Core.EditAction|EditAction}\n     * for editing properties of a Circle {@link Autodesk.Viewing.Extensions.Markups.Core.Markup|Markup}.\n     * Included in documentation as an example of how to create\n     * a specific EditAction that deals with Markup edition.\n     * Developers are encourage to look into this class's source code and copy\n     * as much code as they need. Find link to source code below.\n     *\n     * @tutorial feature_markup\n     * @constructor\n     * @memberof Autodesk.Viewing.Extensions.Markups.Core\n     * @extends Autodesk.Viewing.Extensions.Markups.Core.EditAction\n     *\n     * @param editor\n     * @param circle\n     * @param position\n     * @param size\n     */\n    export function SetCircle(editor, circle, position, size) {\n\n        EditAction.call(this, editor, 'SET-CIRCLE', circle.id);\n\n        this.newPosition = {x: position.x, y: position.y};\n        this.newSize = {x: size.x, y: size.y};\n        this.oldPosition = {x: circle.position.x, y: circle.position.y};\n        this.oldSize = {x: circle.size.x, y: circle.size.y};\n    }\n\n    SetCircle.prototype = Object.create(EditAction.prototype);\n    SetCircle.prototype.constructor = SetCircle;\n\n    var proto = SetCircle.prototype;\n\n    proto.redo = function() {\n\n        this.applyState(this.targetId, this.newPosition, this.newSize);\n    };\n\n    proto.undo = function() {\n\n        this.applyState(this.targetId, this.oldPosition, this.oldSize);\n    };\n\n    proto.merge = function(action) {\n\n        if (this.targetId === action.targetId &&\n            this.type === action.type) {\n\n            this.newPosition = action.newPosition;\n            this.newSize = action.newSize;\n            return true;\n        }\n        return false;\n    };\n\n    /**\n     *\n     * @private\n     */\n    proto.applyState = function(targetId, position, size) {\n\n        var circle = this.editor.getMarkup(targetId);\n        if(!circle) {\n            return;\n        }\n\n        // Different stroke widths make positions differ at sub-pixel level.\n        var epsilon = 0.0001;\n\n        if (Math.abs(circle.position.x - position.x) > epsilon || Math.abs(circle.size.y - size.y) > epsilon ||\n            Math.abs(circle.position.y - position.y) > epsilon || Math.abs(circle.size.y - size.y) > epsilon) {\n\n            circle.set(position, size);\n        }\n    };\n\n    /**\n     * @returns {boolean}\n     */\n    proto.isIdentity = function() {\n\n        return (\n            this.newPosition.x === this.oldPosition.x &&\n            this.newPosition.y === this.oldPosition.y &&\n            this.newSize.x === this.oldSize.x &&\n            this.newSize.y === this.oldSize.y);\n    };\n\n","'use strict';\n\nimport { EditMode } from './EditMode'\nimport { DeleteCircle } from '../edit-actions/DeleteCircle'\nimport { CreateCircle } from '../edit-actions/CreateCircle'\nimport { SetCircle } from '../edit-actions/SetCircle'\nimport * as MarkupTypes from '../MarkupTypes'\n\n    /**\n     * Markup circle edit mode.\n     *\n     * Implements a Circle {@link Autodesk.Viewing.Extensions.Markups.Core.EditMode|EditMode}.\n     * Included in documentation as an example of how to create\n     * an EditMode for a specific markup type. Developers are encourage to look into this class's source code and copy\n     * as much code as they need. Find link to source code below.\n     *\n     * @tutorial feature_markup\n     * @constructor\n     * @memberof Autodesk.Viewing.Extensions.Markups.Core\n     * @extends Autodesk.Viewing.Extensions.Markups.Core.EditMode\n     * @param {Autodesk.Viewing.Extensions.Markups.Core.MarkupsCore} editor\n     */\n    export function EditModeCircle(editor) {\n\n        var styleAttributes = ['stroke-width', 'stroke-color', 'stroke-opacity', 'fill-color', 'fill-opacity'];\n        EditMode.call(this, editor, MarkupTypes.MARKUP_TYPE_CIRCLE, styleAttributes);\n    }\n\n    EditModeCircle.prototype = Object.create(EditMode.prototype);\n    EditModeCircle.prototype.constructor = EditModeCircle;\n\n    var proto = EditModeCircle.prototype;\n\n    proto.deleteMarkup = function(markup, cantUndo) {\n\n        markup = markup || this.selectedMarkup;\n        if (markup && markup.type == this.type) {\n            var deleteCircle = new DeleteCircle(this.editor, markup);\n            deleteCircle.addToHistory = !cantUndo;\n            deleteCircle.execute();\n            return true;\n        }\n        return false;\n    };\n\n    /**\n     * Handler to mouse move events, used to create markups.\n     * @param {MouseEvent} event Mouse event.\n     * @private\n     */\n    proto.onMouseMove = function(event) {\n\n        EditMode.prototype.onMouseMove.call( this, event );\n\n        var selectedMarkup = this.selectedMarkup;\n        if(!selectedMarkup || !this.creating) {\n            return;\n        }\n\n        var editor = this.editor;\n\n        var final = this.getFinalMouseDraggingPosition();\n        final = editor.clientToMarkups(final.x, final.y);\n\n        var sizeX = Math.abs(this.firstPosition.x - final.x);\n        var sizeY = Math.abs(this.firstPosition.y - final.y);\n\n        var position = {x: (this.firstPosition.x + final.x) * 0.5, y: (this.firstPosition.y + final.y) * 0.5};\n        var size = this.size = {x: sizeX, y: sizeY};\n\n        var setCircle = new SetCircle(\n            editor,\n            selectedMarkup,\n            position,\n            size);\n\n        setCircle.execute();\n    };\n\n    /**\n     * Handler to mouse down events, used to start markups creation.\n     * @private\n     */\n    proto.onMouseDown = function() {\n\n        EditMode.prototype.onMouseDown.call(this);\n\n        if (this.selectedMarkup) {\n            return;\n        }\n\n        var editor = this.editor;\n        var mousePosition = editor.getMousePosition();\n\n        this.initialX = mousePosition.x;\n        this.initialY = mousePosition.y;\n\n        // Calculate center and size.\n        var position = this.firstPosition = editor.clientToMarkups(this.initialX, this.initialY);\n        var size = this.size = editor.sizeFromClientToMarkups(1, 1);\n\n        // Create circle.\n        editor.beginActionGroup();\n\n        var markupId = editor.getId();\n        var create = new CreateCircle(\n            editor,\n            markupId,\n            position,\n            size,\n            0,\n            this.style);\n        create.execute();\n\n        this.selectedMarkup = editor.getMarkup(markupId);\n        this.creationBegin();\n    };\n","'use strict';\n\nimport { Markup } from './Markup'\nimport * as MarkupTypes from './MarkupTypes'\nimport { createMarkupPathSvg, composeRGBAString, setAttributeToMarkupSvg, \n        updateMarkupPathSvgHitarea, addMarkupMetadata, createEllipsePath } from './MarkupsCoreUtils'\nimport { cloneStyle } from './StyleUtils'\nimport { EditModeCircle } from './edit-modes/EditModeCircle'\n\n    /**\n     *\n     * @param id\n     * @param editor\n     * @constructor\n     */\n    export function MarkupCircle(id, editor) {\n\n        var styleAttributes = ['stroke-width', 'stroke-color', 'stroke-opacity', 'fill-color', 'fill-opacity'];\n        Markup.call(this, id, editor, styleAttributes);\n\n        // bind to this to pass this.globalManager\n        this.addMarkupMetadata = addMarkupMetadata.bind(this);\n\n        this.type = MarkupTypes.MARKUP_TYPE_CIRCLE;\n        this.shape = createMarkupPathSvg();\n\n        this.bindDomEvents();\n    }\n\n    MarkupCircle.prototype = Object.create(Markup.prototype);\n    MarkupCircle.prototype.constructor = MarkupCircle;\n\n    var proto = MarkupCircle.prototype;\n\n    proto.getEditMode = function() {\n\n        return new EditModeCircle(this.editor);\n    };\n\n    proto.set = function(position, size) {\n\n        this.setSize(position, size.x, size.y);\n    };\n\n    /**\n     * Applies data values into DOM element style/attribute(s)\n     *\n     */\n    proto.updateStyle = function() {\n\n        var style = this.style;\n        var shape = this.shape;\n        var path = this.getPath().join(' ');\n\n        var strokeWidth = this.style['stroke-width'];\n        var strokeColor = this.highlighted ? this.highlightColor : composeRGBAString(style['stroke-color'], style['stroke-opacity']);\n        var fillColor = composeRGBAString(style['fill-color'], style['fill-opacity']);\n        var transform = this.getTransform();\n\n        setAttributeToMarkupSvg(shape, 'd', path);\n        setAttributeToMarkupSvg(shape, 'stroke-width', strokeWidth);\n        setAttributeToMarkupSvg(shape, 'stroke', strokeColor);\n        setAttributeToMarkupSvg(shape, 'fill', fillColor);\n        setAttributeToMarkupSvg(shape, 'transform', transform);\n        updateMarkupPathSvgHitarea(shape, this.editor);\n    };\n\n    proto.setMetadata = function() {\n\n        var metadata = cloneStyle(this.style);\n\n        metadata.type = this.type;\n        metadata.position = [this.position.x, this.position.y].join(\" \");\n        metadata.size = [this.size.x, this.size.y].join(\" \");\n        metadata.rotation = String(this.rotation);\n\n        return this.addMarkupMetadata(this.shape, metadata);\n    };\n\n    proto.getPath = function() {\n\n        var size = this.size;\n        if (size.x === 1 || size.y === 1) {\n            return [''];\n        }\n\n        var strokeWidth = this.style['stroke-width'];\n\n        var ellipseW = size.x - strokeWidth;\n        var ellipseH = size.y - strokeWidth;\n\n        var ellipseX = -0.5*ellipseW;\n        var ellipseY = 0;\n\n        var path = [];\n        createEllipsePath(ellipseX, ellipseY, ellipseW, ellipseH, false, path);\n\n        return path;\n    };\n","'use strict';\n\nimport { EditAction } from './EditAction'\nimport { MarkupCircle } from '../MarkupCircle'\nimport { cloneStyle } from '../StyleUtils'\n\n    /**\n     * Markup create circle action.\n     *\n     * Implements an {@link Autodesk.Viewing.Extensions.Markups.Core.EditAction|EditAction}\n     * for creating a Circle {@link Autodesk.Viewing.Extensions.Markups.Core.Markup|Markup}.\n     * Included in documentation as an example of how to create\n     * a specific EditAction that deals with Markup creation.\n     * Developers are encourage to look into this class's source code and copy\n     * as much code as they need. Find link to source code below.\n     *\n     * @tutorial feature_markup\n     * @constructor\n     * @memberof Autodesk.Viewing.Extensions.Markups.Core\n     * @extends Autodesk.Viewing.Extensions.Markups.Core.EditAction\n     *\n     * @param editor\n     * @param id\n     * @param position\n     * @param size\n     * @param rotation\n     * @param style\n     */\n    export function CreateCircle(editor, id, position, size, rotation, style) {\n\n        EditAction.call(this, editor, 'CREATE-CIRCLE', id);\n\n        this.selectOnExecution = false;\n        this.position = {x: position.x, y: position.y};\n        this.size = {x: size.x, y: size.y};\n        this.rotation = rotation;\n        this.style = cloneStyle(style);\n    }\n\n    CreateCircle.prototype = Object.create(EditAction.prototype);\n    CreateCircle.prototype.constructor = CreateCircle;\n\n    var proto = CreateCircle.prototype;\n\n    proto.redo = function() {\n\n        var editor = this.editor;\n        var circle = new MarkupCircle(this.targetId, editor);\n\n        editor.addMarkup(circle);\n\n        circle.setSize(this.position, this.size.x, this.size.y);\n        circle.setRotation(this.rotation);\n        circle.setStyle(this.style);\n    };\n\n    proto.undo = function() {\n\n        var markup = this.editor.getMarkup(this.targetId);\n        markup && this.editor.removeMarkup(markup);\n    };\n\n","'use strict';\n\nimport { EditAction } from './EditAction'\nimport { CreateCloud } from './CreateCloud'\n\n    /**\n     *\n     * @param editor\n     * @param cloud\n     * @constructor\n     */\n    export function DeleteCloud(editor, cloud) {\n\n        EditAction.call(this, editor, 'DELETE-CLOUD', cloud.id);\n        this.createCloud = new CreateCloud(\n            editor,\n            cloud.id,\n            cloud.position,\n            cloud.size,\n            cloud.rotation,\n            cloud.getStyle());\n    }\n\n    DeleteCloud.prototype = Object.create(EditAction.prototype);\n    DeleteCloud.prototype.constructor = DeleteCloud;\n\n    var proto = DeleteCloud.prototype;\n\n    proto.redo = function() {\n\n        this.createCloud.undo();\n    };\n\n    proto.undo = function() {\n\n        this.createCloud.redo();\n    };\n\n","'use strict';\n\nimport { EditAction } from './EditAction'\n\n    /**\n     *\n     * @param editor\n     * @param cloud\n     * @param position\n     * @param size\n     * @constructor\n     */\n    export function SetCloud(editor, cloud, position, size) {\n\n        EditAction.call(this, editor, 'SET-CLOUD', cloud.id);\n\n        this.newPosition = {x: position.x, y: position.y};\n        this.newSize = {x: size.x, y: size.y};\n        this.oldPosition = {x: cloud.position.x, y: cloud.position.y};\n        this.oldSize = {x: cloud.size.x, y: cloud.size.y};\n    }\n\n    SetCloud.prototype = Object.create(EditAction.prototype);\n    SetCloud.prototype.constructor = SetCloud;\n\n    var proto = SetCloud.prototype;\n\n    proto.redo = function() {\n\n        this.applyState(this.targetId, this.newPosition, this.newSize, this.newStrokeWidth, this.newColor);\n    };\n\n    proto.undo = function() {\n\n        this.applyState(this.targetId, this.oldPosition, this.oldSize, this.oldStrokeWidth, this.oldColor);\n    };\n\n    proto.merge = function(action) {\n\n        if (this.targetId === action.targetId &&\n            this.type === action.type) {\n\n            this.newPosition = action.newPosition;\n            this.newSize = action.newSize;\n            return true;\n        }\n        return false;\n    };\n\n    /**\n     *\n     * @private\n     */\n    proto.applyState = function(targetId, position, size) {\n\n        var cloud = this.editor.getMarkup(targetId);\n        if(!cloud) {\n            return;\n        }\n\n        // Different stroke widths make positions differ at sub-pixel level.\n        var epsilon = 0.0001;\n\n        if (Math.abs(cloud.position.x - position.x) > epsilon || Math.abs(cloud.size.y - size.y) > epsilon ||\n            Math.abs(cloud.position.y - position.y) > epsilon || Math.abs(cloud.size.y - size.y) > epsilon) {\n\n            cloud.set(position, size);\n        }\n    };\n\n    /**\n     * @returns {boolean}\n     */\n    proto.isIdentity = function() {\n\n        return (\n            this.newPosition.x === this.oldPosition.x &&\n            this.newPosition.y === this.oldPosition.y &&\n            this.newSize.x === this.oldSize.x &&\n            this.newSize.y === this.oldSize.y);\n    };\n\n","'use strict';\n\nimport { EditMode } from './EditMode'\nimport { DeleteCloud } from '../edit-actions/DeleteCloud'\nimport { CreateCloud } from '../edit-actions/CreateCloud'\nimport { SetCloud } from '../edit-actions/SetCloud'\nimport * as MarkupTypes from '../MarkupTypes'\n\n    /**\n     *\n     * @param editor\n     * @constructor\n     */\n    export function EditModeCloud(editor) {\n\n        var styleAttributes = ['stroke-width', 'stroke-color', 'stroke-opacity', 'fill-color', 'fill-opacity'];\n        EditMode.call(this, editor, MarkupTypes.MARKUP_TYPE_CLOUD, styleAttributes);\n    }\n\n    EditModeCloud.prototype = Object.create(EditMode.prototype);\n    EditModeCloud.prototype.constructor = EditModeCloud;\n\n    var proto = EditModeCloud.prototype;\n\n    proto.deleteMarkup = function(markup, cantUndo) {\n\n        markup = markup || this.selectedMarkup;\n        if (markup && markup.type == this.type) {\n            var deleteCloud = new DeleteCloud(this.editor, markup);\n            deleteCloud.addToHistory = !cantUndo;\n            deleteCloud.execute();\n            return true;\n        }\n        return false;\n    };\n\n    /**\n     * Handler to mouse move events, used to create markups.\n     * @param {MouseEvent} event Mouse event.\n     * @private\n     */\n    proto.onMouseMove = function(event) {\n\n        EditMode.prototype.onMouseMove.call( this, event );\n\n        var selectedMarkup = this.selectedMarkup;\n        if(!selectedMarkup || !this.creating) {\n            return;\n        }\n\n        var editor = this.editor;\n\n        var pos = this.getFinalMouseDraggingPosition();\n        var final = editor.clientToMarkups(pos.x, pos.y);\n        var position = { x: (this.firstPosition.x + final.x) / 2, y: (this.firstPosition.y + final.y) / 2 };\n        var size = this.size = { x: Math.abs(final.x - this.firstPosition.x), y: Math.abs(final.y - this.firstPosition.y) };\n        var setCloud = new SetCloud(\n            editor,\n            selectedMarkup,\n            position,\n            size);\n\n        setCloud.execute();\n    };\n\n    /**\n     * Handler to mouse down events, used to start markups creation.\n     * @private\n     */\n    proto.onMouseDown = function() {\n\n        EditMode.prototype.onMouseDown.call(this);\n\n        if (this.selectedMarkup) {\n            return;\n        }\n\n        var editor = this.editor;\n        var mousePosition = editor.getMousePosition();\n\n        this.initialX = mousePosition.x;\n        this.initialY = mousePosition.y;\n\n        // Calculate center and size.\n        var position = this.firstPosition = editor.clientToMarkups(this.initialX, this.initialY);\n        var size = this.size = editor.sizeFromClientToMarkups(1, 1);\n\n        // Create Cloud.\n        editor.beginActionGroup();\n\n        var markupId = editor.getId();\n        var create = new CreateCloud(\n            editor,\n            markupId,\n            position,\n            size,\n            0,\n            this.style);\n\n        create.execute();\n\n        this.selectedMarkup = editor.getMarkup(markupId);\n        this.creationBegin();\n    };\n\n","'use strict';\n\nimport { Markup } from './Markup'\nimport * as MarkupTypes from './MarkupTypes'\nimport { createMarkupPathSvg, composeRGBAString, setAttributeToMarkupSvg,\n    updateMarkupPathSvgHitarea, addMarkupMetadata, createEllipsePath } from './MarkupsCoreUtils'\nimport { cloneStyle } from './StyleUtils'\nimport { EditModeCloud } from './edit-modes/EditModeCloud'\n\n    /**\n     *\n     * @param id\n     * @param editor\n     * @constructor\n     */\n    export function MarkupCloud(id, editor) {\n\n        var styleAttributes = ['stroke-width', 'stroke-linejoin', 'stroke-color', 'stroke-opacity', 'fill-color', 'fill-opacity'];\n        Markup.call(this, id, editor, styleAttributes);\n\n        // bind to this to pass this.globalManager\n        this.addMarkupMetadata = addMarkupMetadata.bind(this);\n\n        this.type = MarkupTypes.MARKUP_TYPE_CLOUD;\n        this.shape = createMarkupPathSvg();\n\n        this.bindDomEvents();\n    }\n\n    MarkupCloud.prototype = Object.create(Markup.prototype);\n    MarkupCloud.prototype.constructor = MarkupCloud;\n\n    var proto = MarkupCloud.prototype;\n\n    proto.getEditMode = function() {\n\n        return new EditModeCloud(this.editor);\n    };\n\n    /**\n     * Sets position and size in markup space coordinates.\n     * @param {Object} position\n     * @param {Object} size\n     */\n    proto.set = function(position, size) {\n\n        this.setSize(position, size.x, size.y);\n    };\n\n    /**\n     * Applies data values into DOM element style/attribute(s)\n     *\n     */\n    proto.updateStyle = function() {\n\n        var style = this.style;\n        var shape = this.shape;\n        var path = this.getPath().join(' ');\n\n        var strokeWidth = this.style['stroke-width'];\n        var strokeColor = this.highlighted ? this.highlightColor : composeRGBAString(style['stroke-color'], style['stroke-opacity']);\n        var fillColor = composeRGBAString(style['fill-color'], style['fill-opacity']);\n        var transform = this.getTransform();\n\n        setAttributeToMarkupSvg(shape, 'd', path);\n        setAttributeToMarkupSvg(shape, 'stroke-width', strokeWidth);\n        setAttributeToMarkupSvg(shape, 'stroke', strokeColor);\n        setAttributeToMarkupSvg(shape, 'fill', fillColor);\n        setAttributeToMarkupSvg(shape, 'transform', transform);\n        updateMarkupPathSvgHitarea(shape, this.editor);\n    };\n\n    proto.setMetadata = function() {\n\n        var metadata = cloneStyle(this.style);\n\n        metadata.type = this.type;\n        metadata.position = [this.position.x, this.position.y].join(\" \");\n        metadata.size = [this.size.x, this.size.y].join(\" \");\n        metadata.rotation = String(this.rotation);\n\n        return this.addMarkupMetadata(this.shape, metadata);\n    };\n\n    /**\n     * Helper function that creates intermediate points given the\n     * current position and size.\n     * @returns {Array}\n     */\n    proto.getPath = function() {\n\n        var position = this.position;\n        var size = this.size;\n        var strokeWidth = this.style['stroke-width'];\n        var radius = strokeWidth * 2;\n\n        function createArcTo(x, y, xRadius, yRadius, path) {\n\n            path.push('a');\n            path.push(xRadius);\n            path.push(yRadius);\n            path.push(0);\n            path.push(1);\n            path.push(1);\n            path.push(x);\n            path.push(y);\n\n            return path;\n        }\n\n        function createCorner(corner, xRadius, yRadius, strokeWidth, path) {\n\n            switch(corner) {\n\n                case 'LT':\n                    return createArcTo( xRadius,-yRadius, xRadius, yRadius, path);\n                    break;\n\n                case 'RT':\n                    return createArcTo( xRadius, yRadius, xRadius, yRadius, path);\n                    break;\n\n                case 'RB':\n                    return createArcTo(-xRadius, yRadius, xRadius, yRadius, path);\n                    break;\n\n                case 'LB':\n                    return createArcTo(-xRadius,-yRadius, xRadius, yRadius, path);\n                    break;\n            }\n        }\n\n        function getSideParameters(x1, x2, radius, strokeWidth) {\n\n            var diameter = radius * 2;\n            var length = Math.abs(x2 - x1 - strokeWidth);\n            var count = Math.round(length / diameter);\n\n            diameter += (length - diameter * count) / count;\n            radius = diameter * 0.5;\n\n            var xValueInset = diameter * 0.05;\n            var yValueOffset = radius * 3.5 / 3.0;\n\n            return {\n                count: count,\n                radius: radius,\n                diameter: diameter,\n                p1: {x: xValueInset, y: -yValueOffset },\n                p2: {x: diameter - xValueInset, y: -yValueOffset},\n                p3: {x: diameter, y: 0}\n            };\n        }\n\n        function createTSide(hSidesParameters, path){\n\n            var sp = hSidesParameters;\n            for(var i = 0; i < sp.count; ++i) {\n\n                path.push('c');\n                path.push(sp.p1.x);\n                path.push(sp.p1.y);\n                path.push(sp.p2.x);\n                path.push(sp.p2.y);\n                path.push(sp.p3.x);\n                path.push(sp.p3.y);\n            }\n\n            return path;\n        }\n\n        function createRSide(vSidesParameters, path){\n\n            var sp = vSidesParameters;\n            for(var i = 0; i < sp.count; ++i) {\n                path.push('c');\n                path.push(-sp.p1.y);\n                path.push(sp.p1.x);\n                path.push(-sp.p2.y);\n                path.push(sp.p2.x);\n                path.push(-sp.p3.y);\n                path.push(sp.p3.x);\n            }\n\n            return path;\n        }\n\n        function createBSide(hSidesParameters, path){\n\n            var sp = hSidesParameters;\n            for(var i = 0; i < sp.count; ++i) {\n                path.push('c');\n                path.push(-sp.p1.x);\n                path.push(-sp.p1.y);\n                path.push(-sp.p2.x);\n                path.push(-sp.p2.y);\n                path.push(-sp.p3.x);\n                path.push(-sp.p3.y);\n            }\n\n            return path;\n        }\n\n        function createLSide(vSidesParameters, path){\n\n            var sp = vSidesParameters;\n            for(var i = 0; i < sp.count; ++i) {\n                path.push('c');\n                path.push(sp.p1.y);\n                path.push(-sp.p1.x);\n                path.push(sp.p2.y);\n                path.push(-sp.p2.x);\n                path.push(sp.p3.y);\n                path.push(-sp.p3.x);\n            }\n\n            return path;\n        }\n\n        var l = position.x;\n        var t = position.y;\n        var r = position.x + size.x;\n        var b = position.y + size.y;\n\n        var minSize = radius * 5;\n        var path = [];\n\n        if (size.x < minSize || size.y < minSize) {\n\n            var w = size.x - strokeWidth;\n            var h = size.y - strokeWidth;\n            var x = -w * 0.5;\n            var y = 0;\n\n            createEllipsePath(x, y, w, h, false, path);\n        } else {\n\n            var hSidesParameters = getSideParameters(l, r, radius, strokeWidth);\n            var vSidesParameters = getSideParameters(t, b, radius, strokeWidth);\n\n            var cornerSizeX = hSidesParameters.diameter;\n            var cornerSizeY = vSidesParameters.diameter;\n            var cornerRadiusX = hSidesParameters.radius;\n            var cornerRadiusY = vSidesParameters.radius;\n\n            hSidesParameters = getSideParameters(l + cornerSizeX, r - cornerSizeX, radius, strokeWidth);\n            vSidesParameters = getSideParameters(t + cornerSizeY, b - cornerSizeY, radius, strokeWidth);\n\n            var halfStrokeWidth = strokeWidth * 0.5;\n            var x =-size.x * 0.5 + halfStrokeWidth + cornerRadiusX;\n            var y =-size.y * 0.5 + halfStrokeWidth + cornerRadiusY * 2;\n\n            path.push('M');\n            path.push(x);\n            path.push(y);\n\n            createCorner('LT', cornerRadiusX, cornerRadiusY, strokeWidth, path);\n            createTSide(hSidesParameters, path);\n            createCorner('RT', cornerRadiusX, cornerRadiusY, strokeWidth, path);\n            createRSide(vSidesParameters, path);\n            createCorner('RB', cornerRadiusX, cornerRadiusY, strokeWidth, path);\n            createBSide(hSidesParameters, path);\n            createCorner('LB', cornerRadiusX, cornerRadiusY, strokeWidth, path);\n            createLSide(vSidesParameters, path);\n        }\n\n        path.push('z');\n        return path;\n    };\n","'use strict';\n\nimport { EditAction } from './EditAction'\nimport { MarkupCloud } from '../MarkupCloud'\nimport { cloneStyle } from '../StyleUtils'\n\n    /**\n     *\n     * @param editor\n     * @param id\n     * @param position\n     * @param size\n     * @param rotation\n     * @param style\n     * @constructor\n     */\n    export function CreateCloud(editor, id, position, size, rotation, style) {\n\n        EditAction.call(this, editor, 'CREATE-CLOUD', id);\n\n        this.selectOnExecution = false;\n        this.position = {x: position.x, y: position.y};\n        this.size = {x: size.x, y: size.y};\n        this.rotation = rotation;\n        this.style = cloneStyle(style);\n    }\n\n    CreateCloud.prototype = Object.create(EditAction.prototype);\n    CreateCloud.prototype.constructor = CreateCloud;\n\n    var proto = CreateCloud.prototype;\n\n    proto.redo = function() {\n\n        var editor = this.editor;\n        var cloud = new MarkupCloud(this.targetId, editor);\n\n        editor.addMarkup(cloud);\n\n        cloud.set(this.position, this.size);\n        cloud.setRotation(this.rotation);\n        cloud.setStyle(this.style);\n    };\n\n    proto.undo = function() {\n\n        var markup = this.editor.getMarkup(this.targetId);\n        markup && this.editor.removeMarkup(markup);\n    };\n","'use strict';\n\nimport { Markup } from './Markup'\nimport { createMarkupPathSvg, setAttributeToMarkupSvg, updateMarkupPathSvgHitarea,\n    composeRGBAString, addMarkupMetadata } from './MarkupsCoreUtils'\nimport { cloneStyle } from './StyleUtils'\n\n    /**\n     * Base class for Pen Markup rendering (currently freehand and highlighter)\n     *\n     * Derived classes must implement getEditMode()\n     * @param id\n     * @param editor\n     * @constructor\n     */\n    export function MarkupPen(id, editor) {\n\n        var styleAttributes = ['stroke-width', 'stroke-color','stroke-opacity'];\n        Markup.call(this, id, editor, styleAttributes);\n\n        // bind to this to pass this.globalManager\n        this.addMarkupMetadata = addMarkupMetadata.bind(this);\n\n        this.shape = createMarkupPathSvg();\n\n        this.bindDomEvents();\n    }\n\n    MarkupPen.prototype = Object.create(Markup.prototype);\n    MarkupPen.prototype.constructor = MarkupPen;\n\n    var proto = MarkupPen.prototype;\n\n    /**\n     * Sets top-left and bottom-right values in client space coordinates (2d).\n     *\n     * @param position\n     * @param size\n     * @param locations\n     */\n    proto.set = function(position, size, locations, isAbsoluteCoords) {\n\n        this.rotation = 0; // Reset angle //\n        this.isAbsoluteCoords = isAbsoluteCoords;\n        if (this.isAbsoluteCoords) {\n            this.updatePath(locations);\n        } else {\n            this.locations = locations.slice(0);\n\n            this.size.x = (size.x === 0) ? 1 : size.x;\n            this.size.y = (size.y === 0) ? 1 : size.y;\n\n            this.setSize(position, size.x, size.y);\n            this.updateStyle();\n        }\n    };\n\n    proto.setPosition = function(x,y) {\n\n        this.position.x = x;\n        this.position.y = y;\n\n        var shape = this.shape;\n        var transform = this.getTransform();\n\n        setAttributeToMarkupSvg(shape, 'transform', transform);\n        updateMarkupPathSvgHitarea(shape, this.editor);\n    };\n\n    /**\n     * Applies data values into DOM element style/attribute(s)\n     *\n     */\n    proto.updateStyle = function() {\n\n        var style = this.style;\n        var shape = this.shape;\n        var path = this.getPath().join(' ');\n\n        var strokeWidth = this.style['stroke-width'];\n        var strokeColor = this.highlighted ? this.highlightColor : composeRGBAString(style['stroke-color'], style['stroke-opacity']);\n        var fillColor = 'none';\n\n        setAttributeToMarkupSvg(shape, 'stroke-width', strokeWidth);\n        setAttributeToMarkupSvg(shape, 'stroke-linejoin', 'round');\n        setAttributeToMarkupSvg(shape, 'stroke-linecap', 'round');\n        setAttributeToMarkupSvg(shape, 'stroke', strokeColor);\n        setAttributeToMarkupSvg(shape, 'fill', fillColor);\n\n        this.updatePath(path);\n        updateMarkupPathSvgHitarea(shape, this.editor);\n    };\n\n    proto.updatePath = function(path) {\n        var shape = this.shape;\n        var transform = this.isAbsoluteCoords ? 'scale(1)' : this.getTransform();\n\n        setAttributeToMarkupSvg(shape, 'transform', transform);\n        setAttributeToMarkupSvg(shape, 'd', path);\n    };\n\n    /**\n     * Changes the position and size of the markup.\n     * This gets called by the Autodesk.Viewing.Extensions.Markups.Core.SetSize edit action\n     * @param {{x: Number, y: Number}} position\n     * @param {Number} width\n     * @param {Number} height\n     */\n    proto.setSize = function (position, width, height) {\n\n        width = (width === 0 ? 1 : width);\n        height = (height === 0 ? 1 : height);\n\n        var locations = this.locations;\n        var locationsCount = locations.length;\n\n        var scaleX = width / this.size.x;\n        var scaleY = height / this.size.y;\n\n        for(var i = 0; i < locationsCount; ++i) {\n\n            var point = locations[i];\n\n            point.x *= scaleX;\n            point.y *= scaleY;\n        }\n\n        this.position.x = position.x;\n        this.position.y = position.y;\n\n        this.size.x = width;\n        this.size.y = height;\n\n        this.updateStyle();\n    };\n\n    proto.setMetadata = function() {\n\n        var metadata = cloneStyle(this.style);\n\n        metadata.type = this.type;\n        metadata.position = [this.position.x, this.position.y].join(\" \");\n        metadata.size = [this.size.x, this.size.y].join(\" \");\n        metadata.rotation = String(this.rotation);\n        metadata.locations = this.locations.map(function(point){\n            return [point.x, point.y].join(\" \");\n        }).join(\" \");\n\n        return this.addMarkupMetadata(this.shape, metadata);\n    };\n\n    proto.getPath = function() {\n\n        var path = [];\n        var locations = this.locations;\n        var locationsCount = locations.length;\n\n        if (locationsCount > 1) {\n\n            path.push('M');\n            path.push(+(locations[0].x).toFixed(6));\n            path.push(+(locations[0].y).toFixed(6));\n\n            for (var i = 1; i < locationsCount; ++i) {\n\n                var locationA = locations[i - 1];\n                var locationB = locations[i];\n\n                path.push('l');\n                path.push(+(locationB.x - locationA.x).toFixed(6));\n                path.push(+(locationB.y - locationA.y).toFixed(6));\n            }\n        }\n\n        return path;\n    };\n\n","'use strict';\n\nimport { EditMode } from './EditMode'\nimport { simplify } from '../MarkupsCoreUtils'\n\n    /**\n     * Base class for editing Pen tools (currently freehand and highlighter)\n     *\n     * Any class extending EditModePen should contain at least the following methods:\n     * - createPen()\n     * - deletePen()\n     * - setPen()\n     *\n     * @param editor\n     * @constructor\n     */\n    export function EditModePen(editor, type, styleAttributes) {\n        EditMode.call(this, editor, type, styleAttributes);\n\n        this.smoothen = true;\n        this.bufferSize = 8;\n    }\n\n    EditModePen.prototype = Object.create(EditMode.prototype);\n\n    var proto = EditModePen.prototype;\n\n    proto.deleteMarkup = function(markup, cantUndo) {\n\n        markup = markup || this.selectedMarkup;\n        if (markup && markup.type === this.type) {\n            var deleteMarkup = this.deletePen(markup);\n            deleteMarkup.addToHistory = !cantUndo;\n            deleteMarkup.execute();\n            return true;\n        }\n        return false;\n    };\n\n    /**\n     * Handler to mouse move events, used to create markups.\n     * @param {MouseEvent} event Mouse event.\n     * @private\n     */\n    proto.onMouseMove = function(event) {\n\n        EditMode.prototype.onMouseMove.call( this, event );\n\n        var selectedMarkup = this.selectedMarkup;\n        if (!selectedMarkup || !this.creating) {\n            return;\n        }\n\n        var editor = this.editor;\n        var mousePosition = editor.getMousePosition();\n        var movements = this.movements;\n\n        var location = editor.clientToMarkups(mousePosition.x, mousePosition.y);\n        if (this.smoothen) {\n            this.appendToBuffer(location);\n            this.amendPath();\n        } else {\n            var dx = this.lastX - mousePosition.x;\n            var dy = this.lastY - mousePosition.y;\n            var moveTol = 25; // 5^2, compare to square to avoid using square root of distance\n\n            if (movements.length > 1 && (dx*dx + dy*dy) < moveTol) {\n                movements[movements.length - 1] = location;\n                this.removeFromAbsolutePath(1);\n            } else {\n                movements.push(location);\n                this.lastX = mousePosition.x;\n                this.lastY = mousePosition.y;\n            }\n\n            this.addToAbsolutePath([location]);\n        }\n\n        var setPen = this.setPen(this.position, this.size, this.absolutePath, true);\n        setPen.execute();\n    };\n\n    /**\n     * Handler to mouse down events, used to start markups creation.\n     * @private\n     */\n    proto.onMouseDown = function() {\n\n        EditMode.prototype.onMouseDown.call(this);\n\n        if (this.selectedMarkup) {\n            return;\n        }\n\n        var editor = this.editor;\n\n        editor.snapper && editor.snapper.clearSnapped();\n        var mousePosition = editor.getMousePosition();\n\n        this.lastX = this.initialX = mousePosition.x;\n        this.lastY = this.initialY = mousePosition.y;\n\n        //set the starting point\n        var position = this.position = editor.clientToMarkups(this.initialX, this.initialY);\n        this.movements = [position];\n        if (this.smoothen) {\n            this.buffer = []; // Reset buffer\n            this.movementsLastIndex = null;\n            this.appendToBuffer(position);\n        }\n\n        var size = this.size = editor.sizeFromClientToMarkups(1, 1);\n\n        // Create pen.\n        editor.beginActionGroup();\n\n        var markupId = editor.getId();\n        var create = this.createPen(markupId, position, size, 0, [{x: 0, y: 0 }]);\n\n        create.execute();\n\n        this.createAbsolutePath(position);\n\n        this.selectedMarkup = editor.getMarkup(markupId);\n        this.creationBegin();\n    };\n\n    proto.onMouseUp = function() {\n\n        if (!this.creating) {\n            EditMode.prototype.onMouseUp.call(this);\n            return;\n        }\n\n        var movements = this.movements;\n        var cameraWidth = this.viewer.impl.camera.right - this.viewer.impl.camera.left;\n        var cameraHeight = this.viewer.impl.camera.top - this.viewer.impl.camera.bottom;\n        var cameraDiagSq = cameraWidth*cameraWidth + cameraHeight*cameraHeight;\n\n        movements = simplify(movements, cameraDiagSq * 0.00000001, true);\n\n        var xs = movements.map(function(item) { return item.x });\n        var ys = movements.map(function(item) { return item.y });\n\n        var l = Math.min.apply(null, xs);\n        var t = Math.min.apply(null, ys);\n        var r = Math.max.apply(null, xs);\n        var b = Math.max.apply(null, ys);\n\n        var width = r - l;  // Already in markup coords space\n        var height = b - t; // Already in markup coords space\n\n        var position = {\n            x: l + width * 0.5,\n            y: t + height * 0.5\n        };\n        var size = this.size = {x: width, y: height};\n\n        // Adjust points to relate from the shape's center\n        var locations = movements.map(function(point){\n            return {\n                x: point.x - position.x,\n                y: point.y - position.y\n            };\n        });\n\n        var setPen = this.setPen(position, size, locations, false);\n        setPen.execute();\n\n        EditMode.prototype.onMouseUp.call(this);\n    };\n\n    proto.createPen = function() {\n        console.error('createPen not implemented');\n    };\n\n    proto.deletePen = function() {\n        console.error('deletePen not implemented');\n    };\n\n    proto.setPen = function() {\n        console.error('setPen not implemented');\n    };\n\n    proto.useWithSnapping = function () {\n        return false;\n    };\n\n    proto.createAbsolutePath = function(point) {\n\n        this.absolutePath = 'M' + +(point.x).toFixed(6) + ' ' + +(point.y).toFixed(6);\n        this.absolutePathIndexes = [0];\n    };\n\n    proto.removeFromAbsolutePath = function(numToRemove) {\n\n        numToRemove = Math.min(numToRemove, this.absolutePathIndexes.length);\n        if (numToRemove > 0) {\n            this.absolutePath = this.absolutePath.slice(0, this.absolutePathIndexes[this.absolutePathIndexes.length - numToRemove]);\n            this.absolutePathIndexes.splice(this.absolutePathIndexes.length - numToRemove);\n        }\n    };\n\n    proto.addToAbsolutePath = function(points) {\n\n       for (var i = 0; i < points.length; i++) {\n            this.absolutePathIndexes.push(this.absolutePath.length);\n            this.absolutePath += ' L' + +(points[i].x).toFixed(6) + ' ' + +(points[i].y).toFixed(6);\n        }\n    };\n\n    proto.appendToBuffer = function(point) {\n\n        this.buffer.push(point);\n        while (this.buffer.length > this.bufferSize) {\n            this.buffer.shift();\n        }\n    };\n\n    proto.amendPath = function() {\n\n        var point = this.getAveragePoint(0);\n        if (point) {\n            if (this.movementsLastIndex) {\n                this.removeFromAbsolutePath(this.movements.length - this.movementsLastIndex);\n                this.movements.splice(this.movementsLastIndex);\n            }\n\n            // Add the smoothed part of the path that will not change\n            var tmpBuffer = [point];\n            this.movementsLastIndex = this.movements.length + 1;\n\n            // Get the last part of the path (close to the current mouse position)\n            // This part will change if the mouse moves again\n            for (var offset = 2; offset < this.buffer.length; offset += 2) {\n                var pt = this.getAveragePoint(offset);\n                tmpBuffer.push(pt);\n            }\n\n            this.addToAbsolutePath(tmpBuffer);\n\n            // Set the complete current path coordinates\n            this.movements.push.apply(this.movements, tmpBuffer);\n\n        }\n    };\n\n    // Calculate the average point, starting at offset in the buffer\n    proto.getAveragePoint = function(offset) {\n\n        var len = this.buffer.length;\n        if (len % 2 === 1 || len >= this.bufferSize) {\n            var totalX = 0;\n            var totalY = 0;\n            var pt;\n            var count = 0;\n            for (var i = offset; i < len; i++) {\n                count++;\n                pt = this.buffer[i];\n                totalX += pt.x;\n                totalY += pt.y;\n            }\n            return {\n                x: totalX / count,\n                y: totalY / count\n            }\n        }\n        return null;\n    };\n\n","'use strict';\n\nimport { EditAction } from './EditAction'\nimport { CreateFreehand } from './CreateFreehand'\n\n    /**\n     *\n     * @param editor\n     * @param freehand\n     * @constructor\n     */\n    export function DeleteFreehand(editor, freehand) {\n        EditAction.call(this, editor, 'DELETE-FREEHAND', freehand.id);\n        this.createFreehand = new CreateFreehand(\n            editor,\n            freehand.id,\n            freehand.position,\n            freehand.size,\n            freehand.rotation,\n            freehand.locations,\n            freehand.getStyle());\n    }\n\n    DeleteFreehand.prototype = Object.create(EditAction.prototype);\n    DeleteFreehand.prototype.constructor = DeleteFreehand;\n\n    var proto = DeleteFreehand.prototype;\n\n    proto.redo = function() {\n\n        this.createFreehand.undo();\n    };\n\n    proto.undo = function() {\n\n        this.createFreehand.redo();\n    };\n","'use strict';\n\nimport { EditAction } from './EditAction'\n\n    /**\n     *\n     * @param editor\n     * @param freehand\n     * @param position\n     * @param size\n     * @param locations\n     * @constructor\n     */\n    export function SetFreehand(editor, freehand, position, size, locations, isAbsoluteCoords) {\n\n        EditAction.call(this, editor, 'SET-FREEHAND', freehand.id);\n\n        this.position = position;\n        this.size = size;\n        this.locations = isAbsoluteCoords ? locations : locations.slice(0);\n        this.isAbsoluteCoords = isAbsoluteCoords;\n\n        // No need to save old data\n    }\n\n    SetFreehand.prototype = Object.create(EditAction.prototype);\n    SetFreehand.prototype.constructor = SetFreehand;\n\n    var proto = SetFreehand.prototype;\n\n    proto.redo = function() {\n\n        var freehand = this.editor.getMarkup(this.targetId);\n        if (!freehand) {\n            return;\n        }\n\n        freehand.set(this.position, this.size, this.locations, this.isAbsoluteCoords);\n    };\n\n    proto.undo = function() {\n        // No need for undo.\n    };\n\n    proto.merge = function(action) {\n\n        if (this.targetId === action.targetId &&\n            this.type === action.type) {\n\n            this.locations = action.isAbsoluteCoords ? action.locations : action.locations.slice(0);\n            this.position = action.position;\n            this.size = action.size;\n            this.isAbsoluteCoords = action.isAbsoluteCoords;\n            return true;\n        }\n        return false;\n    };\n\n    /**\n     * @returns {boolean}\n     */\n    proto.isIdentity = function() {\n\n        return false; // No need to optimize, always false.\n    };\n","'use strict';\n\nimport { EditModePen } from './EditModePen'\nimport { DeleteFreehand } from '../edit-actions/DeleteFreehand'\nimport { CreateFreehand } from '../edit-actions/CreateFreehand'\nimport { SetFreehand } from '../edit-actions/SetFreehand'\nimport * as MarkupTypes from '../MarkupTypes'\n\n    /**\n     *\n     * @param editor\n     * @constructor\n     */\n    export function EditModeFreehand(editor) {\n\n        var styleAttributes = ['stroke-width', 'stroke-color', 'stroke-opacity'];\n        EditModePen.call(this, editor, MarkupTypes.MARKUP_TYPE_FREEHAND, styleAttributes);\n    }\n\n    EditModeFreehand.prototype = Object.create(EditModePen.prototype);\n    EditModeFreehand.prototype.constructor = EditModeFreehand;\n\n    var proto = EditModeFreehand.prototype;\n\n    proto.createPen = function(markupId, position, size, rotation, locations) {\n        return new CreateFreehand(this.editor,\n            markupId,\n            position,\n            size,\n            rotation,\n            locations,\n            this.style);\n    };\n\n    proto.deletePen = function(markup) {\n        return new DeleteFreehand(this.editor, markup);\n    };\n\n    proto.setPen = function(position, size, locations, isAbsoluteCoords) {\n        return new SetFreehand(this.editor,\n            this.selectedMarkup,\n            position,\n            size,\n            locations,\n            isAbsoluteCoords);\n    };\n\n","'use strict';\n\nimport { MarkupPen } from './MarkupPen'\nimport * as MarkupTypes from './MarkupTypes'\nimport { EditModeFreehand } from './edit-modes/EditModeFreehand'\n\n\n    /**\n     *\n     * @param id\n     * @param editor\n     * @constructor\n     */\n    export function MarkupFreehand(id, editor) {\n\n        MarkupPen.call(this, id, editor);\n        this.type = MarkupTypes.MARKUP_TYPE_FREEHAND;\n    }\n\n    MarkupFreehand.prototype = Object.create(MarkupPen.prototype);\n    MarkupFreehand.prototype.constructor = MarkupFreehand;\n\n    var proto = MarkupFreehand.prototype;\n\n    proto.getEditMode = function() {\n\n        return new EditModeFreehand(this.editor);\n    };\n\n","'use strict';\n\nimport { EditAction } from './EditAction'\nimport { MarkupFreehand } from '../MarkupFreehand'\nimport { cloneStyle } from '../StyleUtils'\n\n    /**\n     *\n     * @param editor\n     * @param id\n     * @param position\n     * @param size\n     * @param rotation\n     * @param locations\n     * @param style\n     * @constructor\n     */\n    export function CreateFreehand(editor, id, position, size, rotation, locations, style) {\n\n        EditAction.call(this, editor, 'CREATE-FREEHAND', id);\n\n        this.selectOnExecution = false;\n        this.position = position;\n        this.size = size;\n        this.rotation = rotation;\n        this.movements = locations.slice(0);\n        this.style = cloneStyle(style);\n    }\n\n    CreateFreehand.prototype = Object.create(EditAction.prototype);\n    CreateFreehand.prototype.constructor = CreateFreehand;\n\n    var proto = CreateFreehand.prototype;\n\n    proto.redo = function() {\n\n        var editor = this.editor;\n        var freehand = new MarkupFreehand(this.targetId, editor);\n\n        editor.addMarkup(freehand);\n\n        freehand.set(this.position, this.size, this.movements, false);\n        freehand.setRotation(this.rotation);\n        freehand.setStyle(this.style);\n    };\n\n    proto.undo = function() {\n\n        var markup = this.editor.getMarkup(this.targetId);\n        markup && this.editor.removeMarkup(markup);\n    };\n\n","'use strict';\n\nimport { EditAction } from './EditAction'\nimport { CreatePolyline } from './CreatePolyline'\n\n    /**\n     *\n     * @param editor\n     * @param polyline\n     * @constructor\n     */\n    export function DeletePolyline(editor, polyline) {\n\n        EditAction.call(this, editor, 'DELETE-POLYLINE', polyline.id);\n        this.createPolyline = new CreatePolyline(\n            editor,\n            polyline.id,\n            polyline.position,\n            polyline.size,\n            polyline.rotation,\n            polyline.locations,\n            polyline.getStyle(),\n            polyline.closed);\n    }\n\n    DeletePolyline.prototype = Object.create(EditAction.prototype);\n    DeletePolyline.prototype.constructor = DeletePolyline;\n\n    var proto =  DeletePolyline.prototype;\n\n    proto.redo = function() {\n\n        this.createPolyline.undo();\n    };\n\n    proto.undo = function() {\n\n        this.createPolyline.redo();\n    };\n","'use strict';\n\nimport { EditAction } from './EditAction'\n\n    /**\n     *\n     * @param editor\n     * @param polyline\n     * @param position\n     * @param size\n     * @param locations\n     * @param closed\n     * @constructor\n     */\n    export function SetPolyline(editor, polyline, position, size, locations, closed) {\n\n        EditAction.call(this, editor, 'SET-POLYLINE', polyline.id);\n\n        this.position = position;\n        this.size = size;\n        this.locations = locations.concat();\n        this.closed = closed;\n\n        // No need to save old data\n    }\n\n    SetPolyline.prototype = Object.create(EditAction.prototype);\n    SetPolyline.prototype.constructor = SetPolyline;\n\n    var proto = SetPolyline.prototype;\n\n    proto.redo = function() {\n\n        var polyline = this.editor.getMarkup(this.targetId);\n        if(!polyline) {\n            return;\n        }\n\n        polyline.set(this.position, this.size, this.locations, this.closed);\n    };\n\n    proto.undo = function() {\n        // No need for undo.\n    };\n\n    proto.merge = function(action) {\n\n        if (this.targetId === action.targetId &&\n            this.type === action.type) {\n\n            this.locations = action.locations.concat();\n            this.position = action.position;\n            this.size = action.size;\n            this.closed = action.closed;\n            return true;\n        }\n        return false;\n    };\n\n    /**\n     * @returns {boolean}\n     */\n    proto.isIdentity = function() {\n\n        return false; // No need to optimize, always false.\n    };\n\n","'use strict';\n\nimport { EditMode } from './EditMode'\nimport { DeletePolyline } from '../edit-actions/DeletePolyline'\nimport { CreatePolyline } from '../edit-actions/CreatePolyline'\nimport { SetPolyline } from '../edit-actions/SetPolyline'\nimport * as MarkupTypes from '../MarkupTypes'\nimport { areMarkupsPointsInClientRange } from '../MarkupsCoreUtils'\n\n    var SNAP_RANGE = 25;\n\n    /**\n     *\n     * @param editor\n     * @constructor\n     */\n    export function EditModePolyline(editor) {\n\n        var styleAttributes = ['stroke-width', 'stroke-color','stroke-opacity', 'fill-color', 'fill-opacity'];\n        EditMode.call(this, editor, MarkupTypes.MARKUP_TYPE_POLYLINE, styleAttributes);\n\n        this.creationMethod = this.CREATION_METHOD_CLICKS;\n        this.movements = [];\n    }\n\n    EditModePolyline.prototype = Object.create(EditMode.prototype);\n    EditModePolyline.prototype.constructor = EditModePolyline;\n\n    var proto = EditModePolyline.prototype;\n\n    proto.deleteMarkup = function(markup, cantUndo) {\n\n        markup = markup || this.selectedMarkup;\n        if (markup && markup.type == this.type) {\n            var movements = this.movements;\n            if (this.creating && movements.length >= 2) {\n                movements.pop();\n                movements.pop();\n                var lastIndex = movements.length - 1;\n                if (lastIndex >= 0) {\n                    // duplicate last location\n                    var lastMove = movements[lastIndex];\n                    movements.push(lastMove);\n                    var locations = setPositionAndSize(movements, this);\n                    var setPolyline = new SetPolyline(\n                        this.editor,\n                        markup,\n                        this.position,\n                        this.size,\n                        locations);\n\n                    setPolyline.execute();\n                }\n            }\n            else {\n                var deletePolyline = new DeletePolyline(this.editor, markup);\n                deletePolyline.addToHistory = !cantUndo;\n                deletePolyline.execute();\n                this.creationEnd();\n                return true;\n            }\n        }\n        return false;\n    };\n\n    /**\n     * Handler to mouse move events, used to create markups.\n     * @param {MouseEvent} event Mouse event.\n     * @private\n     */\n    proto.onMouseMove = function(event) {\n\n        EditMode.prototype.onMouseMove.call(this, event);\n\n        var editor = this.editor;\n        var selectedMarkup = this.selectedMarkup;\n\n        if(!selectedMarkup || !this.creating) {\n            return;\n        }\n\n        this.dragging = true;\n\n        var movements = this.movements;\n        movements.splice(movements.length-1, 1);\n\n        var mousePosition = editor.getMousePosition();\n        mousePosition = editor.clientToMarkups(mousePosition.x, mousePosition.y);\n\n        // Close polyline if user clicks close to initial point.\n        if (movements.length >= 2 &&\n            areMarkupsPointsInClientRange(movements[0], mousePosition, SNAP_RANGE, this.editor)) {\n            mousePosition = movements[0]; // Snap!\n        }\n\n        movements.push(mousePosition);\n\n        var locations = setPositionAndSize(movements, this);\n        var setPolyline = new SetPolyline(\n            editor,\n            selectedMarkup,\n            this.position,\n            this.size,\n            locations);\n\n        setPolyline.execute();\n    };\n\n    /**\n     * Handler to mouse down events, used to start markups creation.\n     * @private\n     */\n    proto.onMouseDown = function(event) {\n\n        EditMode.prototype.onMouseDown.call(this);\n\n        // User selected an already created markup.\n        if (this.selectedMarkup && !this.creating) {\n            return;\n        }\n\n        if (this.creating) {\n            return;\n        }\n\n        // Creation process.\n        var editor = this.editor;\n        var mousePosition = editor.getMousePosition();\n\n        mousePosition = editor.clientToMarkups(mousePosition.x, mousePosition.y);\n\n        var size = this.size = editor.sizeFromClientToMarkups(1, 1);\n        this.movements = [mousePosition, mousePosition];\n\n        editor.beginActionGroup();\n\n        var markupId = editor.getId();\n        var create = new CreatePolyline(\n            editor,\n            markupId,\n            mousePosition,\n            size,\n            0,\n            [{x:0, y:0}],\n            this.style);\n\n        create.execute();\n\n        this.selectedMarkup = editor.getMarkup(markupId);\n        this.creationBegin();\n    };\n\n    /**\n     * Handler to mouse down events, used to start markups creation.\n     * @private\n     */\n    proto.onMouseUp = function() {\n\n        EditMode.prototype.onMouseUp.call(this);\n\n        if(!this.creating) {\n            return;\n        }\n\n        this.dragging = false;\n\n        // Creation process.\n        var editor = this.editor;\n        var mousePosition = editor.getMousePosition();\n        var movements = this.movements;\n        var closed = false;\n\n        mousePosition = editor.clientToMarkups(mousePosition.x, mousePosition.y);\n\n        if (movements.length > 1 &&\n            areMarkupsPointsInClientRange(movements[movements.length-2], mousePosition, SNAP_RANGE, this.editor)) {\n            return;\n        }\n\n        // Close polyline if user clicks close to initial point.\n        if (movements.length > 2 &&\n            areMarkupsPointsInClientRange(movements[0], mousePosition, SNAP_RANGE, this.editor)) {\n            mousePosition = movements[0]; // Snap!\n            closed = true;\n        }\n\n        movements.splice(movements.length-1, 1);\n\n        if (!closed) {\n            movements.push(mousePosition);\n            movements.push(mousePosition);\n        }\n\n        var polyline = this.selectedMarkup;\n        var locations = setPositionAndSize(movements, polyline);\n        var setPolyline = new SetPolyline(\n            editor,\n            polyline,\n            polyline.position,\n            polyline.size,\n            locations,\n            closed);\n\n        setPolyline.execute();\n\n        if (closed) {\n            this.creationEnd();\n        }\n    };\n\n    proto.destroy = function() {\n        this.onMouseDoubleClick();\n        EditMode.prototype.creationEnd.call(this);\n        EditMode.prototype.destroy.call(this);\n    };\n\n    proto.creationEnd = function() {\n\n        // To pass isMinSizeValid,\n        // probably that test should be done with the markup size (not the recorded by the edit mode).\n        if (this.selectedMarkup) {\n            this.size.x = this.selectedMarkup.size.x;\n            this.size.y = this.selectedMarkup.size.y;\n        }\n\n        EditMode.prototype.creationEnd.call(this);\n\n        this.closed = false;\n        this.movements = [];\n        this.dragging = false;\n        this.creating = false;\n    };\n\n    proto.creationCancel = function() {\n\n        EditMode.prototype.creationCancel.call(this);\n\n        this.closed = false;\n        this.movements = [];\n        this.dragging = false;\n        this.creating = false;\n    };\n\n\n    proto.onMouseDoubleClick = function(event) {\n\n        if(!this.creating) {\n           return;\n        }\n\n        var movements = this.movements;\n        movements.splice(Math.max(0, movements.length-1));\n\n        if (movements.length < 2 ) {\n\n            this.creationCancel();\n        } else {\n\n            var polyline = this.selectedMarkup;\n            var locations = setPositionAndSize(movements, polyline);\n            var setPolyline = new SetPolyline(\n                this.editor,\n                polyline,\n                polyline.position,\n                polyline.size,\n                locations,\n                this.closed);\n\n            setPolyline.execute();\n            this.creationEnd();\n        }\n    };\n\n    function setPositionAndSize(locations, markup) {\n\n        // determine the position of the top-left and bottom-right points\n        var minFn = function(collection, key){\n            var targets = collection.map(function(item){\n                return item[key];\n            });\n            return Math.min.apply(null, targets);\n        };\n\n        var maxFn = function(collection, key){\n            var targets = collection.map(function(item){\n                return item[key];\n            });\n            return Math.max.apply(null, targets);\n        };\n\n        var l = minFn(locations, 'x');\n        var t = minFn(locations, 'y');\n        var r = maxFn(locations, 'x');\n        var b = maxFn(locations, 'y');\n        var w = r - l;\n        var h = b - t;\n\n        markup.size = {x: w, y: h};\n        markup.position = {x: l + w * 0.5, y: t + h * 0.5};\n\n        // Adjust points to relate from the shape's center\n        var position = markup.position;\n        return locations.map(function(point){\n            return {\n                x: point.x - position.x,\n                y: point.y - position.y\n            };\n        });\n    }\n\n","'use strict';\n\nimport { Markup } from './Markup'\nimport * as MarkupTypes from './MarkupTypes'\nimport { createMarkupPathSvg, composeRGBAString,\n    setAttributeToMarkupSvg, updateMarkupPathSvgHitarea, addMarkupMetadata } from './MarkupsCoreUtils'\nimport { cloneStyle } from './StyleUtils'\nimport { EditModePolyline } from './edit-modes/EditModePolyline'\n\n    /**\n     *\n     * @param id\n     * @param editor\n     * @constructor\n     */\n    export function MarkupPolyline(id, editor) {\n\n        var styleAttributes = ['stroke-width', 'stroke-color','stroke-opacity', 'fill-color', 'fill-opacity'];\n        Markup.call(this, id, editor, styleAttributes);\n\n        // bind to this to pass this.globalManager\n        this.addMarkupMetadata = addMarkupMetadata.bind(this);\n\n        this.type = MarkupTypes.MARKUP_TYPE_POLYLINE;\n        this.shape = createMarkupPathSvg('path');\n\n        this.bindDomEvents();\n    }\n\n    MarkupPolyline.prototype = Object.create(Markup.prototype);\n    MarkupPolyline.prototype.constructor = MarkupPolyline;\n\n    var proto = MarkupPolyline.prototype;\n\n    proto.getEditMode = function() {\n\n        return new EditModePolyline(this.editor);\n    };\n\n    /**\n     * Sets top-left and bottom-right values in client space coordinates (2d).\n     *\n     * @param position\n     * @param size\n     * @param locations\n     * @param closed\n     */\n    proto.set = function(position, size, locations, closed) {\n\n        this.rotation = 0; // Reset angle //\n        this.locations = locations.concat();\n\n        this.size.x = (size.x === 0) ? 1 : size.x;\n        this.size.y = (size.y === 0) ? 1 : size.y;\n\n        this.closed = closed;\n\n        this.setSize(position, size.x, size.y);\n        this.updateStyle();\n    };\n\n\n    /**\n     * Applies data values into DOM element style/attribute(s)\n     *\n     */\n    proto.updateStyle = function() {\n\n        var style = this.style;\n        var shape = this.shape;\n\n        var strokeWidth = this.style['stroke-width'];\n        var strokeColor = this.highlighted ? this.highlightColor : composeRGBAString(style['stroke-color'], style['stroke-opacity']);\n        var fillColor = this.closed ? composeRGBAString(style['fill-color'], style['fill-opacity']) : 'none';\n        var transform = this.getTransform();\n\n        setAttributeToMarkupSvg(shape, 'd',  this.getPath().join(' '));\n        setAttributeToMarkupSvg(shape, 'stroke-width', strokeWidth);\n        setAttributeToMarkupSvg(shape, 'stroke', strokeColor);\n        setAttributeToMarkupSvg(shape, 'fill', fillColor);\n        setAttributeToMarkupSvg(shape, 'transform', transform);\n        updateMarkupPathSvgHitarea(shape, this.editor);\n    };\n\n    /**\n     * Changes the position and size of the markup.\n     * This gets called by the Autodesk.Viewing.Extensions.Markups.Core.SetSize edit action\n     * @param {{x: Number, y: Number}} position\n     * @param {Number} width\n     * @param {Number} height\n     */\n    proto.setSize = function (position, width, height) {\n\n        width = (width === 0 ? 1 : width);\n        height = (height === 0 ? 1 : height);\n\n        var locations = this.locations;\n        var locationsCount = locations.length;\n\n        var scaleX = width / this.size.x;\n        var scaleY = height / this.size.y;\n\n        for(var i = 0; i < locationsCount; ++i) {\n\n            var point = locations[i];\n\n            point.x *= scaleX;\n            point.y *= scaleY;\n        }\n\n        this.position.x = position.x;\n        this.position.y = position.y;\n\n        this.size.x = width;\n        this.size.y = height;\n\n        this.updateStyle();\n    };\n\n    proto.setMetadata = function() {\n\n        var metadata = cloneStyle(this.style);\n\n        metadata.type = this.type;\n        metadata.position = [this.position.x, this.position.y].join(\" \");\n        metadata.size = [this.size.x, this.size.y].join(\" \");\n        metadata.rotation = String(this.rotation);\n        metadata.locations = this.locations.map(function(point){\n            return [point.x, point.y].join(\" \");\n        }).join(\" \");\n\n        return this.addMarkupMetadata(this.shape, metadata);\n    };\n\n    proto.getPath = function() {\n\n        var path = [];\n        var locations = this.locations;\n        var locationsCount = locations.length;\n\n        if (locationsCount === 0) {\n            return ' ';\n        }\n\n        path.push('M');\n        path.push(locations[0].x);\n        path.push(locations[0].y);\n\n        for (var i = 1; i < locationsCount; ++i) {\n\n            var locationA = locations[i - 1];\n            var locationB = locations[i];\n\n            path.push('l');\n            path.push(locationB.x - locationA.x);\n            path.push(locationB.y - locationA.y);\n        }\n\n        this.closed && path.push('z');\n        return path;\n    };\n","'use strict';\n\nimport { EditAction } from './EditAction'\nimport { MarkupPolyline } from '../MarkupPolyLine'\nimport { cloneStyle } from '../StyleUtils'\n\n    /**\n     *\n     * @param editor\n     * @param id\n     * @param position\n     * @param size\n     * @param rotation\n     * @param locations\n     * @param closed\n     * @param style\n     * @constructor\n     */\n    export function CreatePolyline(editor, id, position, size, rotation, locations, style, closed) {\n\n        EditAction.call(this, editor, 'CREATE-POLYLINE', id);\n\n        this.selectOnExecution = false;\n        this.position = position;\n        this.size = size;\n        this.rotation = rotation;\n        this.movements = locations.concat();\n        this.closed = closed;\n        this.style = cloneStyle(style);\n    }\n\n    CreatePolyline.prototype = Object.create(EditAction.prototype);\n    CreatePolyline.prototype.constructor = CreatePolyline;\n\n    var proto = CreatePolyline.prototype;\n\n    proto.redo = function() {\n\n        var editor = this.editor;\n        var polyline = new MarkupPolyline(this.targetId, editor);\n\n        editor.addMarkup(polyline);\n\n        polyline.set(this.position, this.size, this.movements, this.closed);\n        polyline.setRotation(this.rotation);\n        polyline.setStyle(this.style);\n    };\n\n    proto.undo = function() {\n\n        var markup = this.editor.getMarkup(this.targetId);\n        markup && this.editor.removeMarkup(markup);\n    };\n\n","'use strict';\n\nimport { EditAction } from './EditAction'\nimport { CreatePolycloud } from './CreatePolycloud'\n\n    /**\n     *\n     * @param editor\n     * @param polycloud\n     * @constructor\n     */\n    export function DeletePolycloud(editor, polycloud) {\n\n        EditAction.call(this, editor, 'DELETE-POLYCLOUD', polycloud.id);\n        this.createPolycloud = new CreatePolycloud(\n            editor,\n            polycloud.id,\n            polycloud.position,\n            polycloud.size,\n            polycloud.rotation,\n            polycloud.locations,\n            polycloud.getStyle(),\n            polycloud.closed);\n    }\n\n    DeletePolycloud.prototype = Object.create(EditAction.prototype);\n    DeletePolycloud.prototype.constructor = DeletePolycloud;\n\n    var proto =  DeletePolycloud.prototype;\n\n    proto.redo = function() {\n\n        this.createPolycloud.undo();\n    };\n\n    proto.undo = function() {\n\n        this.createPolycloud.redo();\n    };\n","'use strict';\n\nimport { EditAction } from './EditAction'\n\n    /**\n     *\n     * @param editor\n     * @param polycloud\n     * @param position\n     * @param size\n     * @param locations\n     * @param closed\n     * @constructor\n     */\n    export function SetPolycloud(editor, polycloud, position, size, locations, closed) {\n\n        EditAction.call(this, editor, 'SET-POLYCLOUD', polycloud.id);\n\n        this.position = position;\n        this.size = size;\n        this.locations = locations.concat();\n        this.closed = closed;\n\n        // No need to save old data\n    }\n\n    SetPolycloud.prototype = Object.create(EditAction.prototype);\n    SetPolycloud.prototype.constructor = SetPolycloud;\n\n    var proto = SetPolycloud.prototype;\n\n    proto.redo = function() {\n\n        var polycloud = this.editor.getMarkup(this.targetId);\n        if(!polycloud) {\n            return;\n        }\n\n        polycloud.set(this.position, this.size, this.locations, this.closed);\n    };\n\n    proto.undo = function() {\n        // No need for undo.\n    };\n\n    proto.merge = function(action) {\n\n        if (this.targetId === action.targetId &&\n            this.type === action.type) {\n\n            this.locations = action.locations.concat();\n            this.position = action.position;\n            this.size = action.size;\n            this.closed = action.closed;\n            return true;\n        }\n        return false;\n    };\n\n    /**\n     * @returns {boolean}\n     */\n    proto.isIdentity = function() {\n\n        return false; // No need to optimize, always false.\n    };\n\n","'use strict';\n\nimport { EditMode } from './EditMode'\nimport { DeletePolycloud } from '../edit-actions/DeletePolycloud'\nimport { CreatePolycloud } from '../edit-actions/CreatePolycloud'\nimport { SetPolycloud } from '../edit-actions/SetPolycloud'\nimport * as MarkupTypes from '../MarkupTypes'\nimport { areMarkupsPointsInClientRange } from '../MarkupsCoreUtils'\n\n    var SNAP_RANGE = 25;\n\n    /**\n     *\n     * @param editor\n     * @constructor\n     */\n    export function EditModePolycloud(editor) {\n\n        var styleAttributes = ['stroke-width', 'stroke-color','stroke-opacity', 'fill-color', 'fill-opacity'];\n        EditMode.call(this, editor, MarkupTypes.MARKUP_TYPE_POLYCLOUD, styleAttributes);\n\n        this.creationMethod = this.CREATION_METHOD_CLICKS;\n        this.movements = [];\n    }\n\n    EditModePolycloud.prototype = Object.create(EditMode.prototype);\n    EditModePolycloud.prototype.constructor = EditModePolycloud;\n\n    var proto = EditModePolycloud.prototype;\n\n    proto.deleteMarkup = function(markup, cantUndo) {\n\n        markup = markup || this.selectedMarkup;\n        if (markup && markup.type == this.type) {\n            var movements = this.movements;\n            if (this.creating && movements.length >= 2) {\n                movements.pop();\n                movements.pop();\n                var lastIndex = movements.length - 1;\n                if (lastIndex >= 0) {\n                    // duplicate last location\n                    var lastMove = movements[lastIndex];\n                    movements.push(lastMove);\n                    var locations = setPositionAndSize(movements, this);\n                    var setPolycloud = new SetPolycloud(\n                        this.editor,\n                        markup,\n                        this.position,\n                        this.size,\n                        locations);\n\n                    setPolycloud.execute();\n                }\n            }\n            else {\n                var deletePolycloud = new DeletePolycloud(this.editor, markup);\n                deletePolycloud.addToHistory = !cantUndo;\n                deletePolycloud.execute();\n                this.creationEnd();\n                return true;\n            }\n        }\n        return false;\n    };\n\n    /**\n     * Handler to mouse move events, used to create markups.\n     * @param {MouseEvent} event Mouse event.\n     * @private\n     */\n    proto.onMouseMove = function(event) {\n\n        EditMode.prototype.onMouseMove.call(this, event);\n\n        var editor = this.editor;\n        var selectedMarkup = this.selectedMarkup;\n\n        if(!selectedMarkup || !this.creating) {\n            return;\n        }\n\n        this.dragging = true;\n\n        var movements = this.movements;\n        movements.splice(movements.length-1, 1);\n\n        var mousePosition = editor.getMousePosition();\n        mousePosition = editor.clientToMarkups(mousePosition.x, mousePosition.y);\n\n        // Close polycloud if user clicks close to initial point.\n        if (movements.length >= 2 &&\n            areMarkupsPointsInClientRange(movements[0], mousePosition, SNAP_RANGE, this.editor)) {\n            mousePosition = movements[0]; // Snap!\n        }\n\n        movements.push(mousePosition);\n\n        var locations = setPositionAndSize(movements, this);\n        var setPolycloud = new SetPolycloud(\n            editor,\n            selectedMarkup,\n            this.position,\n            this.size,\n            locations);\n\n        setPolycloud.execute();\n    };\n\n    /**\n     * Handler to mouse down events, used to start markups creation.\n     * @private\n     */\n    proto.onMouseDown = function() {\n\n        EditMode.prototype.onMouseDown.call(this);\n\n        // User selected an already created markup.\n        if (this.selectedMarkup && !this.creating) {\n            return;\n        }\n\n        if (this.creating) {\n            return;\n        }\n\n        // Creation process.\n        var editor = this.editor;\n        var mousePosition = editor.getMousePosition();\n\n        mousePosition = editor.clientToMarkups(mousePosition.x, mousePosition.y);\n\n        var size = this.size = editor.sizeFromClientToMarkups(1, 1);\n        this.movements = [mousePosition, mousePosition];\n\n        editor.beginActionGroup();\n\n        var markupId = editor.getId();\n        var create = new CreatePolycloud(\n            editor,\n            markupId,\n            mousePosition,\n            size,\n            0,\n            [{x: 0, y: 0 }],\n            this.style);\n\n        create.execute();\n\n        this.selectedMarkup = editor.getMarkup(markupId);\n        this.creationBegin();\n    };\n\n    /**\n     * Handler to mouse down events, used to start markups creation.\n     * @private\n     */\n    proto.onMouseUp = function(event) {\n\n        EditMode.prototype.onMouseUp.call(this);\n\n        if(!this.creating) {\n            return;\n        }\n\n        this.dragging = false;\n\n        // Creation process.\n        var editor = this.editor;\n        var mousePosition = editor.getMousePosition();\n        var movements = this.movements;\n        var closed = false;\n\n        mousePosition = editor.clientToMarkups(mousePosition.x, mousePosition.y);\n\n        if (movements.length > 1 &&\n            areMarkupsPointsInClientRange(movements[movements.length-2], mousePosition, SNAP_RANGE, this.editor)) {\n            return;\n        }\n\n        // Close polycloud if user clicks close to initial point.\n        if (movements.length > 2 &&\n            areMarkupsPointsInClientRange(movements[0], mousePosition, SNAP_RANGE, this.editor)) {\n            mousePosition = movements[0]; // Snap!\n            closed = true;\n        }\n\n        movements.splice(movements.length-1, 1);\n\n        if (!closed) {\n            movements.push(mousePosition);\n            movements.push(mousePosition);\n        }\n\n        var polycloud = this.selectedMarkup;\n        var locations = setPositionAndSize(movements, polycloud);\n        var setPolycloud = new SetPolycloud(\n            editor,\n            polycloud,\n            polycloud.position,\n            polycloud.size,\n            locations,\n            closed);\n\n        setPolycloud.execute();\n\n        if (closed) {\n            this.creationEnd();\n        }\n    };\n\n    proto.onMouseDoubleClick = function(event) {\n\n        if(!this.creating) {\n            return;\n        }\n\n        var movements = this.movements;\n        movements.splice(Math.max(0, movements.length-1));\n\n        if (movements.length < 2 ) {\n\n            this.creationCancel();\n        } else {\n\n            var polycloud = this.selectedMarkup;\n            var locations = setPositionAndSize(movements, polycloud);\n            var setPolycloud = new SetPolycloud(\n                this.editor,\n                polycloud,\n                polycloud.position,\n                polycloud.size,\n                locations,\n                true);\n\n            setPolycloud.execute();\n            this.creationEnd();\n        }\n    };\n\n    proto.destroy = function() {\n        this.onMouseDoubleClick();\n        EditMode.prototype.creationEnd.call(this);\n        EditMode.prototype.destroy.call(this);\n    };\n\n    proto.creationEnd = function() {\n\n        // To pass isMinSizeValid,\n        // probably that test should be done with the markup size (not the recorded by the edit mode).\n        if (this.selectedMarkup) {\n            this.size.x = this.selectedMarkup.size.x;\n            this.size.y = this.selectedMarkup.size.y;\n        }\n        \n        EditMode.prototype.creationEnd.call(this);\n\n        this.closed = false;\n        this.movements = [];\n        this.dragging = false;\n        this.creating = false;\n    };\n\n    proto.creationCancel = function() {\n\n        EditMode.prototype.creationCancel.call(this);\n\n        this.closed = false;\n        this.movements = [];\n        this.dragging = false;\n        this.creating = false;\n    };\n\n    function setPositionAndSize(locations, markup) {\n\n        // determine the position of the top-left and bottom-right points\n        var minFn = function(collection, key){\n            var targets = collection.map(function(item){\n                return item[key];\n            });\n            return Math.min.apply(null, targets);\n        };\n\n        var maxFn = function(collection, key){\n            var targets = collection.map(function(item){\n                return item[key];\n            });\n            return Math.max.apply(null, targets);\n        };\n\n        var strokeWidth = markup.style['stroke-width'];\n        var radius = strokeWidth * 2 + strokeWidth * 0.5;\n\n        var l = minFn(locations, 'x') - radius;\n        var t = minFn(locations, 'y') - radius;\n        var r = maxFn(locations, 'x') + radius;\n        var b = maxFn(locations, 'y') + radius;\n        var w = r - l;\n        var h = b - t;\n\n        markup.size = {x: w, y: h};\n        markup.position = {x: l + w * 0.5, y: t + h * 0.5};\n\n        // Adjust points to relate from the shape's center\n        var position = markup.position;\n        return locations.map(function(point){\n            return {\n                x: point.x - position.x,\n                y: point.y - position.y\n            };\n        });\n    }\n","'use strict';\n\nimport { Markup } from './Markup'\nimport * as MarkupTypes from './MarkupTypes'\nimport { createMarkupPathSvg, composeRGBAString, setAttributeToMarkupSvg,\n    updateMarkupPathSvgHitarea, addMarkupMetadata } from './MarkupsCoreUtils'\nimport { cloneStyle } from './StyleUtils'\nimport { EditModePolycloud } from './edit-modes/EditModePolycloud'\n\n    /**\n     *\n     * @param id\n     * @param editor\n     * @constructor\n     */\n    export function MarkupPolycloud(id, editor) {\n\n        var styleAttributes = ['stroke-width', 'stroke-color','stroke-opacity', 'fill-color', 'fill-opacity'];\n        Markup.call(this, id, editor, styleAttributes);\n\n        // bind to this to pass this.globalManager\n        this.addMarkupMetadata = addMarkupMetadata.bind(this);\n\n        this.type = MarkupTypes.MARKUP_TYPE_POLYCLOUD;\n        this.locations = [];\n        this.shape = createMarkupPathSvg();\n\n        this.bindDomEvents();\n    }\n\n    MarkupPolycloud.prototype = Object.create(Markup.prototype);\n    MarkupPolycloud.prototype.constructor = MarkupPolycloud;\n\n    var proto = MarkupPolycloud.prototype;\n\n    proto.getEditMode = function() {\n\n        return new EditModePolycloud(this.editor);\n    };\n\n    /**\n     *\n     * Sets top-left and bottom-right values in client space coordinates (2d).\n     * @param position\n     * @param size\n     * @param locations\n     * @param closed\n     */\n    proto.set = function(position, size, locations, closed) {\n\n        this.rotation = 0; // Reset angle //\n        this.locations = locations.concat();\n\n        this.size.x = (size.x === 0) ? 1 : size.x;\n        this.size.y = (size.y === 0) ? 1 : size.y;\n\n        this.closed = closed;\n\n        this.setSize(position, size.x, size.y);\n        this.updateStyle();\n    };\n\n    /**\n     * Applies data values into DOM element style/attribute(s)\n     *\n     */\n    proto.updateStyle = function() {\n\n        var style = this.style;\n        var shape = this.shape;\n        var path = this.getPath().join(' ');\n\n        var strokeWidth = this.style['stroke-width'];\n        var strokeColor = this.highlighted ? this.highlightColor : composeRGBAString(style['stroke-color'], style['stroke-opacity']);\n        var fillColor = this.closed ? composeRGBAString(style['fill-color'], style['fill-opacity']) : 'none';\n        var transform = this.getTransform();\n\n        setAttributeToMarkupSvg(shape, 'd', path);\n        setAttributeToMarkupSvg(shape, 'stroke-width', strokeWidth);\n        setAttributeToMarkupSvg(shape, 'stroke', strokeColor);\n        setAttributeToMarkupSvg(shape, 'fill', fillColor);\n        setAttributeToMarkupSvg(shape, 'transform', transform);\n        updateMarkupPathSvgHitarea(shape, this.editor);\n    };\n\n    /**\n     * Changes the position and size of the markup.\n     * This gets called by the Autodesk.Viewing.Extensions.Markups.Core.SetSize edit action\n     * @param {{x: Number, y: Number}} position\n     * @param {Number} width\n     * @param {Number} height\n     */\n    proto.setSize = function (position, width, height) {\n\n        width = (width === 0 ? 1 : width);\n        height = (height === 0 ? 1 : height);\n\n        var locations = this.locations;\n        var locationsCount = locations.length;\n\n        var scaleX = width / this.size.x;\n        var scaleY = height / this.size.y;\n\n        for(var i = 0; i < locationsCount; ++i) {\n\n            var point = locations[i];\n\n            point.x *= scaleX;\n            point.y *= scaleY;\n        }\n\n        this.position.x = position.x;\n        this.position.y = position.y;\n\n        this.size.x = width;\n        this.size.y = height;\n\n        this.updateStyle();\n    };\n\n    proto.setMetadata = function() {\n\n        var metadata = cloneStyle(this.style);\n\n        metadata.type = this.type;\n        metadata.position = [this.position.x, this.position.y].join(\" \");\n        metadata.size = [this.size.x, this.size.y].join(\" \");\n        metadata.rotation = String(this.rotation);\n        metadata.locations = this.locations.map(function(point){\n            return [point.x, point.y].join(\" \");\n        }).join(\" \");\n\n        return this.addMarkupMetadata(this.shape, metadata);\n    };\n\n    proto.getPath = function() {\n\n        function getOrientation(locations) {\n\n            switch (locations.length) {\n\n                case 0:\n                case 1:\n                    return 1;\n                case 2:\n\n                    var fstPoint = locations[0];\n                    var sndPoint = locations[1];\n\n                    return fstPoint.y > sndPoint.y ? 1 : -1;\n                default:\n\n                    var pointA = locations[0];\n                    var pointB = locations[1];\n                    var pointC = locations[2];\n\n                    var orientation =\n                        (pointB.x - pointA.x) * (pointB.y + pointA.y) +\n                        (pointC.x - pointB.x) * (pointC.y + pointB.y);\n\n                    return orientation < 0 ? 1 : -1;\n            }\n        }\n\n        function getSides(locations, closed) {\n\n            var locationsCount = locations.length;\n\n            var sides = [];\n            var sidesCount = locationsCount - (closed ? 0 : 1);\n\n            for(var i = 0; i < sidesCount; ++i) {\n\n                var locationA = locations[i];\n                var locationB = locations[(i+1)%locationsCount];\n\n                var dx = locationB.x - locationA.x;\n                var dy = locationB.y - locationA.y;\n\n                var length = Math.sqrt(dx * dx + dy * dy);\n\n                sides.push({\n                    index: i,\n                    pointA: new THREE.Vector3(locationA.x, locationA.y, 0),\n                    pointB: new THREE.Vector3(locationB.x, locationB.y, 0),\n                    vecAB:  new THREE.Vector3(dx / length, dy / length, 0),\n                    vecBA:  new THREE.Vector3(-dx / length, -dy / length, 0),\n                    length: length\n                });\n            }\n\n            return sides;\n        }\n\n        function updateCorners(side, cornerA, cornerB, orientation) {\n            var rA = cornerA.radius;\n            var rB = cornerB.radius;\n            var D = side.length;\n\n            if (rA > 0 && rB > 0 && rA + rB > D && Math.abs(rA - rB) < D) {\n                // Corner arcs overlap, so correct them by finding the circle-circle intersection\n                var a = side.pointA.x;\n                var b = side.pointA.y;\n                var c = side.pointB.x;\n                var d = side.pointB.y;\n\n                var delta = 0.25 * Math.sqrt((D + rA + rB) * (D + rA - rB) * (D - rA + rB) * (-D + rA + rB));\n                var xS = (a + c) / 2 + (c - a) * (rA*rA - rB*rB) / (2*D*D);\n                var xT = 2*(b - d) / (D*D) * delta;\n                var yS = (b + d) / 2 + (d - b) * (rA*rA - rB*rB) / (2*D*D);\n                var yT = 2*(a - c) / (D*D) * delta;\n                var x1 = xS + xT;\n                var x2 = xS - xT;\n                var y1 = yS - yT;\n                var y2 = yS + yT;\n                var testPointOnCircle = Math.abs((x1 - a) * (x1 - a) + (y1 - b) * (y1 - b) - rA * rA);\n                if (testPointOnCircle > 0.0000001) {\n                    var tmp = y1;\n                    y1 = y2;\n                    y2 = tmp;\n                }\n\n                var intersec = new THREE.Vector3(x1, y1, 0);\n                var intersecSide = Math.sign(intersec.clone().sub(side.pointA).cross(side.vecAB).z);\n                if (intersecSide !== orientation) {\n                    intersec.set(x2, y2, 0);\n                }\n\n                cornerA.pointB = intersec.clone();\n                cornerB.pointA = intersec.clone();\n\n                return true;\n            }\n\n            return false;\n        }\n\n        function updateSides(sides, corners, radius, orientation) {\n\n            var diameter = radius * 2;\n            var sidesCount = sides.length;\n\n            for(var i = 0; i < sidesCount; ++i) {\n\n                var side = sides[i];\n                var cornerA = corners[i];\n                var cornerB = corners[(i+1)%sidesCount];\n\n                side.bodyA = side.vecAB.clone().multiplyScalar(cornerA.radius).add(side.pointA);\n                side.bodyB = side.vecBA.clone().multiplyScalar(cornerB.radius).add(side.pointB);\n\n                if (updateCorners(side, cornerA, cornerB, orientation)) {\n                    side.body = 0;\n                    side.bodyDiameter = side.bodyCount = 0;\n                } else {\n                    side.body = side.bodyB.clone().sub(side.bodyA).length();\n                    side.bodyCount = Math.round(side.body / diameter);\n                    if (side.bodyCount === 0 && side.body > 0.5*radius) {\n                        side.bodyCount = 1;\n                    }\n                    side.bodyDiameter = diameter + (side.body - diameter * side.bodyCount) / side.bodyCount;\n                }\n\n                side.bodyRadius = side.bodyDiameter * 0.5;\n            }\n        }\n\n        function getCorners(sides, radius, closed) {\n\n            var corners = [];\n            var sidesCount = sides.length;\n\n            for(var i = 0; i < sidesCount; ++i) {\n\n                var sideA = sides[i !== 0 ? i-1 : sidesCount-1];\n                var sideB = sides[i];\n                var large = sideA.vecBA.clone().cross(sideB.vecAB).z < 0;\n\n                var sidesTooShort = sideA.length < radius || sideB.length < radius;\n                if (sidesTooShort || (i === 0 && !closed)) {\n\n                    corners.push({\n                        pointA: sideB.pointA.clone(),\n                        pointB: sideB.pointA.clone(),\n                        radius: 0,\n                        large: false\n                    });\n                } else {\n\n                    corners.push({\n                        pointA: sideB.pointA.clone().add(sideA.vecBA.clone().multiplyScalar(radius)),\n                        pointB: sideB.pointA.clone().add(sideB.vecAB.clone().multiplyScalar(radius)),\n                        radius: radius,\n                        large: large\n                    });\n                }\n            }\n\n            return corners;\n        }\n\n        function createSidePath(side, orientation, path) {\n\n            var count = side.bodyCount;\n            if (count === 0) {\n                return;\n            }\n\n            var radius = side.bodyRadius;\n            var diameter = side.bodyDiameter;\n\n            var xValueInset = diameter * 0.05;\n            var yValueOffset = radius * 3.5 / 3.0;\n\n            var p1 = new THREE.Vector3(xValueInset, orientation * -yValueOffset);\n            var p2 = new THREE.Vector3(diameter - xValueInset, orientation * -yValueOffset);\n            var p3 = new THREE.Vector3(diameter, 0);\n\n            var angle = Math.acos(side.vecAB.x) * (side.vecAB.y < 0 ? -1 : 1);\n            var rotation = new THREE.Matrix4().makeRotationZ(angle);\n\n            p1.applyMatrix4(rotation);\n            p2.applyMatrix4(rotation);\n            p3.applyMatrix4(rotation);\n\n            for (var i = 0; i < count; ++i) {\n\n                path.push('c');\n                path.push(p1.x);\n                path.push(p1.y);\n                path.push(p2.x);\n                path.push(p2.y);\n                path.push(p3.x);\n                path.push(p3.y);\n            }\n        }\n\n        function createCornerPath(corner, first, orientation, path) {\n\n            if (first) {\n\n                path.push('M');\n                path.push(corner.pointA.x);\n                path.push(corner.pointA.y);\n            }\n\n            var large = orientation === 1 ? corner.large : !corner.large;\n\n            if (corner.radius !== 0) {\n\n                path.push('a');\n                path.push(corner.radius);\n                path.push(corner.radius);\n                path.push(0);\n                path.push(large ? 1 : 0);\n                path.push(orientation === 1 ? 1 : 0);\n                path.push(corner.pointB.x - corner.pointA.x);\n                path.push(corner.pointB.y - corner.pointA.y);\n            }\n            return path;\n        }\n\n\n        var strokeWidth = this.style['stroke-width'];\n        var radius = strokeWidth * 2;\n        var orientation = getOrientation(this.locations);\n        var closed = this.closed;\n        var path = [];\n\n        var sides = getSides(this.locations, closed);\n        var corners = getCorners(sides, radius, closed);\n        var cornersCount = corners.length;\n\n        updateSides(sides, corners, radius, orientation);\n\n        for(var i = 0; i < cornersCount; ++i) {\n\n            createCornerPath(corners[i], i === 0, orientation, path);\n            createSidePath(sides[i], orientation, path);\n        }\n\n        closed && path.push('z');\n        return path;\n    };\n","'use strict';\n\nimport { EditAction } from './EditAction'\nimport { MarkupPolycloud } from '../MarkupPolycloud'\nimport { cloneStyle } from '../StyleUtils'\n\n    /**\n     *\n     * @param editor\n     * @param id\n     * @param position\n     * @param size\n     * @param rotation\n     * @param locations\n     * @param closed\n     * @param style\n     * @constructor\n     */\n    export function CreatePolycloud(editor, id, position, size, rotation, locations, style, closed) {\n\n        EditAction.call(this, editor, 'CREATE-POLYCLOUD', id);\n\n        this.selectOnExecution = false;\n        this.position = position;\n        this.size = size;\n        this.rotation = rotation;\n        this.movements = locations.concat();\n        this.style = cloneStyle(style);\n        this.closed = closed;\n    }\n\n    CreatePolycloud.prototype = Object.create(EditAction.prototype);\n    CreatePolycloud.prototype.constructor = CreatePolycloud;\n\n    var proto = CreatePolycloud.prototype;\n\n    proto.redo = function() {\n\n        var editor = this.editor;\n        var polyline = new MarkupPolycloud(this.targetId, editor);\n\n        editor.addMarkup(polyline);\n\n        polyline.set(this.position, this.size, this.movements, this.closed);\n        polyline.setRotation(this.rotation);\n        polyline.setStyle(this.style);\n    };\n\n    proto.undo = function() {\n\n        var markup = this.editor.getMarkup(this.targetId);\n        markup && this.editor.removeMarkup(markup);\n    };\n\n","'use strict';\n\nimport { EditAction } from './EditAction'\nimport { CreateHighlight } from './CreateHighlight'\n\n    /**\n     *\n     * @param editor\n     * @param highlight\n     * @constructor\n     */\n    export function DeleteHighlight(editor, highlight) {\n        EditAction.call(this, editor, 'DELETE-HIGHLIGHT', highlight.id);\n        this.createHighlight = new CreateHighlight(\n            editor,\n            highlight.id,\n            highlight.position,\n            highlight.size,\n            highlight.rotation,\n            highlight.locations,\n            highlight.getStyle());\n    }\n\n    DeleteHighlight.prototype = Object.create(EditAction.prototype);\n    DeleteHighlight.prototype.constructor = DeleteHighlight;\n\n    var proto = DeleteHighlight.prototype;\n\n    proto.redo = function() {\n\n        this.createHighlight.undo();\n    };\n\n    proto.undo = function() {\n\n        this.createHighlight.redo();\n    };\n","'use strict';\n\nimport { EditAction } from './EditAction'\n\n    /**\n     *\n     * @param editor\n     * @param highlight\n     * @param position\n     * @param size\n     * @param locations\n     * @constructor\n     */\n    export function SetHighlight(editor, highlight, position, size, locations, isAbsoluteCoords) {\n\n        EditAction.call(this, editor, 'SET-HIGHLIGHT', highlight.id);\n\n        this.position = position;\n        this.size = size;\n        this.locations = isAbsoluteCoords ? locations : locations.slice(0);\n        this.isAbsoluteCoords = isAbsoluteCoords;\n\n        // No need to save old data\n    }\n\n    SetHighlight.prototype = Object.create(EditAction.prototype);\n    SetHighlight.prototype.constructor = SetHighlight;\n\n    var proto = SetHighlight.prototype;\n\n    proto.redo = function() {\n\n        var highlight = this.editor.getMarkup(this.targetId);\n        if (!highlight) {\n            return;\n        }\n\n        highlight.set(this.position, this.size, this.locations, this.isAbsoluteCoords);\n    };\n\n    proto.undo = function() {\n        // No need for undo.\n    };\n\n    proto.merge = function(action) {\n\n        if (this.targetId === action.targetId &&\n            this.type === action.type) {\n\n            this.locations = action.isAbsoluteCoords ? action.locations : action.locations.slice(0);\n            this.position = action.position;\n            this.size = action.size;\n            this.isAbsoluteCoords = action.isAbsoluteCoords;\n            return true;\n        }\n        return false;\n    };\n\n    /**\n     * @returns {boolean}\n     */\n    proto.isIdentity = function() {\n\n        return false; // No need to optimize, always false.\n    };\n\n","'use strict';\n\nimport { EditModePen } from './EditModePen'\nimport { DeleteHighlight } from '../edit-actions/DeleteHighlight'\nimport { CreateHighlight } from '../edit-actions/CreateHighlight'\nimport { SetHighlight } from '../edit-actions/SetHighlight'\nimport * as MarkupTypes from '../MarkupTypes'\n\n    /**\n     *\n     * @param editor\n     * @constructor\n     */\n    export function EditModeHighlight(editor) {\n\n        var styleAttributes = ['stroke-width', 'stroke-color', 'stroke-opacity'];\n        EditModePen.call(this, editor, MarkupTypes.MARKUP_TYPE_HIGHLIGHT, styleAttributes);\n\n        var normaStrokeWidth = editor.getStrokeWidth();\n        this.style['stroke-opacity'] = 0.50;\n        this.style['stroke-color'] = '#ffff00';\n        this.style['stroke-width'] = 4 * normaStrokeWidth; // Very Thick\n    }\n\n    EditModeHighlight.prototype = Object.create(EditModePen.prototype);\n    EditModeHighlight.prototype.constructor = EditModeHighlight;\n\n    var proto = EditModeHighlight.prototype;\n\n    proto.createPen = function(markupId, position, size, rotation, locations) {\n        return new CreateHighlight(this.editor,\n            markupId,\n            position,\n            size,\n            rotation,\n            locations,\n            this.style);\n    };\n\n    proto.deletePen = function(markup) {\n        return new DeleteHighlight(this.editor, markup);\n    };\n\n    proto.setPen = function(position, size, locations, isAbsoluteCoords) {\n        return new SetHighlight(this.editor,\n            this.selectedMarkup,\n            position,\n            size,\n            locations,\n            isAbsoluteCoords);\n    };\n\n","'use strict';\n\nimport { MarkupPen } from './MarkupPen'\nimport * as MarkupTypes from './MarkupTypes'\nimport { EditModeHighlight } from './edit-modes/EditModeHighlight'\n\n    /**\n     *\n     * @param id\n     * @param editor\n     * @constructor\n     */\n    export function MarkupHighlight(id, editor) {\n\n        MarkupPen.call(this, id, editor);\n        this.type = MarkupTypes.MARKUP_TYPE_HIGHLIGHT;\n    }\n\n    MarkupHighlight.prototype = Object.create(MarkupPen.prototype);\n    MarkupHighlight.prototype.constructor = MarkupHighlight;\n\n    var proto = MarkupHighlight.prototype;\n\n    proto.getEditMode = function() {\n\n        return new EditModeHighlight(this.editor);\n    };\n\n","'use strict';\n\nimport { EditAction } from './EditAction'\nimport { MarkupHighlight } from '../MarkupHighlight'\nimport { cloneStyle } from '../StyleUtils'\n\n    /**\n     *\n     * @param editor\n     * @param id\n     * @param position\n     * @param size\n     * @param rotation\n     * @param locations\n     * @param style\n     * @constructor\n     */\n    export function CreateHighlight(editor, id, position, size, rotation, locations, style) {\n\n        EditAction.call(this, editor, 'CREATE-HIGHLIGHT', id);\n\n        this.selectOnExecution = false;\n        this.position = position;\n        this.size = size;\n        this.rotation = rotation;\n        this.movements = locations.slice(0);\n        this.style = cloneStyle(style);\n    }\n\n    CreateHighlight.prototype = Object.create(EditAction.prototype);\n    CreateHighlight.prototype.constructor = CreateHighlight;\n\n    var proto = CreateHighlight.prototype;\n\n    proto.redo = function() {\n\n        var editor = this.editor;\n        var highlight = new MarkupHighlight(this.targetId, editor);\n\n        editor.addMarkup(highlight);\n\n        highlight.set(this.position, this.size, this.movements, false);\n        highlight.setRotation(this.rotation);\n        highlight.setStyle(this.style);\n    };\n\n    proto.undo = function() {\n\n        var markup = this.editor.getMarkup(this.targetId);\n        markup && this.editor.removeMarkup(markup);\n    };\n\n\n","'use strict';\n\nimport { EditAction } from './EditAction'\nimport { CreateDimension } from './CreateDimension'\n\n    /**\n     *\n     * @param editor\n     * @param dimension\n     * @constructor\n     */\n    export function DeleteDimension(editor, dimension) {\n\n        // Confusing naming here. Dimension.secondAnchor is the starting point of the dimension,\n        // and dimension.firstAnchor is the final point. In CreateDimension the firstAnchor argument\n        // is the first point of the dimension and the secondAnchor argument is the second\n        // point of the argument. So construct CreateDimension with the secondAnchor before\n        // the firstAnchor. \n        EditAction.call(this, editor, 'DELETE-DIMENSION', dimension.id);\n        this.createDimension = new CreateDimension(\n            editor,\n            dimension.id,\n            dimension.secondAnchor,\n            dimension.firstAnchor,\n            dimension.currentText,\n            dimension.getStyle());\n    }\n\n    DeleteDimension.prototype = Object.create(EditAction.prototype);\n    DeleteDimension.prototype.constructor = DeleteDimension;\n\n    var proto = DeleteDimension.prototype;\n\n    proto.redo = function() {\n\n        this.createDimension.undo();\n    };\n\n    proto.undo = function() {\n\n        this.createDimension.redo();\n    };\n\n\n","'use strict';\n\nimport { EditAction } from './EditAction'\n\n    /**\n     *\n     * @param editor\n     * @param dimension\n     * @param firstAnchor\n     * @param secondAnchor\n     * @constructor\n     */\n    export function SetDimension(editor, dimension, firstAnchor, secondAnchor, text) {\n\n        EditAction.call(this, editor, 'SET-DIMENSION', dimension.id);\n\n        this.newFirstAnchor = {x: firstAnchor.x, y: firstAnchor.y};\n        this.newSecondAnchor = {x: secondAnchor.x, y: secondAnchor.y};   \n        this.oldFirstAnchor = {x: dimension.firstAnchor.x, y: dimension.firstAnchor.y};\n        this.oldSecondAnchor = {x: dimension.secondAnchor.x, y: dimension.secondAnchor.y}; \n        this.newText = text;\n        this.oldText = dimension.currentText;\n    }\n\n    SetDimension.prototype = Object.create(EditAction.prototype);\n    SetDimension.prototype.constructor = SetDimension;\n\n    var proto = SetDimension.prototype;\n\n    proto.redo = function() {\n\n        this.applyState(this.newFirstAnchor, this.newSecondAnchor, this.newText);    \n\n    };\n\n    proto.undo = function() {\n\n        this.applyState(this.oldFirstAnchor, this.oldSecondAnchor, this.oldText);\n\n    };\n\n    proto.merge = function(action) {\n\n        if (this.targetId === action.targetId &&\n            this.type === action.type) {\n\n            this.newFirstAnchor = action.newFirstAnchor;\n            this.newSecondAnchor = action.newSecondAnchor;\n            this.newText = action.newText;\n            return true;\n        }\n        return false;\n    };\n\n    /**\n     *\n     * @private\n     */\n    proto.applyState = function(firstAnchor, secondAnchor, text) {\n\n        var dimension = this.editor.getMarkup(this.targetId);\n\n        if(!dimension) {\n            return;\n        }\n\n        dimension.set(firstAnchor.x, firstAnchor.y, secondAnchor.x, secondAnchor.y, text);\n\n    };\n\n    /**\n     * @returns {boolean}\n     */\n    proto.isIdentity = function() {\n\n        return ((this.newText === this.oldText) && (\n            !this.newFirstAnchor || !this.newSecondAnchor ||\n            this.newFirstAnchor.x === this.oldFirstAnchor.x &&\n            this.newFirstAnchor.y === this.oldFirstAnchor.y &&\n            this.newSecondAnchor.x === this.oldSecondAnchor.x &&\n            this.newSecondAnchor.y === this.oldSecondAnchor.y));\n    };\n","'use strict';\n\nimport { EditMode } from './EditMode'\nimport { DeleteDimension } from '../edit-actions/DeleteDimension'\nimport { CreateDimension } from '../edit-actions/CreateDimension'\nimport { SetDimension } from '../edit-actions/SetDimension'\nimport { SetStyle } from '../edit-actions/SetStyle'\nimport * as MarkupTypes from '../MarkupTypes'\nimport * as MarkupEvents from '../MarkupEvents'\nimport { EditorTextInput } from './EditorTextInput'\nimport { measureTextLines, radiansToDegrees } from '../MarkupsCoreUtils'\n\n    var MeasureCommon = Autodesk.Viewing.MeasureCommon;\n    \n    var MAX_LETTERS = 15;\n    var SPACE = '\\u00A0'; // Non-breaking space\n    var _cursorPosition;\n\n    /**\n     *\n     * @param editor\n     * @constructor\n     */\n    export function EditModeDimension(editor) {\n\n        var self = this;\n\n        var styleAttributes = ['stroke-width', 'stroke-color', 'stroke-opacity', 'font-size', 'font-family', 'font-style', 'font-weight'];\n        EditMode.call(this, editor, MarkupTypes.MARKUP_TYPE_DIMENSION, styleAttributes);\n\n        this.onHistoryChangeBinded = this.onHistoryChange.bind(this);\n\n        this.measurement = new MeasureCommon.Measurement(MeasureCommon.MeasurementTypes.MEASUREMENT_DISTANCE);\n        var viewer = this.viewer;\n        var measureExt = viewer.getExtension('Autodesk.Measure');\n        \n        function abortDimensionMarkup() {\n            self.cancelEditModeChange = true;\n            editor.enterEditMode(); // Selects default edit mode.\n        }\n\n        if (!measureExt) {\n            console.error('Demension markup cant work without measure extension. Please load measure extension first');\n            abortDimensionMarkup();\n        }\n\n        this.sharedMeasureConfig = measureExt.sharedMeasureConfig;\n        \n        // If PDF, force calibration\n        if ((measureExt.forceCalibrate || viewer.model.getData().isLeaflet || viewer.model.getData().isPdf) && !measureExt.calibrationTool.isCalibrated()) {\n            measureExt.openCalibrationRequiredDialog('dimension');\n            abortDimensionMarkup();\n        }\n    }\n\n    EditModeDimension.prototype = Object.create(EditMode.prototype);\n    EditModeDimension.prototype.constructor = EditModeDimension;\n\n    var proto = EditModeDimension.prototype;\n\n    proto.deleteMarkup = function(markup, cantUndo) {\n\n        markup = markup || this.selectedMarkup;\n        if (markup && markup.type == this.type) {\n            var deleteDimension = new DeleteDimension(this.editor, markup);\n            deleteDimension.addToHistory = !cantUndo;\n            deleteDimension.execute();\n            this.creating = false;\n            this.dragging = false;\n            return true;\n        }\n        return false;\n    };\n\n    proto.updateTextBoxStyle = function(style) {\n        if (this.isTextInputHelperActive()) {\n            if (!style) {\n                style = this.textInputHelper.textMarkup.getStyle();\n            }\n\n            this.textInputHelper.setStyle(style);\n            this.updateTextBox(this.textInputHelper.textMarkup);\n        }\n    };\n\n    proto.setStyle = function(style) {\n\n        EditMode.prototype.setStyle.call(this, style);\n        this.updateTextBoxStyle(style);\n\n    };\n\n    proto.notifyAllowNavigation = function(allows) {\n\n        if (allows && this.isTextInputHelperActive()) {\n            this.textInputHelper.acceptAndExit();\n        }\n    };\n\n    proto.creationBegin = function() {\n        EditMode.prototype.creationBegin.call(this);\n    };\n\n    proto.creationEnd = function() {\n\n        this.dragging = false;\n        EditMode.prototype.creationEnd.call(this);\n    };\n\n    proto.isMinSizeValid = function() {\n\n        if (this.minSize !== 0) {\n            var tmp = this.editor.sizeFromMarkupsToClient(this.selectedMarkup.size.x, this.selectedMarkup.size.y);\n            return (tmp.x*tmp.x) >= (this.minSize * this.minSize);\n        }\n\n        return true;\n    };\n\n    proto.creationCancel = function() {\n\n        EditMode.prototype.creationCancel.call(this);\n\n        this.creating = false;\n        this.dragging = false;\n\n    };\n\n    proto.destroy = function() {\n\n        if (this.textInputHelper) {\n\n            if (this.textInputHelper.isActive()) {\n                this.textInputHelper.acceptAndExit();\n            }\n\n            this.editor.actionManager.removeEventListener(MarkupEvents.EVENT_HISTORY_CHANGED, this.onHistoryChangeBinded);\n\n            this.textInputHelper.destroy();\n            this.textInputHelper = null;\n        }\n\n        this.updateViewportId();\n\n        EditMode.prototype.destroy.call(this);\n    };\n\n    proto.getDistance = function() {\n\n        var distance = null;\n\n        this.measurement.computeResult(this.measurement.picks, this.viewer);\n\n        if (this.viewer.model && this.measurement.distanceXYZ) {\n            var d = Autodesk.Viewing.Private.convertUnits(this.viewer.model.getUnitString(), this.sharedMeasureConfig.units, this.sharedMeasureConfig.calibrationFactor, this.measurement.distanceXYZ);\n            return Autodesk.Viewing.Private.formatValueWithUnits(d, this.sharedMeasureConfig.units, 3, this.sharedMeasureConfig.precision);\n        }\n\n        return distance;\n    };\n\n    proto.updateMeasurement = function(measurementNumber) {\n        var editor = this.editor;\n\n        var pick = this.measurement.getPick(measurementNumber);\n        \n        if (_cursorPosition) {\n            pick.geomType = MeasureCommon.SnapType.SNAP_VERTEX;\n            pick.geomVertex = _cursorPosition;\n            pick.intersectPoint = _cursorPosition;\n        } else {\n            editor.snapper.copyResults(pick);\n        }\n\n        return pick;\n    };\n\n    proto.updateViewportId = function(viewportId) {\n        if (this.viewer.model && this.viewer.model.is2d()) {\n            if (!viewportId) {\n                this.viewer.impl.updateViewportId(0);\n                this.editor.snapper.setViewportId(null);\n            }\n            else {\n                // Pass viewport Id to LineShader to make all other geometries with different viewport transparent\n                this.viewer.impl.updateViewportId(viewportId);\n                this.editor.snapper.setViewportId(viewportId);  \n            \n            }\n        }\n    };\n\n    proto.pickFirstAnchor = function() {\n        var editor = this.editor;\n        this.measurement.clearAllPicks();\n        var mousePosition = editor.getMousePosition();\n\n        this.initialX = mousePosition.x;\n        this.initialY = mousePosition.y;\n\n        this.firstAnchor = editor.positionFromClientToMarkups(this.initialX, this.initialY);\n\n        editor.beginActionGroup();\n\n        var dimensionId = editor.getId();\n        var create = new CreateDimension(editor, dimensionId, this.firstAnchor, null, this.currentText, this.style);\n        create.execute();\n\n        this.selectedMarkup = editor.getMarkup(dimensionId);\n        this.creationBegin();\n        \n        var pick = this.updateMeasurement(1);\n        this.updateViewportId(pick.viewportIndex2d);\n    };\n\n    proto.pickSecondAnchor = function(mouseDown) {\n\n        var editor = this.editor;\n        var selectedMarkup = this.selectedMarkup;\n\n        this.secondAnchor = this.getFinalMouseDraggingPosition();\n\n        this.updateMeasurement(2);\n\n        // Correct Perpendicular\n        if (MeasureCommon.correctPerpendicularPicks(this.measurement.getPick(1), this.measurement.getPick(2), this.viewer, editor.snapper)){\n            var newPos = MeasureCommon.getSnapResultPosition(this.measurement.getPick(2), this.viewer);\n            this.secondAnchor = editor.project(newPos);\n            editor.snapper.indicator.render();\n        }\n\n        var secondAnchor = editor.positionFromClientToMarkups(this.secondAnchor.x, this.secondAnchor.y);\n\n        this.size.x = selectedMarkup.size.x;\n        this.size.y = selectedMarkup.size.y;\n\n        selectedMarkup.currentText = this.getDistance();         \n\n        var setDimension = new SetDimension(editor, selectedMarkup, this.firstAnchor, secondAnchor, selectedMarkup.currentText);\n        setDimension.execute();\n\n        var setStyle = new SetStyle(editor, selectedMarkup, this.style);\n        setStyle.execute();\n\n        // Open 'Add Length' textbox if no measurement has being taken.\n        if (mouseDown && !selectedMarkup.currentText && this.isMinSizeValid()) {\n            selectedMarkup.currentText = '';\n            this.editor.selectMarkup(null);\n            this.updateTextBox(selectedMarkup);\n        } \n    };\n\n\n    /**\n     * Handler to mouse down events, used to start markups creation.\n     * @private\n     */\n    proto.onMouseDown = function(event) {\n\n        // Right click - do nothing.\n        if (Autodesk.Viewing.Private.isRightClick(event, this.viewer.navigation)) {\n            return;\n        }\n\n        _cursorPosition = null;\n\n        // Textbox is open.\n        if (this.isTextInputHelperActive()) {\n            this.textInputHelper.acceptAndExit();\n            return;\n        }\n\n        EditMode.prototype.onMouseDown.call(this);\n\n        // User selected an already created markup.\n        if (this.selectedMarkup && !this.creating) {\n            return;\n        }\n        \n        var isSnapped = this.editor.snapper.isSnapped();\n\n        // Picked first point.\n        if (!this.selectedMarkup && !this.creating && isSnapped) {\n            this.pickFirstAnchor();\n        }\n\n        // Picked second point.\n        else if (this.selectedMarkup && this.creating) {\n\n            if (isSnapped) {\n                this.pickSecondAnchor(true);   \n            } else {\n                this.deleteMarkup(this.selectedMarkup, true);\n                this.creating = true;\n            }\n\n            this.updateViewportId();\n            this.creationEnd();\n        }\n    };\n\n    proto.onMouseUp = function(event) {\n\n        if (this.dragging) {\n            this.onMouseDown(event);   \n            this.dragging = false; \n        }\n    };\n\n\n    /**\n     * Handler to mouse move events, used to create markups.\n     * @param {MouseEvent} event Mouse event.\n     * @private\n     */\n    proto.onMouseMove = function(event) {\n\n        _cursorPosition = null;\n\n        if(!this.selectedMarkup || !this.creating) {\n            return;\n        }\n\n        this.dragging = true;\n        this.pickSecondAnchor(false);\n    };\n\n    proto.getFinalMouseDraggingPosition = function() {\n\n        var editor = this.editor;\n        var bounds = editor.getBounds();\n        var mousePosition = editor.getMousePosition();\n\n        if (!editor.snapper.isSnapped()) {\n            if (editor.viewer.model && editor.viewer.model.is2d()) {\n                _cursorPosition = MeasureCommon.inverseProject(mousePosition, editor.viewer);\n            }\n        }\n\n        var initialX = this.initialX;\n        var initialY = this.initialY;\n\n        var finalX = Math.min(Math.max(bounds.x, mousePosition.x), bounds.x + bounds.width);\n        var finalY = Math.min(Math.max(bounds.y, mousePosition.y), bounds.y + bounds.height);\n\n        if (finalX == initialX &&\n            finalY == initialY) {\n            finalX++;\n            finalY++;\n        }\n\n        // Make straight line when shift key is down.\n        if (editor.input.constrainAxis && editor.viewer.model.is2d()) {\n            var dx = Math.abs(finalX - initialX);\n            var dy = Math.abs(finalY - initialY);\n\n            if (dx > dy) {\n                finalY = initialY;\n            } \n            else {\n                finalX = initialX;\n            }\n\n            editor.snapper.onMouseMove({ x:finalX, y:finalY });\n            \n            if (editor.snapper.isSnapped()) {\n                editor.snapper.copyResults(this.measurement.getPick(2));\n                _cursorPosition = null;\n            } else {\n                _cursorPosition = MeasureCommon.inverseProject({ x:finalX, y:finalY }, editor.viewer);\n            }\n        }\n\n        return { x:finalX, y:finalY };\n    };\n\n    proto.isVisibleChar = function(keyCode) {\n\n    return  ((keyCode > 47 && keyCode < 58)  || // number keys\n            (keyCode == 32)                  || // spacebar\n            (keyCode > 64 && keyCode < 91)   || // letter keys\n            (keyCode > 95 && keyCode < 112)  || // numpad keys\n            (keyCode > 185 && keyCode < 193) || // ;=,-./` (in order)\n            (keyCode > 218 && keyCode < 223));   // [\\]' (in order)\n    };\n\n    proto.measureTextLine = function(text, markup, editor) {\n\n        text = text.replace(new RegExp(' ', 'g'), SPACE);\n        text = text.length === 0 ? markup.initialText : text;\n        return measureTextLines([text + '|'], this.style, editor)[0];\n\n    };\n\n    proto.handleKeyDown = function (e) {\n        var textInputHelper = this.textInputHelper;\n        \n        if (e.keyCode === Autodesk.Viewing.KeyCode.ENTER) {\n            return;\n        }\n\n        var markup = textInputHelper.textMarkup;\n        var text = textInputHelper.textArea.value;\n\n        if (e.keyCode === Autodesk.Viewing.KeyCode.BACKSPACE) {\n            text = text.substring(0, text.length-1);\n        }\n\n        if (text.length < MAX_LETTERS && this.isVisibleChar(e.keyCode)) {\n            text = text + e.key;            \n        }\n\n        var size = this.measureTextLine(text, markup, this.editor);\n                \n        this.updateTextBox(markup, size);\n    };\n\n    proto.updateTextBox = function(markup, size) {\n\n        if (!this.textInputHelper) {\n            this.textInputHelper = new EditorTextInput(this.viewer.container, this.editor, true, markup.initialText, MAX_LETTERS);\n            this.textInputHelper.addEventListener(this.textInputHelper.EVENT_TEXT_CHANGE, this.onHelperTextChange.bind(this), false);\n            this.handleKeyDownBinded = this.handleKeyDown.bind(this);\n        }\n\n        markup.text.style.display = 'none';\n        \n        if (!size) {\n            size = this.measureTextLine(this.textInputHelper.textArea.value, markup, this.editor);\n        }\n\n        var transform = this.getTextAreaTransform(markup, size);\n\n        this.textInputHelper.styleTextArea.setAttribute('text-align', 'center');\n        \n        this.textInputHelper.setActive(markup, false);\n\n        \n        // Override textArea attributes\n        this.textInputHelper.textArea.style.position = 'static';\n        this.textInputHelper.textArea.style.padding = '0';\n        this.textInputHelper.textArea.style.width = size.width + 'px';\n        this.textInputHelper.textArea.style.height = size.height + 'px';\n        this.textInputHelper.textArea.style.transform = transform; // Maybe need to add 'allBrowsers' support\n\n        this.editor.actionManager.removeEventListener(MarkupEvents.EVENT_HISTORY_CHANGED, this.onHistoryChangeBinded);\n        this.editor.actionManager.addEventListener(MarkupEvents.EVENT_HISTORY_CHANGED, this.onHistoryChangeBinded);    \n        this.textInputHelper.textArea.removeEventListener('keydown', this.handleKeyDownBinded);\n        this.textInputHelper.textArea.addEventListener('keydown', this.handleKeyDownBinded);    \n        \n    };\n\n    proto.getTextAreaTransform = function(markup, size) {\n\n        var position = markup.getClientPosition();\n        var rotation = radiansToDegrees(markup.rotation) % 360;\n\n        if (rotation > 90 && rotation <= 270 && markup.shouldFlip()) {\n            rotation = 180 + rotation;\n        }\n    \n        return [\n            'translate(', (position.x - (size.width/2)) + 'px,',(position.y - this.viewer.container.clientHeight - size.height) + 'px)',\n            'rotate(', rotation + 'deg)',\n            'translate(0px,', size.height +'px)'\n        ].join(' ');\n    };\n\n    proto.onMouseDoubleClick = function(markup) {\n\n        if (markup === this.selectedMarkup) {\n            this.editor.selectMarkup(null);\n            this.updateTextBox(markup);\n        }\n    };\n\n    proto.onHelperTextChange = function(event) {\n\n        var dataBag = event.data;\n        var markup = dataBag.markup;\n        var textStyle = dataBag.style;\n        var editor = this.editor;\n\n        markup.text.style.display = 'block';\n\n        if (dataBag.newText === '') {\n            dataBag.newText = markup.initialText;\n        }\n\n        // When the text is created for the first time, an action group\n        // is already created and it includes the CreateText action.\n        // Thus, no need to begin another action group.\n        if (!dataBag.firstEdit) {\n            editor.beginActionGroup();\n        }\n\n        var setStyle = new SetStyle(editor, markup, textStyle);\n        setStyle.execute();\n\n        var setDimension = new SetDimension(editor, markup, markup.firstAnchor, markup.secondAnchor, dataBag.newText);\n        setDimension.execute();\n\n        editor.closeActionGroup();\n        editor.selectMarkup(null);\n    };\n\n    /**\n     * We want to make sure that the Input Helper gets removed from the screen\n     * whenever the user attempts to perform an undo or redo action.\n     * @param {Event} event\n     * @private\n     */\n    proto.onHistoryChange = function(event) {\n        if (this.isTextInputHelperActive()) {\n            this.textInputHelper.textMarkup.text.style.display = 'block';\n            this.editor.actionManager.removeEventListener(MarkupEvents.EVENT_HISTORY_CHANGED, this.onHistoryChangeBinded);\n            this.textInputHelper.setInactive();\n        }\n    };\n\n    /**\n     * Notify the markup that the displayed markups are being saved so edit mode can finish current editions.\n     */\n    proto.onSave = function() {\n\n        EditMode.prototype.onSave.call(this);\n\n        // Close input helper if it's open.\n        if (this.isTextInputHelperActive()) {\n            var editor = this.editor;\n            editor.actionManager.removeEventListener(MarkupEvents.EVENT_HISTORY_CHANGED, this.onHistoryChangeBinded);\n            var markup = this.textInputHelper.textMarkup;\n            this.textInputHelper.acceptAndExit();\n            markup.text.style.display = 'block';\n        }\n    };\n\n    proto.useWithSnapping = function () {\n        return true;\n    };\n\n","'use strict';\n\nimport { Markup } from './Markup'\nimport * as MarkupTypes from './MarkupTypes'\nimport { createMarkupPathSvg, createMarkupTextSvg, composeRGBAString, addMarkupMetadata,\n    radiansToDegrees, degreesToRadians, measureTextLines, setMarkupTextSvgTransform,\n    setAttributeToMarkupSvg, updateMarkupPathSvgHitarea, createSvgElement, checkLineSegment,\n    updateMarkupTextSvgBackground, updateMarkupTextSvgClipper, updateMarkupTextSvgHitarea \n} from './MarkupsCoreUtils'\nimport { cloneStyle } from './StyleUtils'\nimport { EditModeDimension } from './edit-modes/EditModeDimension'\n\n    var DIMENSION_MARKUP_HEIGHT = 10;\n    var TEXT_OFFSET = 2;\n    var DEFAULT_TEXT = 'Add Length';\n    var BACKGROUND_COLOR = 'none';//'#ffffff';\n\n    /**\n     *\n     * @param id\n     * @param editor\n     * @constructor\n     */\n    export function MarkupDimension(id, editor) {\n\n        var styleAttributes = ['stroke-width', 'stroke-color', 'stroke-opacity', 'font-size', 'font-family', 'font-style', 'font-weight'];\n        Markup.call(this, id, editor, styleAttributes);\n\n        this.type = MarkupTypes.MARKUP_TYPE_DIMENSION;\n        this.constraintHeight = true;\n        this.constraintWidth = true;\n\n        // bind to this to pass this.globalManager\n        this.addMarkupMetadata = addMarkupMetadata.bind(this);\n        this.createSvgElement = createSvgElement.bind(this);\n        this.checkLineSegment = checkLineSegment.bind(this);\n        this.measureTextLines = measureTextLines.bind(this);\n\n        \n        this.firstAnchor = new THREE.Vector3();\n        this.secondAnchor = new THREE.Vector3();\n        this.shape = createMarkupPathSvg();\n        this.text = createMarkupTextSvg();\n        this.shape.appendChild(this.text);\n        this.textSize = {x: 0, y: 0};\n        this.initialText = DEFAULT_TEXT;\n        this.currentText = ' ';\n\n        if (!this.viewer.model.is2d()) {\n            this.preventReposition = true;\n            this.constraintRotation = true;\n        }\n\n        this.bindDomEvents();\n    }\n\n    MarkupDimension.prototype = Object.create(Markup.prototype);\n    MarkupDimension.prototype.constructor = MarkupDimension;\n\n    var proto = MarkupDimension.prototype;\n\n    proto.getEditMode = function() {\n\n        return new EditModeDimension(this.editor);\n    };\n\n    /**\n     * Sets top-left and bottom-right values in client space coordinates (2d).\n     * Notice that for the Dimension, the top left is the \"secondAnchor\" of the Dimension and\n     * the bottom right is the \"firstAnchor\" of it.\n     *\n     * @param {Number} xO - secondAnchor\n     * @param {Number} yO - secondAnchor\n     * @param {Number} xF - firstAnchor\n     * @param {Number} yF - firstAnchor\n     */\n    proto.set = function(xO, yO, xF, yF, text) {\n\n        var vO = new THREE.Vector2(xO, yO);\n        var vF = new THREE.Vector2(xF, yF);\n        var vDir = vF.clone().sub(vO).normalize();\n\n        this.size.x = vO.distanceTo(vF); // TODO: Clamp min length\n        this.rotation = Math.acos(vDir.dot(new THREE.Vector2(1,0)));\n        this.rotation = yF > yO ? (Math.PI*2)-this.rotation : this.rotation;\n\n        var firstAnchor = this.firstAnchor;\n        var secondAnchor = this.secondAnchor;\n\n        firstAnchor.set(xF, yF, 0);\n        secondAnchor.set(xO, yO, 0);\n\n        this.position.x = secondAnchor.x + (firstAnchor.x - secondAnchor.x) * 0.5;\n        this.position.y = secondAnchor.y + (firstAnchor.y - secondAnchor.y) * 0.5;\n\n        this.currentText = text;\n        this.updateStyle();\n    };\n\n    /**\n     * Changes the rotation of the markup to the given angle.\n     * This gets called by the Autodesk.Viewing.Extensions.Markups.Core.SetRotation edit action\n     *\n     * @param {Number} angle\n     */\n    proto.setRotation = function(angle) {\n\n        if (radiansToDegrees(angle) === 90) {\n            angle = degreesToRadians(-90);\n        }\n\n        this.rotation = angle;\n\n        var xF = Math.cos(-angle);\n        var yF = Math.sin(-angle);\n        var vFDir = new THREE.Vector2(xF, yF); // already normalized\n        vFDir.multiplyScalar(this.size.x*0.5);\n\n        var vCenter = new THREE.Vector2(this.position.x, this.position.y);\n        var vO = vCenter.clone().sub(vFDir);\n        var vF = vCenter.clone().add(vFDir);\n\n        this.firstAnchor.set(vF.x, vF.y, 0);\n        this.secondAnchor.set(vO.x, vO.y, 0);\n\n        this.updateStyle();\n    };\n\n    /**\n     * Changes the position and size of the markup.\n     * This gets called by the namespace.SetSize edit action\n     * @param {{x: Number, y: Number}} position - Dimension's center\n     * @param {Number} width - Dimension's length\n     * @param {Number} height - We ignore this one because we use the Dimension's stroke width instead\n     */\n    proto.setSize = function(position, width, height) {\n\n        var xF = Math.cos(-this.rotation);\n        var yF = Math.sin(-this.rotation);\n        var vFDir = new THREE.Vector2(xF, yF); // already normalized\n        vFDir.multiplyScalar(width*0.5);\n\n        var vCenter = new THREE.Vector2(position.x, position.y);\n        var vO = vCenter.clone().sub(vFDir);\n        var vF = vCenter.clone().add(vFDir);\n\n        this.firstAnchor.set(vF.x, vF.y, 0);\n        this.secondAnchor.set(vO.x, vO.y, 0);\n\n        this.position.x = position.x;\n        this.position.y = position.y;\n        this.size.x = width;\n\n        this.updateStyle();\n    };\n\n    /**\n     * Helper method that returns the font size in client space coords.\n     * @returns {Number}\n     */\n    proto.getClientFontSize = function() {\n\n        return this.editor.sizeFromMarkupsToClient(0, this.style['font-size']).y;\n    };\n\n    proto.updateStyle = function() {\n\n        var style = this.style;\n        var shape = this.shape;\n        var strokeWidth = style['stroke-width'];\n        var strokeColor = this.highlighted ? this.highlightColor : composeRGBAString(style['stroke-color'], style['stroke-opacity']);\n        var transform = this.getTransform();\n\n        this.rebuildTextSvg(this.currentText);\n\n        setAttributeToMarkupSvg(shape, 'd', this.getPath().join(' '));\n        setAttributeToMarkupSvg(shape, 'stroke-width', strokeWidth / 2);\n        setAttributeToMarkupSvg(shape, 'stroke', strokeColor);\n        setAttributeToMarkupSvg(shape, 'fill', strokeColor);\n        setAttributeToMarkupSvg(shape, 'transform', transform);\n        updateMarkupPathSvgHitarea(shape, this.editor);\n    };\n\n    proto.rebuildTextSvg = function(value) {\n        var style = this.style;\n        var strokeColor = this.highlighted ? this.highlightColor : composeRGBAString(style['stroke-color'], style['stroke-opacity']);\n        var strokeWidth = style['stroke-width'];\n        var backgroundColor = (value === ' ') ? 'none' : BACKGROUND_COLOR;\n\n        var markup = this.createSvgElement('text');\n        markup.setAttribute('id', 'markup');\n        markup.setAttribute('alignment-baseline', 'middle');\n\n        var text = this.text;\n        var editor = this.editor;\n\n        text.childNodes[0].removeChild(text.markup);\n        text.childNodes[0].appendChild(markup);\n        text.markup = markup;\n\n        var tspan = this.createSvgElement('tspan');\n        tspan.textContent = value;\n        markup.appendChild(tspan);\n\n        var lineSize = this.measureTextLines([value], style, editor)[0]; // Only one line for measurement\n        var textSize = this.textSize = editor.sizeFromClientToMarkups(lineSize.width, lineSize.height);\n        \n        var edgeH = DIMENSION_MARKUP_HEIGHT * strokeWidth / 2;\n        var textOffset = TEXT_OFFSET * strokeWidth / 2;\n        var offset = (textSize.x + (2 * strokeWidth) >= this.size.x) ? textOffset + edgeH / 2 : textOffset; // If the line is too short for the given text, put it under.\n\n        this.size.y = edgeH + textSize.y + offset;\n\n        var textTransform = this.getTextTransform((4/5 * textSize.y) +  offset, true); // Text height is Always 4/5 of the entire label height.\n        var backgroundTransform = this.getTextTransform(textSize.y + offset, false);\n\n        setAttributeToMarkupSvg(text, 'font-family', style['font-family']);\n        setAttributeToMarkupSvg(text, 'font-size', style['font-size']);\n        setAttributeToMarkupSvg(text, 'font-weight', style['font-weight']);\n        setAttributeToMarkupSvg(text, 'font-style', style['font-style']);\n        setAttributeToMarkupSvg(text, 'text-rendering', 'auto');\n        setAttributeToMarkupSvg(text, 'fill', strokeColor);\n        setMarkupTextSvgTransform(text, backgroundTransform, textTransform); \n        updateMarkupTextSvgBackground(text, textSize.x, textSize.y, backgroundColor);\n        updateMarkupTextSvgClipper(text, textSize.x, textSize.y);\n        updateMarkupTextSvgHitarea(text, textSize.x, textSize.y, editor);\n    };\n\n    proto.shouldFlip = function(){\n        return (this.firstAnchor.x < this.secondAnchor.x);\n    };\n\n    proto.getTextTransform = function(offset, inverse) {\n\n        var flip = this.shouldFlip() ? -1 : 1;\n\n        inverse = inverse ? -1 : 1;\n\n        if (radiansToDegrees(this.rotation) === 90) {\n            this.rotation = degreesToRadians(-90);\n        }\n\n        return [\n            'translate(', this.position.x , ',', this.position.y, ')',\n            'rotate(', radiansToDegrees(-this.rotation), ')',\n            'translate(', -flip * this.textSize.x / 2, ',', -flip*offset, ')',\n            'scale(' + flip + ',' + flip*inverse + ')'\n        ].join(' ');\n    };\n\n    /**\n     * Used by the EditFrame to move the markup in Client Space coordinates\n     * @param {Number} x - New X location for the markup. Notice that markups are centered on this value.\n     * @param {Number} y - New Y location for the markup. Notice that markups are centered on this value.\n     */\n    proto.setPosition = function (x, y) {\n\n        var firstAnchor = this.firstAnchor;\n        var secondAnchor = this.secondAnchor;\n\n        var dx = firstAnchor.x - secondAnchor.x;\n        var dy = firstAnchor.y - secondAnchor.y;\n\n        var xo = x + dx * 0.5;\n        var yo = y + dy * 0.5;\n\n        firstAnchor.x = xo;\n        firstAnchor.y = yo;\n\n        secondAnchor.x = xo - dx;\n        secondAnchor.y = yo - dy;\n\n        this.position.x = secondAnchor.x + (firstAnchor.x - secondAnchor.x) * 0.5;\n        this.position.y = secondAnchor.y + (firstAnchor.y - secondAnchor.y) * 0.5;\n\n        this.updateStyle();\n    };\n\n    proto.generatePoint3d = function(idTarget) {\n\n        var firstAnchor = this.editor.positionFromMarkupsToClient(this.firstAnchor.x, this.firstAnchor.y);\n        var secondAnchor = this.editor.positionFromMarkupsToClient(this.secondAnchor.x, this.secondAnchor.y);\n\n        var direction = firstAnchor.clone().sub(secondAnchor).normalize();\n\n        var point2d = this.checkLineSegment(firstAnchor.x, firstAnchor.y, firstAnchor.x + direction.x * 200, firstAnchor.y + direction.y * 200, idTarget);\n        var point3d = point2d && this.viewer.clientToWorld(point2d.x, point2d.y);\n\n        return point3d && point3d.point;\n    };\n\n    proto.setMetadata = function() {\n\n        this.text.setAttribute('pointer-events', 'none');\n\n        var metadata = cloneStyle(this.style);\n\n        metadata.type = this.type;\n        metadata.firstAnchor = [this.firstAnchor.x, this.firstAnchor.y].join(\" \");\n        metadata.secondAnchor = [this.secondAnchor.x, this.secondAnchor.y].join(\" \");\n        metadata.text = String(this.currentText);\n\n        return this.addMarkupMetadata(this.shape, metadata);\n    };\n\n\n    /**\n     * Returns the raw string value\n     * @returns {String}\n     */\n    proto.getText = function() {\n\n        // if the current text is 'Add Length', you want the textbox will be empty when the user open it.\n        return (this.currentText === this.initialText) ? '' : this.currentText;\n    };\n\n    proto.getPath = function() {\n\n        //   1_                            _4\n        //   | |                          | |\n        //   | |2                        3| |\n        //  0|  --------------------------  |\n        //   |  --------------------------  |\n        //   | |7                       6 | |\n        //   |_|          TEXT            |_|\n        //   8                             5\n        \n        var strokeWidth = this.style['stroke-width'];\n        var segmentLength = this.size.x - strokeWidth / 2; // segment length (p2 to p3 length)\n        var edgeH = DIMENSION_MARKUP_HEIGHT * strokeWidth / 2; // Edge height (p1 to p8 length)\n\n        return [\n            'M', -segmentLength * 0.5           ,    0              ,   // 0\n            'l', 0                              ,    edgeH / 2      ,   // 1\n            'l', 0                              ,    -edgeH / 2     ,   // 2\n            'l', segmentLength                  ,    0              ,   // 3\n            'l', 0                              ,    edgeH / 2      ,   // 4\n            'l', 0                              ,    -edgeH         ,   // 5\n            'l', 0                              ,    edgeH / 2      ,   // 6\n            'l', -segmentLength                 ,    0              ,   // 7\n            'l', 0                              ,    -edgeH / 2     ,   // 8\n            'z'\n        ];\n    };\n\n    proto.cloneShape = function(clone) {\n        \n        clone.shape = createMarkupPathSvg();\n        clone.text = createMarkupTextSvg();\n        clone.shape.appendChild(clone.text);\n        clone.bindDomEvents();\n    };\n\n    proto.getBoundingRect = function() {\n        var pos = this.getClientPosition();\n        var size = this.getClientSize();\n        return {\n            x: pos.x - size.x / 2,\n            y: pos.y - size.y / 2,\n            width: size.x,\n            height: size.y\n        }\n    };\n","'use strict';\n\nimport { EditAction } from './EditAction'\nimport { MarkupDimension } from '../MarkupDimension'\nimport { cloneStyle } from '../StyleUtils'\n\n    /**\n     * @constructor\n     */\n    export function CreateDimension(editor, id, firstAnchor, secondAnchor, text, style) {\n\n        EditAction.call(this, editor, 'CREATE-DIMENSION', id);\n\n        this.selectOnExecution = false;\n        this.secondAnchor = secondAnchor;\n        this.firstAnchor = firstAnchor;\n        this.text = text;\n        this.style = cloneStyle(style);\n    }\n\n    CreateDimension.prototype = Object.create(EditAction.prototype);\n    CreateDimension.prototype.constructor = CreateDimension;\n\n    var proto = CreateDimension.prototype;\n\n    proto.redo = function() {\n\n        var editor = this.editor;\n        var dimension = new MarkupDimension(this.targetId, editor);\n\n        editor.addMarkup(dimension);\n\n        // Don't display the dimension markup when there is only one Anchor (First click, before mouse move).\n        if (this.secondAnchor) {\n            dimension.set(this.firstAnchor.x, this.firstAnchor.y, this.secondAnchor.x, this.secondAnchor.y, this.text);\n            dimension.setStyle(this.style);\n        }        \n    };\n\n    proto.undo = function() {\n\n        var markup = this.editor.getMarkup(this.targetId);\n        markup && this.editor.removeMarkup(markup);\n    };\n\n\n","const canvg = require('../../thirdparty/canvg/canvg.js'); // Required for Markup Thumbnails\nimport * as MarkupType from '../core/MarkupTypes'\nimport { CreateArrow } from './edit-actions/CreateArrow'\nimport { CreateRectangle } from './edit-actions/CreateRectangle'\nimport { CreateText } from './edit-actions/CreateText'\nimport { CreateCallout } from './edit-actions/CreateCallout'\nimport { CreateCircle } from './edit-actions/CreateCircle'\nimport { CreateCloud } from './edit-actions/CreateCloud'\nimport { CreateFreehand } from './edit-actions/CreateFreehand'\nimport { CreatePolyline } from './edit-actions/CreatePolyline'\nimport { CreatePolycloud } from './edit-actions/CreatePolycloud'\nimport { CreateHighlight } from './edit-actions/CreateHighlight'\nimport { CreateDimension } from './edit-actions/CreateDimension'\nimport { DomElementStyle } from './DomElementStyle'\n\n\n    var av = Autodesk.Viewing;\n    var avp = Autodesk.Viewing.Private;\n\n    const _gWindow = av.getGlobal();\n    const _gDocument = _gWindow.document;\n\n    // Change these constants to alter the default sizes in pixels of strokes and fonts.\n    export var MARKUP_DEFAULT_STROKE_WIDTH_IN_PIXELS = 1;\n    export var MARKUP_DEFAULT_FONT_WIDTH_IN_PIXELS = 10;\n    export var MARKUP_DEFAULT_HITAREAS_MARGIN_IN_PIXELS = 15;\n    export var EDIT_FRAME_DEFAULT_MARGIN = 7;\n\n    /**\n     * // isTouchDevice is an LMV function. Hammer is included by LMV as well\n     * @returns {boolean}\n     */\n    export var isTouchDevice = function() {\n        // isTouchDevice() is an LMV function.\n        // Hammer (a touch detection lib) is packaged with LMV as well\n        if (av.isTouchDevice && typeof Hammer === \"function\") {\n            return av.isTouchDevice();\n        }\n        return false;\n    };\n\n    //// SVG  //////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n    /**\n     *\n     * @param type\n     * @returns {Element}\n     */\n    export var createSvgElement = function(type) {\n\n        const _document = (this && this.getDocument && this.getDocument()) || _gDocument;\n        // See https://developer.mozilla.org/en-US/docs/Web/API/Document/createElementNS\n        var namespace = 'http://www.w3.org/2000/svg';\n        return  _document.createElementNS(namespace, type);\n    };\n\n    /**\n     *\n     * @param {Element} svg - an SVGElement\n     * @returns {Element} svg param is returned back\n     */\n    export var setSvgParentAttributes = function(svg) {\n\n        // See: https://developer.mozilla.org/en-US/docs/Web/SVG/Namespaces_Crash_Course\n        svg.setAttribute('version', '1.1'); // Notice that this is the SVG version, not the \"MARKUP DATA VERSION\"!\n        svg.setAttribute('baseProfile', 'full');\n        svg.setAttribute('layer-order-id', 'markups-svg');\n        return svg;\n    };\n\n    export var createMarkupGroupSvg = function(children) {\n        children = children || [];\n        var svg = createSvgElement('g');\n        svg.setAttribute('cursor', 'default');\n        svg.setAttribute('pointer-events', 'none');\n\n        for (var i = 0; i < children.length; i++) {\n            svg.appendChild(children[i]);\n        }\n\n        return svg;\n    };\n\n    export var createMarkupPathSvg = function() {\n\n        var svg = createSvgElement('g');\n        svg.setAttribute('cursor', 'inherit');\n        svg.setAttribute('pointer-events', 'none');\n\n        var markup = createSvgElement('path');\n        markup.setAttribute('id', 'markup');\n\n        var hitarea = createSvgElement('path');\n        hitarea.setAttribute('id', 'hitarea');\n        hitarea.setAttribute('fill', 'transparent');\n        hitarea.setAttribute('stroke', 'transparent');\n\n        svg.markup = markup;\n        svg.hitarea = hitarea;\n\n        svg.appendChild(markup);\n        svg.appendChild(hitarea);\n\n        return svg;\n    };\n\n    export var setAttributeToMarkupSvg = function(svg, attribute, value) {\n\n        svg.markup.setAttribute(attribute, value);\n    };\n\n    export var updateMarkupPathSvgHitarea = function(svg, editor) {\n\n        var markup = svg.markup;\n        var hitarea = svg.hitarea;\n\n        var hitareaMargin = editor.sizeFromClientToMarkups(0, MARKUP_DEFAULT_HITAREAS_MARGIN_IN_PIXELS).y;\n        hitareaMargin += parseFloat(markup.getAttribute('stroke-width')) + hitareaMargin;\n\n        var markupFill = markup.getAttribute('fill');\n        var markupStroke = markup.getAttribute('stroke');\n        var strokeEnabled = markupStroke !== '' && markupStroke !== 'none';\n        var fillEnabled = markupFill !== '' && markupFill !== 'none';\n\n        hitarea.setAttribute('d', markup.getAttribute('d'));\n        hitarea.setAttribute('stroke-width', hitareaMargin);\n        hitarea.setAttribute('transform', markup.getAttribute('transform'));\n\n        if (editor.duringEditMode && !editor.navigating) {\n            if (strokeEnabled && fillEnabled) {\n                svg.setAttribute('pointer-events', 'painted');\n                return;\n            }\n\n            if (strokeEnabled) {\n                svg.setAttribute('pointer-events', 'stroke');\n                return;\n            }\n\n            if (fillEnabled) {\n                svg.setAttribute('pointer-events', 'fill');\n                return;\n            }\n        }\n\n        svg.setAttribute('pointer-events', 'none');\n    };\n    \n    export var createMarkupTextSvg = function() {\n\n        var svg = createSvgElement('g');\n        svg.setAttribute('cursor', 'default');\n\n        var clipperId = 'markup-clipper-' + getUniqueID();\n        var clipperUrl = 'url(#' + clipperId + ')';\n\n        var clipper = createSvgElement('clipPath');\n        clipper.setAttribute('id', clipperId);\n        clipper.removeAttribute('pointer-events');\n        clipper.rect = createSvgElement('rect');\n        clipper.appendChild(clipper.rect);\n\n        var background = createSvgElement('rect');\n        background.setAttribute('id', 'markup-background');\n        background.removeAttribute('pointer-events');\n\n        var markup = createSvgElement('text');\n        markup.setAttribute('id', 'markup');\n\n        var hitarea = createSvgElement('rect');\n        hitarea.setAttribute('id', 'hitarea');\n        hitarea.setAttribute('fill', 'transparent');\n        hitarea.setAttribute('stroke', 'none');\n        hitarea.setAttribute('stroke-width', '0');\n\n        var clippedArea = createSvgElement('g');\n        clippedArea.setAttribute('clip-path', clipperUrl);\n        clippedArea.appendChild(clipper);\n        clippedArea.appendChild(background);\n        clippedArea.appendChild(markup);\n\n        svg.appendChild(clippedArea);\n        svg.appendChild(hitarea);\n\n        svg.clipper = clipper;\n        svg.background = background;\n        svg.markup = markup;\n        svg.hitarea = hitarea;\n\n        return svg;\n    };\n\n    export var setMarkupTextSvgTransform = function(svg, transform, textTransform) {\n\n        svg.clipper.rect.setAttribute('transform', transform);\n        svg.background.setAttribute('transform', transform);\n        svg.markup.setAttribute('transform', textTransform);\n        svg.hitarea.setAttribute('transform', transform);\n    };\n\n    export var updateMarkupTextSvgHitarea = function(svg, w, h, editor) {\n\n        var hitarea = svg.hitarea;\n        var hitareaMargin = editor.sizeFromClientToMarkups(0, MARKUP_DEFAULT_HITAREAS_MARGIN_IN_PIXELS).y;\n\n        hitarea.setAttribute('x', -hitareaMargin);\n        hitarea.setAttribute('y', -hitareaMargin);\n        hitarea.setAttribute('width', w + hitareaMargin * 2);\n        hitarea.setAttribute('height', h + hitareaMargin * 2);\n        svg.setAttribute(\"pointer-events\", editor.navigating ? \"none\" : \"painted\");\n    };\n\n    export var updateMarkupTextSvgBackground = function(svg, w, h, color) {\n\n        var background = svg.background;\n\n        background.setAttribute('x', 0);\n        background.setAttribute('y', 0);\n        background.setAttribute('width', w);\n        background.setAttribute('height', h);\n        background.setAttribute('fill', color);\n    };\n\n    export var updateMarkupTextSvgClipper = function(svg, w, h) {\n\n        var clipper = svg.clipper;\n\n        clipper.rect.setAttribute('x', 0);\n        clipper.rect.setAttribute('y', 0);\n        clipper.rect.setAttribute('width', w);\n        clipper.rect.setAttribute('height', h);\n    };\n\n    /**\n     * Helper function that injects metadata for the whole Markup document.\n     * Metadata includes: version.\n     * @param {Element} svg - an SVGElement\n     * @param {Object} metadata - Dictionary with attributes\n     */\n    export var addSvgMetadata = function(svg ,metadata) {\n\n        const _document = (this && this.getDocument && this.getDocument()) || _gDocument;\n\n        var metadataNode = _document.createElementNS('http://www.w3.org/2000/svg', 'metadata');\n        var dataVersionNode = _document.createElement('markup_document');\n\n        metadataNode.appendChild(dataVersionNode);\n\n        // NOTE: We could iterate over the properties, but we don't because these are the only ones supported\n        dataVersionNode.setAttribute(\"data-model-version\", metadata[\"data-model-version\"]); // Version. For example: \"1\"\n\n        svg.insertBefore(metadataNode, svg.firstChild);\n        return metadataNode;\n    };\n\n    /**\n     * Helper function that injects metadata for specific markup svg nodes.\n     * @param {Element} markupNode - an SVGElement for the markup\n     * @param {Object} metadata - Dictionary where all key/value pairs are added as metadata entries.\n     * @returns {Element}\n     */\n    export var addMarkupMetadata = function(markupNode, metadata) {\n\n        const _document = (this && this.getDocument && this.getDocument()) || _gDocument;\n\n        var metadataNode = _document.createElementNS('http://www.w3.org/2000/svg', 'metadata');\n        var dataVersionNode = _document.createElement('markup_element');\n\n        metadataNode.appendChild(dataVersionNode);\n        for (var key in metadata) {\n            if (metadata.hasOwnProperty(key)) {\n                dataVersionNode.setAttribute(key, metadata[key]);\n            }\n        }\n\n        markupNode.insertBefore(metadataNode, markupNode.firstChild);\n        return metadataNode;\n    };\n\n    /**\n     * Removes al metadata nodes from an Svg node structure.\n     * Method will remove all metadata nodes from children nodes as well.\n     * @param svgNode\n     */\n    export var removeAllMetadata = function(svgNode) {\n\n        if (svgNode.getElementsByTagName) {\n            var nodes = svgNode.getElementsByTagName(\"metadata\");\n            for (var i=0; i<nodes.length; ++i) {\n                var metadataNode = nodes[i];\n                metadataNode.parentNode && metadataNode.parentNode.removeChild(metadataNode);\n            }\n        }\n\n        // Transverse children nodes\n        var svgChildren = svgNode.children || svgNode.childNodes;\n        if (svgChildren) {\n            for (i=0; i<svgChildren.length; ++i) {\n                removeAllMetadata(svgChildren[i]);\n            }\n        }\n    };\n\n    /**\n     * Utility function that transfers children from an Html/Svg node into another one.\n     * @param nodeFrom - The node instance from where children will be taken.\n     * @param nodeInto - The node that's going to parent the transferred children.\n     */\n    export var transferChildNodes = function(nodeFrom, nodeInto) {\n\n        var svgChildren = nodeFrom.children || nodeFrom.childNodes;\n        var tmpArray = [];\n        for (var i=0; i<svgChildren.length; ++i){\n            tmpArray.push(svgChildren[i]); // Avoid appendChild\n        }\n        tmpArray.forEach(function(node){\n            nodeInto.appendChild(node);\n        });\n    };\n\n    /**\n     * Generate a unique id.\n     * @returns {string}\n     */\n    export var getUniqueID = function() {\n        return THREE.Math.generateUUID();\n    };\n\n\n    /**\n     * Serializes an SVG node into a String.\n     * @param domNode\n     * @returns {string}\n     */\n    export var svgNodeToString = function(domNode){\n\n        function removeHitareas(svg, hitareas) {\n\n            var hitarea = svg.hitarea;\n            var hitareaParent = hitarea && hitarea.parentNode;\n\n            if (hitareaParent) {\n\n                hitareas.push({hitarea: hitarea, parent: hitareaParent});\n                hitareaParent.removeChild(hitarea);\n            }\n\n            var children = svg.childNodes;\n            var childrenCount = children.length;\n\n            for(var i = 0; i < childrenCount; ++i) {\n                removeHitareas(children.item(i), hitareas);\n            }\n        }\n\n        function addHitareas(hitareas) {\n\n            var hitareasCount = hitareas.length;\n            for(var i = 0; i < hitareasCount; ++i) {\n\n                var hitarea = hitareas[i];\n                hitarea.parent.appendChild(hitarea.hitarea);\n            }\n        }\n\n        var result;\n        try {\n            var hitareas = [];\n            removeHitareas(domNode, hitareas);\n\n            var xmlSerializer = new XMLSerializer();\n            result = xmlSerializer.serializeToString(domNode);\n\n            addHitareas(hitareas);\n\n        } catch (err) {\n            result = '';\n            console.warn('svgNodeToString failed to generate string representation of domNode.');\n        }\n        return result;\n    };\n\n    export var stringToSvgNode = function(stringNode){\n\n        var node = null;\n        try {\n            var domParser = new DOMParser();\n            var doc = domParser.parseFromString(stringNode, \"text/xml\");\n            node = doc.firstChild; // We should only be getting 1 child anyway.\n        } catch (err) {\n            node = null;\n            console.warn('stringToSvgNode failed to generate an HTMLElement from its string representation.');\n        }\n        return node;\n    };\n\n    /**\n     * Injects functions and members to a client object which will\n     * receive the ability to dispatch events.\n     * Mechanism is the same as in Autodesk.Viewing.Viewer.\n     *\n     * Note: All of the code here comes from Autodesk.Viewing.Viewer\n     *\n     * @param {Object} client - Object that will become an event dispatcher.\n     */\n    export var addTraitEventDispatcher = function(client) {\n\n        // Inject member variable\n        client.listeners = {};\n\n        // Inject functions\n        client.addEventListener = function(type, listener) {\n            if (typeof this.listeners[type] == \"undefined\"){\n                this.listeners[type] = [];\n            }\n            this.listeners[type].push(listener);\n        };\n        client.hasEventListener = function (type, listener) {\n            if (this.listeners === undefined) return false;\n            var listeners = this.listeners;\n            if (listeners[ type ] !== undefined && listeners[ type ].indexOf(listener) !== -1) {\n                return true;\n            }\n            return false;\n        };\n        client.removeEventListener = function(type, listener) {\n            if (this.listeners[type] instanceof Array){\n                var li = this.listeners[type];\n                for (var i=0, len=li.length; i < len; i++){\n                    if (li[i] === listener){\n                        li.splice(i, 1);\n                        break;\n                    }\n                }\n            }\n        };\n        client.dispatchEvent = function(event) {\n            if (typeof event == \"string\"){\n                event = { type: event };\n            }\n            if (!event.target){\n                event.target = this;\n            }\n\n            if (!event.type){\n                throw new Error(\"event type unknown.\");\n            }\n\n            if (this.listeners[event.type] instanceof Array) {\n                var typeListeners = this.listeners[event.type].slice();\n                for (var i=0; i < typeListeners.length; i++) {\n                    typeListeners[i].call(this, event);\n                }\n            }\n        };\n    };\n\n    /**\n     * Removes the EventDispatcher trait\n     *\n     * @param {Object} client\n     */\n    export var removeTraitEventDispatcher = function(client) {\n\n        try {\n            delete client.listeners;\n            delete client.addEventListener;\n            delete client.hasEventListener;\n            delete client.removeEventListener;\n            delete client.dispatchEvent;\n        } catch (e) {\n            // nothing\n        }\n    };\n\n    //// Math  /////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n    /**\n     * Calculates the pixel position in client space coordinates of a point in world space.\n     * @param {THREE.Vector3} point Point in world space coordinates.\n     * @param viewer\n     * @param snap Round values to closest pixel center.\n     * @returns {THREE.Vector3} Point transformed and projected into client space coordinates.\n     */\n    export var worldToClient = function(point, viewer, snap) {\n\n        var p = worldToViewport(point, viewer);\n        var result = viewportToClient(p.x, p.y, viewer);\n        result.z = 0;\n\n        // snap to the center of the\n        if (snap) {\n            result.x = Math.floor(result.x) + 0.5;\n            result.y = Math.floor(result.y) + 0.5;\n        }\n\n        return result;\n    };\n\n    export var clientToWorld = function(clientX, clientY, depth, viewer) {\n\n        var point = clientToViewport(clientX, clientY, viewer);\n        point.z = depth;\n\n        point.unproject(viewer.impl.camera);\n        return point;\n    };\n\n    export var clientToViewport = function(clientX, clientY, viewer) {\n\n        return viewer.impl.clientToViewport(clientX, clientY);\n    };\n\n    export var viewportToClient = function(viewportX, viewportY, viewer) {\n\n        return viewer.impl.viewportToClient(viewportX, viewportY);\n    };\n\n    /**\n     * Calculates the world position of a point in client space coordinates.\n     * @param {Object} point - { x:Number, y:Number, z:Number }\n     * @param {Object} viewer - LMV instance\n     * @returns {THREE.Vector3}\n     */\n    export var worldToViewport = function(point, viewer) {\n\n        var p = new THREE.Vector3();\n\n        p.x = point.x;\n        p.y = point.y;\n        p.z = point.z;\n\n        p.project(viewer.impl.camera);\n        return p;\n    };\n\n    export var metersToModel = function(meters, viewer) {\n\n        var modelToMeter = viewer.model.getUnitScale();\n        var meterToModel = 1 / modelToMeter;\n\n        return meterToModel * meters;\n    };\n\n    export var radiansToDegrees = function (radians) {\n\n        return radians * (180 / Math.PI);\n    };\n\n    export var degreesToRadians = function(degrees) {\n\n        return degrees * (Math.PI / 180);\n    };\n\n    /**\n     *\n     * @param value\n     * @returns {number}\n     */\n    export var sign = function (value) {\n\n        return (value >= 0) ? 1 : -1;\n    };\n\n    /**\n     *\n     * @param pointA\n     * @param pointB\n     * @param range\n     * @param editor\n     * @returns {boolean}\n     */\n    export var areMarkupsPointsInClientRange = function(pointA, pointB, range, editor){\n\n        range = editor.sizeFromClientToMarkups(0, range).y;\n\n        var dx = pointA.x - pointB.x;\n        var dy = pointA.y - pointB.y;\n\n        return range * range >= dx * dx + dy * dy;\n    };\n\n    //// LMV ui ////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n    export var hideLmvUi = function(viewer) {\n\n        // If the viewer is no gui, then there is nothing to hide\n        if(!viewer.toolbar) {\n            return;\n        }\n\n        // Exit other tools and hide HudMessages.\n        viewer.setActiveNavigationTool();\n\n        dismissLmvHudMessage();\n        hideLmvPanels(true, viewer);\n        hideLmvToolsAndPanels(viewer);\n    };\n\n    export var restoreLmvUi = function(viewer) {\n\n        // If the viewer is no gui, then there is nothing to hide\n        if(!viewer.toolbar) {\n            return;\n        }\n\n        dismissLmvHudMessage();\n        hideLmvPanels(false, viewer);\n        showLmvToolsAndPanels(viewer);\n    };\n\n    /**\n     *\n     * @param hide\n     * @param viewer\n     */\n    export var hideLmvPanels = function(hide, viewer) {\n\n        var dockingPanels = viewer.dockingPanels;\n\n        // Panels may not be present when dealing with an instance of Viewer3D.js\n        // (as opposed to an instance of GuiViewer3D.js)\n        if (!dockingPanels) return;\n\n        for (var i = 0; i < dockingPanels.length; ++i) {\n\n            var panel = dockingPanels[i];\n            var panelContainer = panel.container;\n\n            if (panelContainer.classList.contains(\"dockingPanelVisible\")) {\n                panelContainer.style.display = hide ? \"none\" : \"block\";\n\n                // Call the visibility changed notification if any additional\n                // stuff needs to be done (update the date i.e. PropertyPanel, etc).\n                panel.visibilityChanged();\n            }\n        }\n    };\n\n    /**\n     * Shows panels and tools in the viewer.\n     * @param viewer\n     */\n    export var showLmvToolsAndPanels = function(viewer) {\n\n        // Restore view cube.\n        if(viewer && viewer.model && !viewer.model.is2d()) {\n            viewer.getExtension(\"Autodesk.ViewCubeUi\", function(ext) {\n                ext.displayViewCube(true, false);\n                ext.displayHomeButton(true);\n            }); \n        }\n\n        // TODO: Find or ask for a better way to restore this buttons.\n        const _document = viewer.getDocument();\n        var anim = _document.getElementsByClassName('toolbar-animation-subtoolbar');\n\n        if (anim.length > 0) {\n            anim[0].style.display = '';\n        }\n\n        // toolbar is absent when dealing with an instance of Viewer3D (instead of GuiViewer3D)\n        if (viewer.toolbar) {\n            var viewerContainer = viewer.toolbar.container;\n            var viewerContainerChildrenCount = viewerContainer.children.length;\n            for(var i = 0; i < viewerContainerChildrenCount; ++i) {\n                viewerContainer.children[i].style.display = \"\";\n            }\n        }\n    };\n\n    /**\n     * Hides panels and tools in the viewer.\n     * @param viewer\n     */\n    export var hideLmvToolsAndPanels = function(viewer) {\n\n        // Hide Panels and tools.\n        if (viewer && viewer.model && !viewer.model.is2d()) {\n            viewer.getExtension(\"Autodesk.ViewCubeUi\", function(ext) {\n                ext.displayViewCube(false, false);\n                ext.displayHomeButton(false);\n            });\n            \n        }\n\n        const _document = viewer.getDocument();\n        // TODO: Find or ask for a better way to hide this buttons.\n        var anim = _document.getElementsByClassName('toolbar-animation-subtoolbar');\n\n        if (anim.length > 0) {\n            anim[0].style.display = 'none';\n\n            var animator = viewer.impl.keyFrameAnimator;\n            if (animator && !animator.isPaused) {\n                animator.pauseCameraAnimations();\n                animator.pause();\n\n                var playButton = viewer.modelTools.getControl('toolbar-animationPlay');\n                if (playButton) {\n                    playButton.setIcon('toolbar-animation-pause-icon');\n                    playButton.setToolTip('Pause');\n                }\n            }\n        }\n\n        // toolbar is absent when dealing with an instance of Viewer3D (instead of GuiViewer3D)\n        if (viewer.toolbar) {\n            var viewerContainer = viewer.toolbar.container;\n            var viewerContainerChildrenCount = viewerContainer.children.length;\n            for(var i = 0; i < viewerContainerChildrenCount; ++i) {\n                viewerContainer.children[i].style.display = \"none\";\n            }\n        }\n    };\n\n    /**\n     * Dismisses all LMV HudMessages\n     */\n    export var dismissLmvHudMessage = function() {\n\n        // Using try/catch block since we are accessing the Private namespace of LMV.\n        try {\n            var keepDismissing = true;\n            while (keepDismissing) {\n                keepDismissing = Autodesk.Viewing.Private.HudMessage.dismiss();\n            }\n        } catch (ignore) {\n            // Failing to show the message is an okay fallback scenario\n            console.warn(\"[CO2]Failed to dismiss LMV HudMessage\");\n        }\n    };\n\n    //// Styles ////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n    export var getStrokeWidth = function(widthInPixels, editor) {\n\n        var size = editor.sizeFromClientToMarkups(0, widthInPixels);\n        return size.y;\n    };\n\n    /**\n     * Creates markups from a parsed svg string child\n     * @param child - child of a parsed SVG string\n     * @param editor - MarkupsCore\n     * @returns {*} Markup Object\n     */\n    export var createMarkupFromSVG = function(child, editor) {\n        // var self = this;\n        if (!child.childNodes[0]) {\n            return null;\n        }\n\n        var meta = child.childNodes[0].childNodes[0] || '';\n\n        var getCurrentStyle = function(editor, metadata) {\n\n            var source = ['stroke-width', 'stroke-color', 'stroke-opacity', 'fill-color', 'fill-opacity',\n                'font-family', 'font-size','font-style','font-weight','stroke-linejoin'];\n            var style = {};\n            for (var i=0; i < source.length; i++) {\n                var value = metadata.getAttribute(source[i]);\n                if(value == null) {\n                    continue;\n                }\n                switch (source[i]) {\n                    case 'font-size':\n                    case 'stroke-width':\n                    case 'stroke-opacity':\n                    case 'fill-opacity':\n                        style[source[i]] = parseFloat(value);\n                        break;\n                    case 'stroke-linejoin':\n                        break;\n                    case 'font-family':\n                    case 'font-style':\n                    case 'font-weight':\n                    case 'stroke-color':\n                    case 'fill-color':\n                        style[source[i]] = value;\n                        break;\n                    default:\n                        avp.logger.warn('Style not recognized.');\n                        break;\n                }\n            }\n            return style;\n        };\n\n        var isClosed = function() {\n            var path = child.childNodes[1] || '';\n            var closed = false;\n            if (typeof path !== 'string'){\n                var d = path.getAttribute('d').split(' ');\n                if (d[d.length-1].toLowerCase() === 'z'){\n                    closed = true;\n                }\n            }\n            return closed;\n        };\n\n        var getLocations = function() {\n            var locations = [];\n            var locStr = meta.getAttribute('locations').split(\" \") || '';\n\n            for(var i=0; i< locStr.length; i+=2) {\n                var pointPair = {x:parseFloat(locStr[i]), y:parseFloat(locStr[i+1])};\n                locations.push( pointPair )\n            }\n            return locations;\n        };\n\n        var getAttributeVector = function(attribute) {\n            var posVec = new THREE.Vector3();\n            var value = meta.getAttribute(attribute) || meta.getAttribute(attribute.toLowerCase());\n            var strPos = value.split(\" \");\n            posVec.x = parseFloat(strPos[0]);\n            posVec.y = parseFloat(strPos[1]);\n            return posVec;\n        };\n\n        var getPosition = function() {\n            return getAttributeVector('position');\n        };\n\n        var getSize = function() {\n            return getAttributeVector('size');\n        };\n\n        var getRotation = function() {\n            var strRot = meta.getAttribute('rotation') || '';\n            return parseFloat(strRot);\n        };\n\n        var getText = function() {\n            return meta.getAttribute('text') || '';\n        };\n\n        var getIsFrameUsed = function() {\n            return !!parseInt(meta.getAttribute('isframeused'));\n        };\n\n        if (typeof meta !== 'string') {\n            // get the type of the child\n            var position, size, rotation, locations, tail, head, closed, text, firstAnchor, secondAnchor;\n            var id = editor.getId();\n            var style = getCurrentStyle(editor, meta);\n            var type = meta.getAttribute('type') || '';\n            var createMarkup;\n            switch(type) {\n                case MarkupType.MARKUP_TYPE_ARROW:\n                    tail = getAttributeVector('tail');\n                    head = getAttributeVector('head');\n                    createMarkup = new CreateArrow(editor, id, tail, head, style);\n                    break;\n\n                case MarkupType.MARKUP_TYPE_RECTANGLE:\n                    position = getPosition();\n                    size = getSize();\n                    rotation = getRotation();\n                    createMarkup = new CreateRectangle(editor, id, position, size, rotation, style);\n                    break;\n\n                case MarkupType.MARKUP_TYPE_TEXT:\n                    position = getPosition();\n                    size = getSize();\n                    text = getText();\n                    createMarkup = new CreateText(editor, id, position, size, text, style );\n                    break;\n\n                case MarkupType.MARKUP_TYPE_CALLOUT:\n                    position = getPosition();\n                    size = getSize();\n                    text = getText();\n                    var isFrameUsed = getIsFrameUsed();\n                    createMarkup = new CreateCallout(editor, id, position, size, text, style, isFrameUsed);\n                    break;\n\n                case MarkupType.MARKUP_TYPE_CIRCLE:\n                    position = getPosition();\n                    size = getSize();\n                    rotation = getRotation();\n                    createMarkup = new CreateCircle(editor, id, position, size, rotation, style);\n                    break;\n\n                case MarkupType.MARKUP_TYPE_CLOUD:\n                    position = getPosition();\n                    size = getSize();\n                    rotation = getRotation();\n                    createMarkup = new CreateCloud(editor, id, position, size, rotation, style);\n                    break;\n\n                case MarkupType.MARKUP_TYPE_FREEHAND:\n                    position = getPosition();\n                    size = getSize();\n                    rotation = getRotation();\n                    locations = getLocations();\n                    createMarkup = new CreateFreehand(editor, id, position, size, rotation, locations, style);\n                    break;\n\n                case MarkupType.MARKUP_TYPE_POLYLINE:\n                    position = getPosition();\n                    size = getSize();\n                    rotation = getRotation();\n                    locations = getLocations();\n                    closed = isClosed();\n                    createMarkup = new CreatePolyline(editor, id, position, size, rotation, locations, style, closed);\n                    break;\n\n                case MarkupType.MARKUP_TYPE_POLYCLOUD:\n                    position = getPosition();\n                    size = getSize();\n                    rotation = getRotation();\n                    locations = getLocations();\n                    closed = isClosed();\n                    createMarkup = new CreatePolycloud(editor, id, position, size, rotation, locations, style, closed);\n                    break;\n\n                case MarkupType.MARKUP_TYPE_HIGHLIGHT:\n                    position = getPosition();\n                    size = getSize();\n                    rotation = getRotation();\n                    locations = getLocations();\n                    createMarkup = new CreateHighlight(editor, id, position, size, rotation, locations, style);\n                    break;\n\n                case MarkupType.MARKUP_TYPE_DIMENSION:\n                    firstAnchor = getAttributeVector('firstAnchor');\n                    secondAnchor = getAttributeVector('secondAnchor');\n                    text = getText();\n                    createMarkup = new CreateDimension(editor, id, firstAnchor, secondAnchor, text, style);\n                    break;\n\n                default:\n                    createMarkup = null;\n                    break;\n            }\n            if (createMarkup){\n                createMarkup.addToHistory = false;\n                createMarkup.execute();\n                var markupList = editor.svgLayersMap[editor.activeLayer].markups;\n\n                for(var i = 0; i < markupList.length; ++i) {\n                    if (markupList[i].id === id) {\n                        return markupList[i];\n                    }\n                }\n            }\n            return null;\n        }\n    };\n    \n\n    export var composeRGBAString = function(hexRGBString, opacity) {\n\n        if(!hexRGBString || !opacity || opacity <= 0) {\n            return 'none';\n        }\n\n        return ['rgba(' +\n            parseInt('0x' + hexRGBString.substr(1,2)), ',',\n            parseInt('0x' + hexRGBString.substr(3,2)), ',',\n            parseInt('0x' + hexRGBString.substr(5,2)), ',', opacity, ')'].join('');\n    };\n\n    //// Id Target Collision ///////////////////////////////////////////////////////////////////////////////////////////\n\n    /**\n     *\n     * @param x0\n     * @param y0\n     * @param x1\n     * @param y1\n     * @param idTarget\n     */\n    export var checkLineSegment = function(x0, y0, x1, y1, idTarget) {\n\n        const _window = (this && this.getWindow && this.getWindow()) || _gWindow;\n        var deviceRatio = _window.devicePixelRatio || 1;\n\n        x0 *= deviceRatio;\n        y0 *= deviceRatio;\n        x1 *= deviceRatio;\n        y1 *= deviceRatio;\n\n        var idTargetWidth = idTarget.width;\n        var idTargetHeight = idTarget.height;\n        var idTargetBuffer = idTarget.buffer;\n\n        x0 = Math.round(x0);\n        x1 = Math.round(x1);\n        y0 = Math.round(idTargetHeight - y0);\n        y1 = Math.round(idTargetHeight - y1);\n\n        function point(x, y) {\n\n            x = Math.round(x);\n            y = Math.round(y);\n\n            var dx = 0;\n            var dy = 0;\n\n            for(var j = -deviceRatio; j <= deviceRatio; j+=deviceRatio*2){\n                dy += check(x,y+j) ? j : 0;\n            }\n\n            for(var i = -deviceRatio; i <= deviceRatio; i+=deviceRatio*2){\n                dx += check(x+i,y) ? i : 0;\n            }\n\n            return {\n                x: Math.round(x / deviceRatio + dx),\n                y: Math.round((idTargetHeight - y) / deviceRatio - dy)};\n        }\n\n        function check(x, y) {\n\n            // Probably better to clip line at the beginning.\n            if (x < 0 || x >= idTargetWidth ||\n                y < 0 || y >= idTargetHeight) {\n                return false;\n            }\n\n            var index = (y * idTargetWidth + x) *4;\n            return (\n                idTargetBuffer[index  ] !== 0xFF ||\n                idTargetBuffer[index+1] !== 0xFF ||\n                idTargetBuffer[index+2] !== 0xFF);\n        }\n\n        // DDA Line algorithm\n        var dx = (x1 - x0);\n        var dy = (y1 - y0);\n\n        var m = dx !== 0 ? dy / dx : 1;\n        var x = x0;\n        var y = y0;\n\n        if (dx !== 0 && Math.abs(m) <= 1) {\n\n            if (x0 <= x1) {\n                for (; x <= x1; ++x, y += m) {\n                    if (check(x, Math.round(y))) {\n                        return point(x, y);\n                    }\n                }\n            } else {\n                for (; x >= x1; --x, y -= m) {\n                    if (check(x, Math.round(y))) {\n                        return point(x, y);\n                    }\n                }\n            }\n        } else {\n\n            m = dx !== 0 ? 1/m : 0;\n            if (y0 <= y1) {\n                for (; y <= y1; ++y, x += m) {\n                    if (check(Math.round(x), y)) {\n                        return point(x, y);\n                    }\n                }\n            } else {\n                for (; y >= y1; --y, x -= m) {\n                    if (check(Math.round(x), y)) {\n                        return point(x, y);\n                    }\n                }\n            }\n        }\n    };\n\n    /**\n     *\n     * @param polygon\n     * @param idTarget\n     */\n    export var checkPolygon = function(polygon, idTarget) {\n\n        // Return if incorrect parameters.\n        if(!polygon || polygon.verxtexCount < 3 || !idTarget) {\n            return null;\n        }\n\n        const _window = (this && this.getWindow && this.getWindow()) || _gWindow;\n        var deviceRatio = _window.devicePixelRatio || 1;\n\n        var idTargetWidth = idTarget.width;\n        var idTargetHeight = idTarget.height;\n        var idTargetBuffer = idTarget.buffer;\n\n        var vertexCount = polygon.vertexCount;\n        var xVertices = Float32Array.from(polygon.xVertices); // Clone to scale by device pixel ratio and to\n        var yVertices = Float32Array.from(polygon.yVertices); // change y coordinates to OpenGL style.\n\n        function point(x, y) {\n\n            var dx = 0;\n            var dy = 0;\n\n            for(var j = -deviceRatio; j <= deviceRatio; j+=deviceRatio*2){\n                dy += check(x,y+j) ? j : 0;\n            }\n\n            for(var i = -deviceRatio; i <= deviceRatio; i+=deviceRatio*2){\n                dx += check(x+i,y) ? i : 0;\n            }\n\n            return {\n                x: Math.round(x / deviceRatio) + dx,\n                y: Math.round((idTargetHeight - y) / deviceRatio - dy)};\n        }\n\n        function check(x, y) {\n\n            if (x < 0 || x >= idTargetWidth ||\n                y < 0 || y >= idTargetHeight) {\n                return false;\n            }\n\n            var index = (y * idTargetWidth + x) * 4;\n            return (\n                idTargetBuffer[index  ] !== 0xFF ||\n                idTargetBuffer[index+1] !== 0xFF ||\n                idTargetBuffer[index+2] !== 0xFF) && isInsidePolygon(x, y);\n        }\n\n        function isInsidePolygon(x, y) {\n\n            var result = false;\n            var vertexCount = polygon.vertexCount;\n            for(var i = 0, j = vertexCount-1; i < vertexCount; j = i++) {\n\n                if (((yVertices[i] > y) != (yVertices[j] > y)) &&\n                     (x < (xVertices[j] - xVertices[i]) * (y - yVertices[i]) / (yVertices[j] - yVertices[i]) + xVertices[i]) ) {\n                    result = !result;\n                }\n            }\n            return result;\n        }\n\n        // Change coordinates to OpenGL style and calculate polygon's bounding box.\n        var bbX0 = Number.POSITIVE_INFINITY;\n        var bbY0 = Number.POSITIVE_INFINITY;\n        var bbX1 = Number.NEGATIVE_INFINITY;\n        var bbY1 = Number.NEGATIVE_INFINITY;\n\n        for(var i = 0; i < vertexCount; ++i) {\n\n            var bbX = xVertices[i] = xVertices[i] * deviceRatio;\n            var bbY = yVertices[i] = idTargetHeight - yVertices[i] * deviceRatio;\n\n            bbX0 = Math.min(bbX0, bbX);\n            bbY0 = Math.min(bbY0, bbY);\n            bbX1 = Math.max(bbX1, bbX);\n            bbY1 = Math.max(bbY1, bbY);\n        }\n\n        if (bbX1 < 0 || bbX0 > idTargetWidth ||\n            bbY1 < 0 || bbY0 > idTargetHeight) {\n            return null;\n        }\n\n        var bbW = Math.round(bbX1 - bbX0);\n        var bbH = Math.round(bbY1 - bbY0);\n\n        var bbCenterX = Math.round((bbX0 + bbX1)*0.5);\n        var bbCenterY = Math.round((bbY0 + bbY1)*0.5);\n\n        // Check\n        var x = bbCenterX;\n        var y = bbCenterY;\n\n        var w = 1;\n        var h = 1;\n\n        do {\n\n            var endX = x + w;\n            var endY = y + h;\n\n            for(; x < endX; ++x) {\n                if (check(x,y)) {\n                    return point(x,y);\n                }\n            }\n\n            for(; y < endY; ++y) {\n                if (check(x,y)) {\n                    return point(x,y);\n                }\n            }\n\n            if (w < bbW) {\n                endX = x - ++w; ++w;\n            } else {\n                endX = x - w;\n            }\n\n            if (h < bbH) {\n                endY = y - ++h; ++h;\n            } else {\n                endY = y - h;\n            }\n\n            for(; x > endX; --x) {\n                if (check(x,y)) {\n                    return point(x,y);\n                }\n            }\n\n            for(; y > endY; --y) {\n                if (check(x,y)) {\n                    return point(x,y);\n                }\n            }\n        } while(w < bbW || h < bbH);\n     };\n\n    //// CSS ///////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n    /**\n     *\n     * @returns {*}\n     */\n    export var createStyleSheet = function() {\n\n        const _document = (this && this.getDocument && this.getDocument()) || _gDocument;\n        var style = _document.createElement(\"style\");\n\n        // This is WebKit hack.\n        style.appendChild(_document.createTextNode(\"\"));\n        _document.head.appendChild(style);\n\n        return style.sheet;\n    };\n\n    /**\n     *\n     * @param styleSheet\n     * @param selector\n     * @param styles\n     * @param index\n     */\n    export var addRuleToStyleSheet = function(styleSheet, selector, styles, index) {\n\n        if(\"insertRule\" in styleSheet) {\n            styleSheet.insertRule(selector + \"{\" + styles + \"}\", index);\n        }\n        else if(\"addRule\" in styleSheet) {\n            styleSheet.addRule(selector, styles, index);\n        }\n    };\n\n    //// SVG ///////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n    /**\n     *\n     * @param lines\n     * @param style\n     * @param editor\n     */\n    export var measureTextLines = function(lines, style, editor) {\n\n        // Measure div style is line style with some custom layout properties.\n        var fontSize = editor.sizeFromMarkupsToClient(0, style['font-size']).y;\n\n        var measureStyle = new DomElementStyle()\n            .setAttribute('font-family', style['font-family'])\n            .setAttribute('font-size', fontSize + 'px')\n            .setAttribute('font-weight', style['font-weight'] ? 'bold' : '')\n            .setAttribute('font-style', style['font-style'] ? 'italic' : '')\n\n            .removeAttribute(['top', 'left', 'width', 'height', 'overflow-y'])\n            .setAttribute('position','absolute')\n            .setAttribute('white-space','nowrap')\n            .setAttribute('float','left')\n            .setAttribute('visibility','hidden')\n            .getStyleString();\n\n        const _document = (this && this.getDocument && this.getDocument()) || _gDocument;\n        // Create measure div.\n        var measure = _document.createElement('div');\n\n        measure.setAttribute('style', measureStyle);\n        editor.viewer.container.appendChild(measure);\n\n        // Measure.\n        var result = [];\n\n        var linesCount = lines.length;\n        for(var i = 0; i < linesCount; ++i) {\n\n            measure.innerText = lines[i];\n            result.push({\n                line: lines[i],\n                width: measure.clientWidth,\n                height: measure.clientHeight\n            });\n        }\n\n        // Remove measure div and return result.\n        editor.viewer.container.removeChild(measure);\n        return result;\n    };\n\n    export var createArcTo = function(x, y, xRadius, yRadius, relative, path) {\n\n        path.push(relative ? 'a' : 'A');\n        path.push(xRadius);\n        path.push(yRadius);\n        path.push(0);\n        path.push(1);\n        path.push(1);\n        path.push(x);\n        path.push(y);\n\n        return path;\n    };\n\n    export var createEllipsePath = function (x, y, w, h, relative, path) {\n\n        var halfW = w * 0.5;\n        var halfH = h * 0.5;\n\n        path.push(relative ? 'm' : 'M');\n        path.push(x);\n        path.push(y);\n\n        createArcTo(w, 0, halfW, halfH, true, path);\n        createArcTo(-w, 0, halfW, halfH, true, path);\n\n        path.push('z');\n    };\n\n    export var createRectanglePath = function (x, y, w, h, relative, path) {\n\n        path.push(relative ? 'm' : 'M');\n        path.push(x);\n        path.push(y);\n        path.push('l');\n        path.push(w);\n        path.push(0);\n        path.push('l');\n        path.push(0);\n        path.push(h);\n        path.push('l');\n        path.push(-w);\n        path.push(0);\n        path.push('z');\n    };\n\n    export var renderToCanvas = function(svg, viewBox, width, height, ctx, callback) {\n\n        // Creating a new svg element, that will be drawn into the canvas.\n        var tmpSvg = createSvgElement('svg');\n        \n        if (!av.isIE11) {\n            tmpSvg.setAttribute('xmlns','http://www.w3.org/2000/svg');    \n        }\n\n        tmpSvg.setAttribute('width',width);\n        tmpSvg.setAttribute('height',height);\n        tmpSvg.setAttribute('viewBox',viewBox);\n        tmpSvg.setAttribute('transform', 'scale(1,-1)');\n        \n        var markupGroup = svg.parentNode.cloneNode(true);\n\n        // Adding the markup itself to the temp SVG\n        tmpSvg.appendChild(markupGroup);\n        \n        const _window = (this && this.getWindow && this.getWindow()) || _gWindow;\n        const _document = (this && this.getDocument && this.getDocument()) || _gDocument;\n        // Get the SVG as string\n        var temp = _document.createElement('div');\n        var node = tmpSvg.cloneNode(true);\n        temp.appendChild(node);\n        var data = temp.innerHTML;\n        \n        tmpSvg = temp = node = null;\n\n        var renderWithCanvg = function() {\n            canvg(ctx.canvas, data, {ignoreMouse: true, ignoreDimensions: true, ignoreClear: true, renderCallback: callback});\n        };\n\n        // IE11 blocks 'tainted' canvas for security reasons. canvg is a library that solves that issue, and draws on the canvas without tainting it.\n        if (av.isIE11) {\n            renderWithCanvg();\n        }\n        else {\n            var img = new Image();\n\n            img.onload = function() {\n                ctx.drawImage(img, 0, 0);\n                callback();\n            };\n\n            img.onerror = function() {\n                renderWithCanvg();\n            };\n\n            img.src = 'data:image/svg+xml;base64,' + _window.btoa(unescape( encodeURIComponent( data )));\n        }\n    };\n\n    /*\n     Taken from Simplify.js, a high-performance JS polyline simplification library\n     (c) 2013, Vladimir Agafonkin\n     mourner.github.io/simplify-js\n    */\n   export var simplify = function(points, tolerance, highestQuality) {\n\n        if (points.length <= 2) return points;\n\n        // square distance between 2 points\n        function getSqDist(p1, p2) {\n\n            var dx = p1.x - p2.x,\n                dy = p1.y - p2.y;\n\n            return dx * dx + dy * dy;\n        }\n\n        // square distance from a point to a segment\n        function getSqSegDist(p, p1, p2) {\n\n            var x = p1.x,\n                y = p1.y,\n                dx = p2.x - x,\n                dy = p2.y - y;\n\n            if (dx !== 0 || dy !== 0) {\n\n                var t = ((p.x - x) * dx + (p.y - y) * dy) / (dx * dx + dy * dy);\n\n                if (t > 1) {\n                    x = p2.x;\n                    y = p2.y;\n\n                } else if (t > 0) {\n                    x += dx * t;\n                    y += dy * t;\n                }\n            }\n\n            dx = p.x - x;\n            dy = p.y - y;\n\n            return dx * dx + dy * dy;\n        }\n        // rest of the code doesn't care about point format\n\n        // basic distance-based simplification\n        function simplifyRadialDist(points, sqTolerance) {\n\n            var prevPoint = points[0],\n                newPoints = [prevPoint],\n                point;\n\n            for (var i = 1, len = points.length; i < len; i++) {\n                point = points[i];\n\n                if (getSqDist(point, prevPoint) > sqTolerance) {\n                    newPoints.push(point);\n                    prevPoint = point;\n                }\n            }\n\n            if (prevPoint !== point) newPoints.push(point);\n\n            return newPoints;\n        }\n\n        function simplifyDPStep(points, first, last, sqTolerance, simplified) {\n            var maxSqDist = sqTolerance,\n                index;\n\n            for (var i = first + 1; i < last; i++) {\n                var sqDist = getSqSegDist(points[i], points[first], points[last]);\n\n                if (sqDist > maxSqDist) {\n                    index = i;\n                    maxSqDist = sqDist;\n                }\n            }\n\n            if (maxSqDist > sqTolerance) {\n                if (index - first > 1) simplifyDPStep(points, first, index, sqTolerance, simplified);\n                simplified.push(points[index]);\n                if (last - index > 1) simplifyDPStep(points, index, last, sqTolerance, simplified);\n            }\n        }\n\n        // simplification using Ramer-Douglas-Peucker algorithm\n        function simplifyDouglasPeucker(points, sqTolerance) {\n            var last = points.length - 1;\n\n            var simplified = [points[0]];\n            simplifyDPStep(points, 0, last, sqTolerance, simplified);\n            simplified.push(points[last]);\n\n            return simplified;\n        }\n\n        // both algorithms combined for awesome performance\n        var sqTolerance = tolerance !== undefined ? tolerance * tolerance : 1;\n\n        points = highestQuality ? points : simplifyRadialDist(points, sqTolerance);\n        points = simplifyDouglasPeucker(points, sqTolerance);\n\n        return points;\n    }\n\n","'use strict';\n\n    /**\n     * This class will group actions edit actions that should be executed as a whole.\n     * When a group is open actions can be added to it, similar actions will be merged into one during this process.\n     * This class is not intended to be used by users, it's a helper class of EditActionManager.\n     * @constructor\n     */\n    export function EditActionGroup() {\n\n        this.actions = [];\n        this.closed = true;\n    }\n\n    var proto = EditActionGroup.prototype;\n\n    /**\n     *\n     * @returns {boolean}\n     */\n    proto.open = function() {\n\n        if(!this.closed) {\n            return false;\n        }\n\n        this.closed = false;\n        return true;\n    };\n\n    /**\n     *\n     * @returns {boolean}\n     */\n    proto.close = function() {\n\n        if (this.closed) {\n            return false;\n        }\n\n        this.closed = true;\n        return true;\n    };\n\n    /**\n     *\n     * @returns {number} targetId\n     */\n    proto.undo = function() {\n\n        var actions = this.actions;\n        var actionsMaxIndex = actions.length - 1;\n\n        var targetId = -1;\n        for(var i = actionsMaxIndex; i >= 0; --i) {\n\n            var action =  actions[i];\n            action.undo();\n\n            if (action.targetId !== -1) {\n                targetId = action.targetId;\n            }\n        }\n\n        return targetId;\n    };\n\n    /**\n     *\n     * @returns {number} targetId\n     */\n    proto.redo = function() {\n\n        var actions = this.actions;\n        var actionsCount = actions.length;\n\n        var targetId = -1;\n        for(var i = 0; i < actionsCount; ++i) {\n\n            var action =  actions[i];\n            action.redo();\n\n            if (action.targetId !== -1) {\n                targetId = action.targetId;\n            }\n        }\n\n        return targetId;\n    };\n\n    /**\n     *\n     * @returns {boolean}\n     */\n    proto.isOpen = function() {\n\n        return !this.closed;\n    };\n\n    /**\n     *\n     * @returns {boolean}\n     */\n    proto.isClosed = function() {\n\n        return this.closed;\n    };\n\n    /**\n     *\n     * @returns {boolean}\n     */\n    proto.isEmpty = function() {\n\n        return this.actions.length === 0;\n    };\n\n    /**\n     *\n     * @param {EditAction} action\n     */\n    proto.addAction = function(action) {\n\n        if (this.closed) {\n            return false;\n        }\n\n        this.actions.push(action);\n        this.compact();\n\n        return true;\n    };\n\n    /**\n     * @private\n     */\n    proto.compact = function() {\n\n        var actions = this.actions;\n        var actionsCount = actions.length;\n\n        for(var i = 0; i < actionsCount; ++i) {\n\n            // If an action does nothing, remove it.\n            var actionA = actions[i];\n            if (actionA.isIdentity()) {\n                actions.splice(i, 1);\n                --actionsCount;\n                --i;\n                continue;\n            }\n\n            // If an action can be merged, merge it.\n            for (var j = i + 1; j < actionsCount; ++j) {\n\n                var actionB = actions[j];\n                if (actionA.type === actionB.type &&\n                    actionA.merge(actionB)) {\n                    actions.splice(j, 1);\n                    --actionsCount;\n                    --i;\n                    break;\n                }\n            }\n        }\n    };\n\n    proto.getTargetId = function() {\n      var actions = this.actions;\n      var actionsCount = actions.length;\n      var targetId = -1;\n      for(var i = 0; i < actionsCount; ++i) {\n        var action =  actions[i];\n        if (action.targetId !== -1) {\n          targetId = action.targetId;\n        }\n      }\n      return targetId;\n    }","'use strict';\n\nimport { addTraitEventDispatcher } from '../MarkupsCoreUtils'\nimport * as MarkupEvents from '../MarkupEvents'\nimport { EditActionGroup } from './EditActionGroup'\n\n    /**\n     *\n     * @param historySize\n     * @constructor\n     */\n    export function EditActionManager(historySize) {\n\n        this.historySize = historySize;\n\n        this.undoStack = [];\n        this.redoStack = [];\n\n        addTraitEventDispatcher(this);\n    }\n\n    var proto = EditActionManager.prototype;\n\n    /**\n     *\n     * @param action\n     */\n    proto.execute = function(action) {\n\n        var redoStack = this.redoStack;\n        var undoStack = this.undoStack;\n\n        redoStack.splice(0, redoStack.length);\n\n        action.redo();\n\n        var group = this.getEditActionGroup();\n        if (group.isOpen()) {\n            group.addAction(action);\n        } else {\n            group.open();\n            group.addAction(action);\n            group.close();\n        }\n\n        if (undoStack.length > this.historySize) {\n            undoStack.splice(0,1);\n        }\n\n        var targetId = action.selectOnExecution ? action.targetId : -1;\n        this.dispatchEvent(\n            {type: MarkupEvents.EVENT_HISTORY_CHANGED, data: {action: 'execute', targetId: targetId}});\n    };\n\n    proto.beginActionGroup = function() {\n\n        var undoStack = this.undoStack;\n        var undoStackCount = undoStack.length;\n        var group = null;\n\n        if (undoStackCount === 0 || undoStack[undoStackCount-1].isClosed()) {\n\n            group = this.getEditActionGroup();\n            group.open();\n        } else {\n            console.warn('Markups - Undo/Redo - Action edit group already open.');\n        }\n    };\n\n    proto.closeActionGroup = function() {\n\n        var undoStack = this.undoStack;\n        var undoStackCount = undoStack.length;\n\n        if (undoStackCount === 0) {\n\n            console.warn('Markups - Undo/Redo - There is no action edit group to close.');\n            return;\n        }\n\n        var group = undoStack[undoStackCount-1];\n        if(!group.close()) {\n            console.warn('Markups - Undo/Redo - Action edit group already closed.');\n        }\n\n        if (group.isEmpty()) {\n            undoStack.pop();\n        }\n    };\n\n    proto.cancelActionGroup = function() {\n\n        var undoStack = this.undoStack;\n        var undoStackCount = undoStack.length;\n\n        if (undoStackCount === 0) {\n\n            console.warn('Markups - Undo/Redo - There is no action edit group to close.');\n            return;\n        }\n\n        var group = undoStack[undoStackCount-1];\n        if(!group.close()) {\n            console.warn('Markups - Undo/Redo - Action edit group already closed.');\n            return;\n        }\n\n        group.undo();\n        undoStack.pop();\n\n        this.dispatchEvent(\n            {type: MarkupEvents.EVENT_HISTORY_CHANGED, data: {action: 'cancel', targetId: -1}});\n    };\n\n    proto.undo = function() {\n\n        var undoStack = this.undoStack;\n        var redoStack = this.redoStack;\n\n        if (undoStack.length === 0) {\n            return;\n        }\n\n        var group = undoStack.pop();\n        var targetId = group.undo();\n\n        redoStack.push(group);\n\n        this.dispatchEvent(\n            {type: MarkupEvents.EVENT_HISTORY_CHANGED, data: {action:'undo', targetId: targetId}});\n    };\n\n    proto.redo = function() {\n\n        var undoStack = this.undoStack;\n        var redoStack = this.redoStack;\n\n        if (redoStack.length === 0) {\n            return;\n        }\n\n        var group = redoStack.pop();\n        var targetId = group.redo();\n\n        undoStack.push(group);\n\n        this.dispatchEvent(\n            {type: MarkupEvents.EVENT_HISTORY_CHANGED, data: {action:'redo', targetId: targetId}});\n    };\n\n    proto.clear = function() {\n\n        this.undoStack.splice(0, this.undoStack.length);\n        this.redoStack.splice(0, this.redoStack.length);\n\n        this.dispatchEvent(\n            {type: MarkupEvents.EVENT_HISTORY_CHANGED, data: {action:'clear', targetId: -1}});\n    };\n\n    proto.isUndoStackEmpty = function() {\n\n        return this.undoStack.length === 0;\n    };\n\n    proto.isRedoStackEmpty = function() {\n\n        return this.redoStack.length === 0;\n    };\n\n    proto.getLastElementInUndoStack = function() {\n\n        var undoStack = this.undoStack;\n        var undoStackCount = undoStack.length;\n        return undoStack[undoStackCount-1];\n    }\n\n    /**\n     *\n     * @return action\n     * @private\n     */\n    proto.getEditActionGroup = function() {\n\n        var undoStack = this.undoStack;\n        var undoStackCount = this.undoStack.length;\n\n        var group = null;\n\n        if (undoStackCount === 0 || undoStack[undoStackCount-1].isClosed()) {\n            group = new EditActionGroup();\n            undoStack.push(group);\n        } else {\n            group = undoStack[undoStackCount-1];\n        }\n\n        return group;\n    };\n","'use strict';\n\nimport { EditAction } from './EditAction'\n\n    /**\n     *\n     * @param editor\n     * @param id\n     * @param markup\n     * @param position\n     * @constructor\n     */\n    export function CloneMarkup(editor, id, markup, position) {\n\n        EditAction.call(this, editor, 'CLONE-MARKUP', id);\n\n        this.clone = markup.clone();\n        this.clone.id = id;\n        this.position = {x: position.x, y: position.y};\n    }\n\n    CloneMarkup.prototype = Object.create(EditAction.prototype);\n    CloneMarkup.prototype.constructor = CloneMarkup;\n\n    var proto = CloneMarkup.prototype;\n\n    proto.redo = function() {\n\n        var editor = this.editor;\n        var clone = this.clone;\n        var position = this.position;\n\n        if (editor.getMarkup(this.targetId)) {\n            return;\n        }\n\n        var markup = clone.clone();\n        markup.setPosition(position.x, position.y);\n\n        editor.addMarkup(markup);\n    };\n\n    proto.undo = function() {\n\n        var markup = this.editor.getMarkup(this.targetId);\n        markup && this.editor.removeMarkup(markup);\n    };\n\n\n","'use strict';\n\nimport { CloneMarkup } from '../edit-actions/CloneMarkup'\nimport { addTraitEventDispatcher } from '../MarkupsCoreUtils'\n\n    /**\n     *\n     * @param editor\n     * @constructor\n     */\n    export function Clipboard(editor) {\n\n        this.editor = editor;\n        this.content = null;\n        this.pastePosition = {x:0, y: 0};\n\n        addTraitEventDispatcher(this);\n    }\n\n    var proto = Clipboard.prototype;\n\n    proto.copy = function() {\n\n        var selectedMarkup = this.editor.getSelection();\n        if(!selectedMarkup) {\n            return;\n        }\n\n        this.content = selectedMarkup.clone();\n        this.pastePosition.x = selectedMarkup.position.x;\n        this.pastePosition.y = selectedMarkup.position.y;\n    };\n\n    proto.cut = function() {\n\n        var selectedMarkup = this.editor.getSelection();\n        if(!selectedMarkup) {\n            return;\n        }\n\n        this.copy();\n        this.editor.deleteMarkup(selectedMarkup);\n    };\n\n    proto.paste = function() {\n\n        var content = this.content;\n        if(!content) {\n            return;\n        }\n\n        var editor = this.editor;\n        var position = this.pastePosition;\n        var delta = editor.sizeFromClientToMarkups(20, 20);\n\n        position.x += delta.x;\n        position.y -= delta.y;\n\n        var cloneMarkup = new CloneMarkup(editor, editor.getId(), content, position);\n        cloneMarkup.execute();\n    };\n","'use strict';\n\nimport { isTouchDevice } from '../MarkupsCoreUtils'\n\n    var av = Autodesk.Viewing;\n    var avp = av.Private;\n\n    var _mouseEnabled = false;\n    var _mousePrevValue = false;\n    var _lock = false;\n\n    export function InputHandler() {\n\n        this.editor = null;\n        this.mousePosition = {x:0, y:0};\n        this.makeSameXY = false; // TODO: FIND a better way to name and communicate these.\n        this.snapRotations = false;\n        this.keepAspectRatio = false;\n        this.constrainAxis = false;\n        this.duringEditMode = false;\n\n        this.onWheelBinded = this.onWheel.bind(this);\n        this.onTouchDragBinded = this.onTouchDrag.bind(this);\n        this.onTouchPanBinded = this.onTouchPan.bind(this);\n        this.onTouchPinchBinded = this.onTouchPinch.bind(this);\n        this.onSingleTapBinded = this.onSingleTap.bind(this);\n        this.onDoubleTapBinded = this.onDoubleTap.bind(this);\n        this.onMouseMoveBinded = this.onMouseMove.bind(this);\n        this.onMouseUpBinded = this.onMouseUp.bind(this);\n        this.onMouseDownBinded = this.onMouseDown.bind(this);\n        this.onMouseDoubleClickBinded = this.onMouseDoubleClick.bind(this);\n        this.onHammerInputBinded = this.onHammerInput.bind(this);\n        this.isMouseDown = false;\n    }\n\n    av.GlobalManagerMixin.call(InputHandler.prototype);\n    var proto = InputHandler.prototype;\n\n    proto.attachTo = function(editor) {\n\n        this.editor && this.detachFrom(this.editor);\n        this.editor = editor;\n\n        if (isTouchDevice()) {\n\n            this.hammer = new av.Hammer.Manager(editor.svg, {\n                recognizers: [\n                    av.GestureRecognizers.drag,\n                    av.GestureRecognizers.doubletap,\n                    av.GestureRecognizers.doubletap2,\n                    av.GestureRecognizers.singletap,\n                    av.GestureRecognizers.singletap2,\n                    av.GestureRecognizers.press,\n                    av.GestureRecognizers.pan,\n                    av.GestureRecognizers.pinch\n                ],\n                handlePointerEventMouse: false,\n                inputClass: av.isIE11 ? av.Hammer.PointerEventInput : av.Hammer.TouchInput\n            });\n\n            this.hammer.get('doubletap2').recognizeWith('doubletap');\n            this.hammer.get('singletap2').recognizeWith('singletap');\n            this.hammer.get('singletap').requireFailure('doubletap');\n        }\n    };\n\n    proto.onHammerInput = function(event) {\n\n        this.setMouseDisabledWhenTouching(event);\n    };\n\n    proto.setMouseDisabledWhenTouching = function(event) {\n\n        if (event.isFirst && !_lock) {\n            this.enableMouseButtons(false);\n            _lock = true;\n        } else if (event.isFinal) {\n            var _this = this;\n            setTimeout(function() {\n                _this.enableMouseButtons(_mousePrevValue);\n                _lock = false;\n            }, 10);\n        }\n    };\n\n    proto.enableMouseButtons = function(state) {\n\n        if (state && !_mouseEnabled)\n        {\n            this.editor.svg.addEventListener('mousedown', this.onMouseDownBinded);\n            this.editor.svg.addEventListener('dblclick', this.onMouseDoubleClickBinded);\n            this.editor.svg.addEventListener('wheel', this.onWheelBinded);\n            this.editor.svg.addEventListener('DOMMouseScroll', this.onWheelBinded); // Firefox\n            this.addDocumentEventListener('mousemove', this.onMouseMoveBinded);\n            this.addDocumentEventListener('mouseup', this.onMouseUpBinded);\n        }\n        else if (!state && _mouseEnabled)\n        {\n            this.editor.svg.removeEventListener('mousedown', this.onMouseDownBinded);\n            this.editor.svg.removeEventListener('dblclick', this.onMouseDoubleClickBinded);\n            this.editor.svg.removeEventListener('wheel', this.onWheelBinded);\n            this.editor.svg.removeEventListener('DOMMouseScroll', this.onWheelBinded);\n            this.removeDocumentEventListener('mousemove', this.onMouseMoveBinded);\n            this.removeDocumentEventListener('mouseup', this.onMouseUpBinded);\n\n        }\n\n        _mousePrevValue = _mouseEnabled;\n        _mouseEnabled = state;\n    };\n\n    proto.detachFrom = function(editor) {\n\n        this.hammer && this.hammer.destroy();\n\n        this.removeDocumentEventListener('mousemove', this.onMouseMoveBinded);\n        this.removeDocumentEventListener('mouseup', this.onMouseUpBinded);\n\n        if (this.editor) {\n            this.editor.svg.removeEventListener('mousedown', this.onMouseDownBinded);\n            this.editor.svg.removeEventListener('dblclick', this.onMouseDoubleClickBinded);\n        }\n\n        this.editor = editor;\n    };\n\n    proto.enterEditMode = function() {\n        if (this.duringEditMode) {\n            return;\n        }\n\n        if (this.hammer) {\n            this.hammer.on('dragstart dragmove dragend', this.onTouchDragBinded);\n            this.hammer.on('panstart panmove panend', this.onTouchPanBinded);\n            this.hammer.on('pinchstart pinchmove pinchend', this.onTouchPinchBinded);\n            this.hammer.on('singletap', this.onSingleTapBinded);\n            this.hammer.on('singletap2', this.onSingleTapBinded);\n            this.hammer.on('doubletap', this.onDoubleTapBinded);\n            this.hammer.on('doubletap2', this.onDoubleTapBinded);\n            this.hammer.on('hammer.input', this.onHammerInputBinded);\n\n\t\t\tthis.hammer.get('drag').requireFailure('pinch');\n            this.hammer.get('drag').requireFailure('pan');\n        }\n\n        if (!av.isMobileDevice()) {\n            this.enableMouseButtons(true);\n        }\n\n        this.duringEditMode = true;\n    };\n\n    proto.leaveEditMode = function() {\n        if (!this.duringEditMode) {\n            return;\n        }\n\n        if (this.hammer) {\n            this.hammer.off('dragstart dragmove dragend', this.onTouchDragBinded);\n\t\t\tthis.hammer.off('panstart panmove panend', this.onTouchPanBinded);\n            this.hammer.off('pinchstart pinchmove pinchend', this.onTouchPinchBinded);\n            this.hammer.off('singletap', this.onSingleTapBinded);\n            this.hammer.off('singletap2', this.onSingleTapBinded);\n            this.hammer.off('doubletap', this.onDoubleTapBinded);\n            this.hammer.off('doubletap2', this.onDoubleTapBinded);\n            this.hammer.off('hammer.input', this.onHammerInputBinded);\n        }\n\n        if (!av.isMobileDevice()) {\n            this.enableMouseButtons(false);\n        }\n\n        this.duringEditMode = false;\n    };\n\n    proto.enterViewMode = function() {\n\n    };\n\n    proto.leaveViewMode = function() {\n\n    };\n\n    proto.getMousePosition = function() {\n\n        return {x: this.mousePosition.x, y: this.mousePosition.y};\n    };\n\n    proto.onWheel = function(event) {\n\n        if (!av.isMobileDevice()) {\n            this.editor.viewer.toolController.mousewheel(event);\n        }\n\n        event.preventDefault();\n    };\n\n    proto.onMouseMove = function(event) {\n\n        processMouseEvent(this, event);\n\n        if (!av.isMobileDevice()) {\n            this.editor.viewer.toolController.mousemove(event);\n        }\n\n        this.editor.onMouseMove(event);\n        event.preventDefault();\n    };\n\n\n    proto.onMouseDownRightClick = function(event) {\n\n        const _document = this.getDocument();\n        // Don't do blur in full screen (IE issue)\n        if (!(av.isIE11 && av.inFullscreen())) {\n            _document.activeElement && _document.activeElement.blur && _document.activeElement.blur();\n        }\n\n        var controller = this.editor.viewer.toolController;\n        controller.__clientToCanvasCoords(event);\n\n        this.editor.markupTool.handleButtonDown(event, 2);\n    };\n\n    proto.onMouseUpRightClick = function(event) {\n\n        var controller = this.editor.viewer.toolController;\n        controller.__clientToCanvasCoords(event);\n\n        this.editor.markupTool.handleButtonUp(event, 2);\n    };\n\n    proto.onMouseDown = function(event) {\n\n        processMouseEvent(this, event);\n\n        // Panning when right clicking\n        if (!av.isMobileDevice() && (avp.isRightClick(event, this.editor.viewer.navigation) || avp.isMiddleClick(event))) {\n            this.onMouseDownRightClick(event);\n            return;\n        }\n        \n        this.isMouseDown = true;\n        this.editor.onMouseDown(event);\n        event.preventDefault();\n    };\n\n    proto.onMouseUp = function(event) {\n\n        processMouseEvent(this, event);\n\n        if (!av.isMobileDevice() && (avp.isRightClick(event, this.editor.viewer.navigation) || avp.isMiddleClick(event))) {\n            this.onMouseUpRightClick(event);\n            return;\n        }\n\n        this.isMouseDown = false;\n        this.editor.onMouseUp(event);\n        event.preventDefault();\n    };\n\n    proto.onMouseDoubleClick = function(event) {\n\n        processMouseEvent(this, event);\n        this.editor.onMouseDoubleClick(event);\n        event.preventDefault();\n    };\n\n    proto.onTouchDrag = function(event) {\n\n        convertEventHammerToMouse(event);\n        switch (event.type) {\n          case 'dragstart':\n                this.onMouseDown(event);\n                break;\n            case 'dragmove':\n                this.onMouseMove(event);\n                break;\n           case 'dragend':\n                this.onMouseUp(event);\n                break;\n        }\n        event.preventDefault();\n    };\n\n    proto.onTouchPan = function(event) {\n\n        var gestureHandler = this.editor.viewer.toolController.getTool(\"gestures\");\n        gestureHandler.distributeGesture(event);\n        event.preventDefault();\n    };\n\n    proto.onTouchPinch = function(event) {\n\n        processMouseEvent(this, event);\n\n        var gestureHandler = this.editor.viewer.toolController.getTool(\"gestures\");\n        gestureHandler.distributeGesture(event);\n        \n        this.mousePosition.x = this.mousePosition.y = null;\n        this.editor.callSnapperMouseMove();\n\n        event.preventDefault();\n    };\n\n    proto.onSingleTap = function(event) {\n\n        convertEventHammerToMouse(event);\n\n        this.onMouseDown(event);\n        this.onMouseUp(event);\n        event.preventDefault();\n    };\n\n    proto.onDoubleTap = function(event) {\n\n        convertEventHammerToMouse(event);\n        this.onMouseDoubleClick(event);\n        event.preventDefault();\n    };\n\n    function processMouseEvent(input, event) {\n\n        var rect = input.editor.svg.getBoundingClientRect();\n\n        input.makeSameXY = event.shiftKey;\n        input.snapRotations = event.shiftKey;\n        input.keepAspectRatio = event.shiftKey;\n        input.constrainAxis = event.shiftKey;\n\n        input.mousePosition.x = event.clientX - rect.left;\n        input.mousePosition.y = event.clientY - rect.top;\n    }\n\n    function convertEventHammerToMouse(event) {\n\n        // Convert Hammer touch-event X,Y into mouse-event X,Y.\n        event.shiftKey = false;\n        event.clientX = event.pointers[0].clientX;\n        event.clientY = event.pointers[0].clientY;\n    }\n","'use strict';\n\nimport { EditAction } from './EditAction'\n\n    export function SetPosition(editor, markup, position) {\n\n        EditAction.call(this, editor, 'SET-POSITION', markup.id);\n\n        this.newPosition = {x: position.x, y: position.y};\n        this.oldPosition = {x: markup.position.x, y: markup.position.y};\n    }\n\n    SetPosition.prototype = Object.create(EditAction.prototype);\n    SetPosition.prototype.constructor = SetPosition;\n\n    var proto = SetPosition.prototype;\n\n    proto.redo = function() {\n\n        var markup = this.editor.getMarkup(this.targetId);\n        markup && markup.setPosition(this.newPosition.x, this.newPosition.y);\n    };\n\n    proto.undo = function() {\n\n        var markup = this.editor.getMarkup(this.targetId);\n        markup && markup.setPosition(this.oldPosition.x, this.oldPosition.y);\n    };\n\n    /**\n     *\n     * @param action\n     * @returns {boolean}\n     */\n    proto.merge = function(action) {\n\n        if (this.targetId === action.targetId &&\n            this.type === action.type) {\n\n            this.newPosition = action.newPosition;\n            return true;\n        }\n        return false;\n    };\n\n    /**\n     * @returns {boolean}\n     */\n    proto.isIdentity = function() {\n\n        var newPosition = this.newPosition;\n        var oldPosition = this.oldPosition;\n\n        return newPosition.x === oldPosition.x && newPosition.y === oldPosition.y;\n    };\n\n","'use strict';\n\nimport { EditAction } from './EditAction'\n\n    /**\n     *\n     * @param editor\n     * @param markup\n     * @param angle\n     * @constructor\n     */\n    export function SetRotation(editor, markup, angle) {\n\n        EditAction.call(this, editor, 'SET-ROTATION', markup.id);\n\n        var curAngle = markup.getRotation();\n\n        this.newRotation = {angle: angle};\n        this.oldRotation = {angle: curAngle};\n    }\n\n    SetRotation.prototype = Object.create(EditAction.prototype);\n    SetRotation.prototype.constructor = SetRotation;\n\n    var proto = SetRotation.prototype;\n\n    proto.redo = function() {\n\n        var markup = this.editor.getMarkup(this.targetId);\n        markup && markup.setRotation(this.newRotation.angle);\n    };\n\n    proto.undo = function() {\n\n        var markup = this.editor.getMarkup(this.targetId);\n        markup && markup.setRotation(this.oldRotation.angle);\n    };\n\n    /**\n     *\n     * @param action\n     * @returns {boolean}\n     */\n    proto.merge = function(action) {\n\n        if (this.targetId === action.targetId &&\n            this.type === action.type) {\n\n            this.newRotation = action.newRotation;\n            return true;\n        }\n        return false;\n    };\n\n    /**\n     * @returns {boolean}\n     */\n    proto.isIdentity = function() {\n\n        return this.newRotation.angle === this.oldRotation.angle;\n    };\n\n","'use strict';\n\nimport { EDIT_FRAME_DEFAULT_MARGIN, \n         addTraitEventDispatcher, isTouchDevice, degreesToRadians } from './MarkupsCoreUtils'\nimport * as MarkupEvents from './MarkupEvents'\nimport { CloneMarkup } from './edit-actions/CloneMarkup'\nimport { SetPosition } from './edit-actions/SetPosition'\nimport { SetSize } from './edit-actions/SetSize'\nimport { SetRotation } from './edit-actions/SetRotation'\n\n     var av = Autodesk.Viewing;\n     var avp = Autodesk.Viewing.Private;\n\n    /**\n     * A component to handle the selection of markups.\n     *\n     *\n     *      Sample\n     *\n     *      var containingDiv = document.getElementById('containingDiv3d-app-wrapper');\n     *      var selectionComponent = new EditFrame(containingDiv);\n     *      selectionComponent.setSelection(100, 100, 300, 150, 0);\n     *\n     * @param {HTMLElement} containingDiv The container where the selection layer will live.\n     * @param {Object} editor\n     * @constructor\n     */\n    export function EditFrame(containingDiv, editor) {\n\n        this.containingDiv = containingDiv;\n        this.editor = editor;\n        this.setGlobalManager(this.editor.viewer.globalManager);\n        this.selectionLayer = createSelectionLayer.bind(this)();\n\n        this.frameMargin = EDIT_FRAME_DEFAULT_MARGIN;\n\n        this.selection = {\n            x: 0,\n            y: 0,\n            width: 0,\n            height: 0,\n            rotation: 0,\n            element: null,\n            active: false,\n            dragging: false,\n            resizing: false,\n            //a dictionary of all the drag points\n            //the key for each drag point will be its cardinal/ordinal direction\n            handle: {}\n        };\n\n        createSelectorBox.bind(this)();\n\n        if (isTouchDevice()) {\n            this.hammer = new av.Hammer.Manager(this.selectionLayer, {\n                recognizers: [\n                    av.GestureRecognizers.drag,\n                    av.GestureRecognizers.doubletap,\n                    av.GestureRecognizers.doubletap2,\n                    av.GestureRecognizers.pan,\n                    av.GestureRecognizers.pinch\n                ],\n                handlePointerEventMouse: false,\n                inputClass: av.isIE11 ? av.Hammer.PointerEventInput : av.Hammer.TouchInput\n            });\n\n            this.onHammerDragBinded = this.onHammerDrag.bind(this);\n            this.onHammerDoubleTapBinded = this.onHammerDoubleTap.bind(this);\n            this.onTouchPanBinded = this.onTouchPan.bind(this);\n            this.onTouchPinchBinded = this.onTouchPinch.bind(this);\n\n            this.hammer.on(\"dragstart dragmove dragend\", this.onHammerDragBinded);\n            this.hammer.on(\"doubletap\", this.onHammerDoubleTapBinded);\n            this.hammer.on(\"doubletap2\", this.onHammerDoubleTapBinded);\n            this.hammer.on(\"panstart panmove panend\", this.onTouchPanBinded);\n            this.hammer.on(\"pinchstart pinchmove pinchend\", this.onTouchPinchBinded);\n\n            this.hammer.get('drag').requireFailure('pinch');\n            this.hammer.get('drag').requireFailure('pan');\n        }\n\n        handleSelectionBoxDragging.bind(this)();\n        handleSelectionBoxResizing.bind(this)();\n        handleSelectionDoubleClick.bind(this)();\n        handleSelectionBoxRotating.bind(this)();\n\n        //add the selection into the container given to us\n        this.containingDiv.appendChild(this.selectionLayer);\n\n        addTraitEventDispatcher(this);\n    }\n\n    av.GlobalManagerMixin.call(EditFrame.prototype);\n    var proto = EditFrame.prototype;\n\n    proto.unload = function() {\n\n        this.containingDiv.removeChild(this.selectionLayer);\n        this.selectionLayer = null;\n    };\n    /**\n     * Draws a selection box with the given attributes\n     *\n     * @param {number} x - The x coordinate to place the selection box\n     * @param {number} y - The y coordinate to place the selection box\n     * @param {number} width - The width of the selection box\n     * @param {number} height - The height of the selection box\n     * @param {number} rotation - The amount of degrees to rotate the selection box\n     */\n    proto.setSelection = function (x, y, width, height, rotation) {\n\n        var margin = this.frameMargin;\n        var doubleMargin = margin * 2;\n\n        updateSelectorBoxDimensions.bind(this)(width + doubleMargin, height + doubleMargin);\n        updateSelectorBoxPosition.bind(this)(x - margin, y - margin, rotation);\n        updateSelectionBoxState.bind(this)(true); //activate the selection box\n        this.selectionLayer.style.visibility = 'visible';\n    };\n\n    /**\n     * Displays the selection box based on the position, dimension, and rotation of a given markup\n     *\n     * @param {Autodesk.Viewing.Extensions.Markups.Core.Markup} markup - the markup that should appear as selected\n     */\n    proto.setMarkup = function (markup) {\n\n        this.hammer && this.hammer.set({enable: markup !== null});\n        this.markup = markup;\n\n        updateSelectionBoxState.bind(this)(false);\n\n        if (markup) {\n            var boundingBox = markup.getBoundingRect();\n            var rotation = markup.getRotation();\n            this.frameMargin = boundingBox.margin !== undefined ? boundingBox.margin : EDIT_FRAME_DEFAULT_MARGIN;\n\n            this.setSelection(boundingBox.x, boundingBox.y, boundingBox.width, boundingBox.height, rotation);\n\n            this.enableResizeHandles();\n            this.enableRotationHandle();\n\n            if (markup.preventReposition) {\n                this.selectionLayer.firstChild.style.cursor = '';\n            }\n            else {\n                this.selectionLayer.firstChild.style.cursor = 'move';\n            }\n        }\n    };\n\n    proto.startDrag = function (event) {\n\n        if (this.markup && this.markup.preventReposition) return;\n\n        this.onMouseMove = this._onRepositionMouseMove.bind(this);\n        this.onMouseUp = this._onRepositionMouseUp.bind(this);\n        this._onRepositionMouseDown(event, this.editor.getMousePosition());\n    };\n\n     proto.isActive = function() {\n        return this.selection.active;\n     };\n\n    proto.isDragging = function () {\n\n        return this.selection.dragging;\n    };\n\n    proto.isResizing = function () {\n\n        return this.selection.resizing;\n    };\n\n    proto.isRotating = function () {\n\n        return this.selection.rotating;\n    };\n\n    proto.onMouseMove = function (event) {\n\n        //dummy fn\n    };\n\n    proto.onMouseUp = function (event) {\n        //dummy fn\n    };\n\n    proto.onWheel = function (event) {\n        this.editor.viewer.toolController.mousewheel(event);\n    };\n\n    proto.onTouchPan = function(event) {\n        var gestureHandler = this.editor.viewer.toolController.getTool(\"gestures\");\n        gestureHandler.distributeGesture(event);\n        event.preventDefault();\n    };\n\n    proto.onTouchPinch = function(event) {\n        var gestureHandler = this.editor.viewer.toolController.getTool(\"gestures\");\n        gestureHandler.distributeGesture(event);\n        event.preventDefault();\n    };\n\n     proto.onHammerDrag = function(event) {\n\n         function updateEditorInput(input, parent, event) {\n\n             //TODO: Change this when refactoring input in edit frame.\n             var rect = parent.getBoundingClientRect();\n             input.mousePosition.x = event.pageX - rect.left;\n             input.mousePosition.y = event.pageY - rect.top;\n         }\n\n        //console.log('EditFrame drag ' + event.type);\n         convertEventHammerToMouse(event);\n         switch (event.type) {\n             case 'dragstart':\n                 updateEditorInput(this.editor.input, this.editor.svg, event);\n                 this.editor.callSnapperMouseDown();\n                 // Check whether to translate, rotate or resize\n                 if (isRotatePoint(event.target)) {\n                     // Rotate\n                     this._onRotationMouseDown(event);\n                 } else if (isDragPoint(event.target)) {\n                     // Resize\n                     this._onResizeMouseDown(event);\n                 } else {\n                     this.startDrag(event);\n                 }\n                 event.preventDefault();\n                 break;\n             case 'dragmove':\n                 updateEditorInput(this.editor.input, this.editor.svg, event);\n                 this.editor.callSnapperMouseMove();\n                 this.onMouseMove(event);\n                 event.preventDefault();\n                 break;\n             case 'dragend':\n                 updateEditorInput(this.editor.input, this.editor.svg, event);\n                 this.onMouseUp(event);\n                 event.preventDefault();\n                 break;\n         }\n     };\n\n    proto.onHammerDoubleTap = function(event) {\n\n        function updateEditorInput(input, parent, event) {\n\n            //TODO: Change this when refactoring input in edit frame.\n            var rect = parent.getBoundingClientRect();\n            input.mousePosition.x = event.pageX - rect.left;\n            input.mousePosition.y = event.pageY - rect.top;\n        }\n\n        convertEventHammerToMouse(event);\n        updateEditorInput(this.editor.input, this.editor.svg, event);\n\n        this.selection.dragging = false;\n        this.editor.editMode && this.editor.editMode.onMouseDoubleClick(this.markup);\n    };\n\n    proto.enableResizeHandles = function () {\n\n        var markup = this.markup;\n        var handle;\n\n        if (markup.isHeightConstrained() || markup.isWidthConstrained()) {\n            //hide all the handles\n            for (var direction in this.selection.handle) {\n                handle = this.selection.handle[direction];\n                if(handle) handle.style.display = 'none';\n            }\n\n            //show only the resize points that are allowed\n            if (!markup.isHeightConstrained()) {\n                this.selection.handle['n'].style.display = 'block';\n                this.selection.handle['s'].style.display = 'block';\n            }\n            if (!markup.isWidthConstrained()) {\n                this.selection.handle['w'].style.display = 'block';\n                this.selection.handle['e'].style.display = 'block';\n            }\n        } else {\n            //no constraints, show all resize handles\n            for (var direction in this.selection.handle) {\n                handle = this.selection.handle[direction];\n                if(handle) handle.style.display = 'block';\n            }\n        }\n    };\n\n    proto.enableRotationHandle = function () {\n\n        var markup = this.markup;\n        var display = markup.isRotationConstrained() ? 'none' : 'block';\n        this.selection.rotationHandle.style.display = display;\n        this.selection.rotationBridge.style.display = display;\n    };\n\n     function convertEventHammerToMouse(event) {\n         // Convert Hammer touch-event X,Y into mouse-event X,Y.\n         event.pageX = event.pointers[0].clientX;\n         event.pageY = event.pointers[0].clientY;\n     }\n\n    /**\n     * Creates an element spanning the full height and width of its parent.\n     * It serves as our surface to draw the selection box.\n     *\n     * @return {HTMLElement}\n     */\n    function createSelectionLayer() {\n\n        const _document = this.getDocument();\n        var selectionLayer = _document.createElement('div');\n        selectionLayer.style.position = 'absolute';\n        selectionLayer.style.top = 0;\n        selectionLayer.style.bottom = 0;\n        selectionLayer.style.left = 0;\n        selectionLayer.style.right = 0;\n        //don't let the selection box be visible outside the selection layer\n        selectionLayer.style.overflow = 'hidden';\n        selectionLayer.style.visibility = 'hidden';\n        togglePointerEvents(selectionLayer, false);\n        return selectionLayer;\n    }\n\n    /**\n     * Creates a single drag point with the corresponding styles\n     *\n     * @param {number} diameter - The size of the drag point\n     * @param {string} position - The cardinal(n, s, w, e) or ordinal(nw, nw, sw, se) direction of the point\n     * @return {HTMLElement}\n     */\n    function createDragPoint(position) {\n\n        const _document = this.getDocument();\n        var point = _document.createElement('div');\n\n        setResizeCursor(point, position);\n        point.className = 'selector-drag-point autodesk-markups-extension-core-make-me-bigger sdp-handle-' + position;\n        point.classList.add('adsk-viewing-viewer');\n        point.setAttribute('data-sdp-handle', position);\n\n        return point;\n    }\n\n    function createRotatePoint () {\n        const _document = this.getDocument();\n        var point = _document.createElement('div');\n        point.classList.add('adsk-viewing-viewer');\n        point.classList.add('selector-rotate-point');\n        point.classList.add('autodesk-markups-extension-core-make-me-bigger');\n        setResizeCursor(point, 'w');\n\n        return point;\n    }\n\n    function createRotationBridge() {\n        const _document = this.getDocument();\n        var rotationBridge = _document.createElement('div');\n        rotationBridge.classList.add('adsk-viewing-viewer');\n        rotationBridge.classList.add('selector-rotate-point');\n        rotationBridge.classList.add('autodesk-markups-extension-core-make-me-bigger');\n        rotationBridge.classList.add('rotation-bridge');\n        setResizeCursor(rotationBridge, 'w');\n\n        return rotationBridge;\n    }\n\n    function setResizeCursor (element, direction) {\n\n        var cursor;\n        switch(direction) {\n            case 'n':\n            case 's':\n                cursor = 'ns-resize';\n                break;\n            case 'w':\n            case 'e':\n                cursor = 'ew-resize';\n                break;\n            case 'ne':\n            case 'sw':\n                cursor = 'nesw-resize';\n                break;\n            case 'nw':\n            case 'se':\n                cursor = 'nwse-resize';\n                break;\n        }\n        element.style.cursor = cursor;\n    }\n\n    /**\n     * Creates the 8 drag points of the selection box.\n     *\n     * @this EditFrame\n     */\n    function createDragPoints(selector) {\n\n        ['n', 's', 'w', 'e', 'nw', 'ne', 'sw', 'se'].forEach(function (direction) {\n            //store the drag point and put it in the DOM\n            this.selection.handle[direction] = createDragPoint.call(this, direction);\n            selector.appendChild(this.selection.handle[direction]);\n        }.bind(this));\n    }\n\n    /**\n     * Determines if an element is a drag point\n     *\n     * @return {boolean}\n     */\n    function isDragPoint(element) {\n\n        return matchesSelectorAux(element, '.selector-drag-point');\n    }\n\n    /**\n     * Determines if an element is a rotate point\n     *\n     * @return {boolean}\n     */\n    function isRotatePoint(element) {\n\n        return matchesSelectorAux(element, '.selector-rotate-point');\n    }\n\n    /**\n     * Creates the element that will be used as the selection box. It also\n     * takes care of adding the drag handles\n     *\n     * @return {HTMLElement} - the selection box\n     * @this EditFrame\n     */\n    function createSelectorBox() {\n\n        const _document = this.getDocument();\n        var selectorBox = _document.createElement('div');\n        togglePointerEvents(selectorBox, true);\n        selectorBox.classList.add('selector-box');\n\n        this.selection.rotationBridge = createRotationBridge.bind(this)();\n        selectorBox.appendChild(this.selection.rotationBridge);\n\n        this.selection.rotationHandle = createRotatePoint.bind(this)();\n        selectorBox.appendChild(this.selection.rotationHandle);\n\n        createDragPoints.bind(this)(selectorBox);\n\n        //store the selector box\n        this.selection.element = selectorBox;\n\n        if (!av.isMobileDevice()) {\n            this.onWheelBinded = this.onWheel.bind(this);\n            this.selection.element.addEventListener('wheel', this.onWheelBinded);\n            this.selection.element.addEventListener('DOMMouseScroll', this.onWheelBinded); // firefox\n        }\n\n        //add the selection box to the selection layer\n        this.selectionLayer.appendChild(this.selection.element);\n\n        //we are just creating the box, start it out hidden\n        updateSelectionBoxState.bind(this)(false);\n\n        return selectorBox;\n    }\n\n    /**\n     * Utility to create the CSS translate3d value from a given 2d point\n     *\n     * @param {number} x - coordinate\n     * @param {number} y - coordinate\n     * @return {string}\n     */\n    function toTranslate3d(x, y) {\n\n        return 'translate3d(' + x + 'px,' + y + 'px,0)';\n    }\n\n\n    /**\n     * Updates the display state of the selection box\n     *\n     * @param {boolean} active - The new state of the the selection box\n     * @this EditFrame\n     */\n    function updateSelectionBoxState(active) {\n\n        this.selection.active = active;\n        this.selection.element.style.display = active ? 'block' : 'none';\n    }\n\n    /**\n     * Updates the position and rotation of the selection box.\n     *\n     * @param {number} x - The x coordinate to place the selection box\n     * @param {number} y - The y coordinate to place the selection box\n     * @param {number} rotation - The amount of degrees to rotate the selection box\n     * @this EditFrame\n     */\n    function updateSelectorBoxPosition(x, y, rotation) {\n\n        this.selection.x = x;\n        this.selection.y = y;\n        this.selection.rotation = rotation;\n        var size = this.markup.getBoundingRect();\n        //TODO: consider DomElementStyle\n\n        size.width += this.frameMargin * 2;\n        size.height += this.frameMargin * 2;\n\n        var transform = toTranslate3d(x, y) + ' rotate(' + rotation + 'rad)';\n        var transformOrigin = (size.width / 2) + 'px ' + (size.height / 2) + 'px';\n\n        this.selection.element.style.msTransform =\n            this.selection.element.style.webkitTransform =\n            this.selection.element.style.transform = transform;\n        this.selection.element.style.msTransformOrigin =\n            this.selection.element.style.webkitTransformOrigin =\n            this.selection.element.style.transformOrigin = transformOrigin;\n    }\n\n    /**\n     * Updates the dimensions of the selection box (width and height).\n     *\n     * @param {number} width - The new width of the selection box\n     * @param {number} height - The new height of the selection box\n     * @this EditFrame\n     */\n    function updateSelectorBoxDimensions(width, height) {\n\n        this.selection.width = width;\n        this.selection.height = height;\n        this.selection.element.style.width = width + 'px';\n        this.selection.element.style.height = height + 'px';\n    }\n\n    /**\n     * Attaches all the necessary listeners to handle a drag action.\n     *\n     * @this EditFrame\n     */\n    function handleSelectionBoxDragging () {\n\n        this.selection.element.addEventListener('mousedown', this._onRepositionMouseDown.bind(this));\n    }\n\n    /**\n     * Handles panning when right clicking down\n     * @param event\n     * @returns {boolean} returns true if the event was handled\n     * @private\n     */\n    proto._handleRightClickDown = function(event) {\n\n        if (!av.isMobileDevice() && (avp.isRightClick(event, this.editor.viewer.navigation) || avp.isMiddleClick(event))) {\n            this.editor.input.onMouseDownRightClick(event);\n            return true;\n        }\n\n        return false;\n    };\n\n    var ignoreFirstMouseMove = false;\n    proto._onRepositionMouseDown = function (event, cursor) {\n\n        if (this._handleRightClickDown(event))\n            return;\n\n        // Return for markups that are not allowed to be repositioned.\n        if (this.markup && this.markup.preventReposition) return;\n\n        // ignore the first mouse move for the Microsoft Surface\n        ignoreFirstMouseMove = !av.isMobileDevice() && av.isTouchDevice();\n        //a synthetic start means that the event was triggered manually and not as a\n        //result of a mousedown on the edit frame\n        const _window = this.getWindow();\n        var syntheticStart = !(event instanceof _window.MouseEvent);\n\n        //during a real mousedown, ignore events originating from a resizing handle\n        if (!syntheticStart && (isDragPoint(event.target) || isRotatePoint(event.target))) return;\n\n        //get the cursor position\n        cursor = syntheticStart ?  cursor : this.editor.getMousePosition();\n\n        //store the initial cursor and axis constrains\n        this.initialCursor = cursor;\n        this.initialPosition = this.markup.getClientPosition();\n        this.areAxisConstrained = false;\n        this.axisConstrains = new THREE.Vector2(1,1);\n\n        //update the function that will handle the mousemove and mouseup events\n        this.onMouseMove = this._onRepositionMouseMove.bind(this);\n        this.onMouseUp = this._onRepositionMouseUp.bind(this);\n\n        if (this.selection.dragging)\n            return;\n\n        this.selection.dragging = true;\n        this.editor.beginActionGroup();\n\n        //if alt down I drop a clone.\n        if (event && event.altKey) {\n            var editor = this.editor;\n            var cloneMarkup = new CloneMarkup(editor, editor.getId(), this.markup, this.markup.position);\n            cloneMarkup.execute();\n        }\n\n        this.dispatchEvent({ type: MarkupEvents.EVENT_EDITFRAME_EDITION_START }); // Moving around\n    };\n\n    proto._onRepositionMouseMove = function(event) {\n\n        // This check is needed for selecting markups on devices that have touch screen + mouse (eg: Microsoft Surface)\n        if (ignoreFirstMouseMove) {\n            ignoreFirstMouseMove = false;\n            return;\n        }\n        //ignore mousemove events if the dragging state hasn't been activated\n        if (!this.selection.dragging || !this.markup || this.markup.preventReposition) return;\n\n        //get the position of the cursor relative to selection layer\n        var cursor = this.editor.getMousePosition();\n\n        //constrain axis if shift key is down.\n        var constrainAxis = this.editor.input.constrainAxis;\n        if (this.areAxisConstrained !== constrainAxis) {\n            this.areAxisConstrained = constrainAxis;\n            this.axisConstrains = constrainAxis ? new THREE.Vector2(0, 0) : new THREE.Vector2(1,1);\n\n            this.initialPosition.x += cursor.x - this.initialCursor.x;\n            this.initialPosition.y += cursor.y - this.initialCursor.y;\n\n            this.initialCursor.x = cursor.x;\n            this.initialCursor.y = cursor.y;\n        }\n\n        //determine how many pixel we have to shift the\n        //selection box to keep the cursor on the drag point\n        var movement = {\n            x: cursor.x - this.initialCursor.x,\n            y: cursor.y - this.initialCursor.y\n        };\n\n        var deadZone = 15;\n        if (this.axisConstrains.x === 0 && this.axisConstrains.y === 0) {\n\n            if (Math.abs(movement.x) > deadZone) {\n                this.axisConstrains.x = 1;\n                movement.x += movement.x < 0 ?  deadZone : -deadZone;\n            } else\n            if (Math.abs(movement.y) > deadZone) {\n                this.axisConstrains.y = 1;\n                movement.y += movement.y < 0 ?  deadZone : -deadZone;\n            }\n        }\n\n        var x = this.initialPosition.x + movement.x * this.axisConstrains.x;\n        var y = this.initialPosition.y + movement.y * this.axisConstrains.y;\n\n        updateSelectorBoxPosition.bind(this)(x, y, this.selection.rotation);\n\n        //tell the markup to start transforming\n        //the markup expects an (x, y) coordinate that\n        //uses an origin at the center, adjust our x, y because\n        //our origin starts at the top left\n        var position = this.editor.positionFromClientToMarkups(x, y);\n        var setPosition = new SetPosition(this.editor, this.markup, position);\n        setPosition.execute();\n    };\n\n    proto._onRepositionMouseUp = function () {\n\n        if (this.markup && this.markup.preventReposition) return;\n\n        this.last = null;\n\n        //this should never be called after the mouse up because we are no longer repositioning\n        this.onMouseMove = function () {/*do nothing*/};\n        this.onMouseUp = function () {/*do nothing*/};\n\n        if(!this.selection.dragging) {\n            return;\n        }\n\n        this.editor.closeActionGroup();\n        this.selection.dragging = false;\n        this.dispatchEvent({ type: MarkupEvents.EVENT_EDITFRAME_EDITION_END }); // Moving around\n    };\n\n    proto._onResizeMouseDown = function (event) {\n\n        if (this._handleRightClickDown(event))\n            return;\n\n        var target = event.target;\n\n        //is the target where the mousedown occurred a drag point\n        if (!isDragPoint(target)) {\n            return;\n        }\n\n        //keep a reference to the point where the drag started\n        this.selection.handle.resizing = target;\n        //figure out which direction this point should resize\n        var direction = this.selection.handle.resizing.getAttribute('data-sdp-handle');\n        //set the cursor position for the entire layer\n        this.containingDiv.style.cursor = direction + '-resize';\n\n        var cursor = this.editor.getMousePosition();\n\n        var position = this.markup.getClientPosition();\n        var size = this.markup.getBoundingRect();\n\n        //store the center\n        this.initial = {\n            x: position.x,\n            y: position.y,\n            width: size.width,\n            height: size.height,\n            mouseX: cursor.x,\n            mouseY: cursor.y\n        };\n\n        this.onMouseMove = this._onResizeMouseMove.bind(this);\n        this.onMouseUp = this._onResizeMouseUp.bind(this);\n\n        if (this.selection.resizing) {\n            return;\n        }\n\n        this.selection.resizing = true;\n        this.editor.beginActionGroup();\n\n        setHandleSelected(event.target, true);\n\n        //notify the markup that dragging has started\n        this.dispatchEvent({ type: MarkupEvents.EVENT_EDITFRAME_EDITION_START }); // Resizing\n    };\n\n    proto._onResizeMouseMove = function (event) {\n\n        if (!this.selection.resizing) return;\n\n        var cursor = this.editor.getMousePosition();\n        var initial = this.initial;\n\n        var movement = {\n            x: cursor.x - initial.mouseX,\n            y: cursor.y - initial.mouseY\n        };\n\n        var vector = new THREE.Vector3(movement.x, movement.y, 0);\n        var undoRotation = new THREE.Matrix4().makeRotationZ(-this.selection.rotation);\n        movement = vector.applyMatrix4(undoRotation);\n\n        var x = initial.x,\n            y = initial.y,\n            width = initial.width,\n            height = initial.height;\n\n        var localSpaceDelta = new THREE.Vector3();\n\n        //get the direction of the arrow being dragged\n        var direction = this.selection.handle.resizing.getAttribute('data-sdp-handle');\n\n        // TODO: Make a mechanism to configure and use this feature from Markups Core.\n        // If shift is pressed, figure aspect ratio is maintained.\n        if (this.editor.input.keepAspectRatio && ['nw', 'ne', 'sw', 'se'].indexOf(direction) !== -1) {\n\n            var delta = new THREE.Vector3(movement.x, movement.y, 0);\n            switch (direction){\n                case 'nw': movement.set(-initial.width,-initial.height, 0); break;\n                case 'ne': movement.set( initial.width,-initial.height, 0); break;\n                case 'sw': movement.set( initial.width,-initial.height, 0); break;\n                case 'se': movement.set( initial.width, initial.height, 0); break;\n            }\n            movement.normalize();\n            movement = delta.projectOnVector(movement);\n        }\n\n        var translations = {\n            n: function () {\n                height -= movement.y;\n                localSpaceDelta.y = movement.y;\n            },\n            s: function () {\n                height += movement.y;\n                localSpaceDelta.y = movement.y;\n            },\n            w: function () {\n                width -= movement.x;\n                localSpaceDelta.x = movement.x;\n            },\n            e: function () {\n                width += movement.x;\n                localSpaceDelta.x = movement.x;\n            },\n            nw: function () {\n                this.n();\n                this.w();\n            },\n            ne: function () {\n                this.n();\n                this.e();\n            },\n            sw: function () {\n                this.s();\n                this.w();\n            },\n            se: function () {\n                this.s();\n                this.e();\n            }\n        };\n\n        translations[direction]();\n\n        // Check if new size is smaller than min width or height\n        if (width <= this.markup.getMinWidth() || height <= this.markup.getMinHeight()) return;\n\n        var redoRotation = new THREE.Matrix4().makeRotationZ(this.selection.rotation);\n        var actualDelta = localSpaceDelta.applyMatrix4(redoRotation);\n\n        var newPos = this.editor.positionFromClientToMarkups(\n            x + (actualDelta.x * 0.5),\n            y + (actualDelta.y * 0.5));\n\n        var newSize = this.editor.sizeFromClientToMarkups(width, height);\n\n        var setSize = new SetSize(this.editor, this.markup, newPos, newSize.x, newSize.y);\n        setSize.execute();\n    };\n\n    function setHandleSelected (handle, isSelected) {\n        if (isSelected) {\n            handle.classList.add('selected');\n        } else {\n            handle.classList.remove('selected');\n        }\n    }\n\n    proto._onResizeMouseUp = function (event) {\n        this.selection.resizing = false;\n        this.selection.handle.resizing = null;\n        this.containingDiv.style.cursor = '';\n\n        for (var direction in this.selection.handle) {\n            if (this.selection.handle[direction]) {\n                setHandleSelected(this.selection.handle[direction], false);\n            }\n        }\n\n\n        this.editor.closeActionGroup();\n        this.dispatchEvent({ type: MarkupEvents.EVENT_EDITFRAME_EDITION_END }); // Resizing\n\n        //this should never be called after the mouse up because we are no longer resizing\n        this.onMouseMove = function () {/*do nothing*/\n        };\n        this.onMouseUp = function () {/*do nothing*/\n        };\n    };\n\n\n    /**\n     * Attaches all the necessary listeners to handle a resizing action.\n     *\n     * @this EditFrame\n     */\n    function handleSelectionBoxResizing() {\n        this.selectionLayer.addEventListener('mousedown', this._onResizeMouseDown.bind(this));\n    }\n\n    function handleSelectionBoxRotating () {\n\n        this.selection.element.addEventListener('mousedown', this._onRotationMouseDown.bind(this));\n    }\n\n    var initialRotation;\n    var initialHandlePosition;\n\n    proto._onRotationMouseDown = function (event) {\n\n        if (this._handleRightClickDown(event))\n            return;\n\n        //ignore anything not coming from the rotation point\n        if (!isRotatePoint(event.target)) return;\n\n        this.editor.beginActionGroup();\n        this.selection.rotating = true;\n\n        //store the initial cursor\n        initialHandlePosition = this.editor.getMousePosition();\n\n        initialRotation = this.selection.rotation || 0;\n\n        //update the function that will handle the mousemove and mouseup events\n        this.onMouseMove = this._onRotationMouseMove.bind(this);\n        this.onMouseUp = this._onRotationMouseUp.bind(this);\n\n        setHandleSelected(event.target, true);\n\n        this.dispatchEvent({ type: MarkupEvents.EVENT_EDITFRAME_EDITION_START }); // Rotating\n    };\n\n     proto._onRotationMouseMove = function (event) {\n\n        //ignore mousemove events if the dragging state hasn't been activated\n        if (!this.selection.rotating) return;\n\n        var cursor = this.editor.getMousePosition();\n        var position = this.markup.getClientPosition();\n\n        var r = getAngleBetweenPoints(position, cursor);\n        var r2 = getAngleBetweenPoints(position, initialHandlePosition);\n        var rotation = r - r2 + initialRotation;\n\n        // TODO: Make a mechanism to configure and use this feature from Markups Core.\n        if (this.editor.input.snapRotations) {\n            var snap = degreesToRadians(22.5);\n            rotation = Math.ceil(rotation / snap) * snap;\n        }\n\n         //pass rotation as degrees\n         updateSelectorBoxPosition.bind(this)(this.selection.x, this.selection.y, rotation);\n\n        //convert to radians\n        var setRotation = new SetRotation(this.editor, this.markup, rotation);\n        setRotation.execute();\n    };\n\n    proto._onRotationMouseUp = function (event) {\n\n        this.selection.rotating = false;\n        initialRotation = null;\n        initialHandlePosition = null;\n        setHandleSelected(this.selection.rotationHandle, false);\n        this.editor.closeActionGroup();\n        this.dispatchEvent({ type: MarkupEvents.EVENT_EDITFRAME_EDITION_END }); // Rotating\n    };\n\n    /**\n     * Attaches double click listener and pass events to markup, markups such as text use it to enter text edit\n     * mode.\n     *\n     * @this EditFrame\n     */\n    function handleSelectionDoubleClick() {\n\n        var doubleClick = function (event) {\n            if (event.defaultPrevented) {\n                return;\n            }\n            this.selection.dragging = false;\n            var editMode = this.editor.editMode;\n            editMode && editMode.onMouseDoubleClick(this.markup);\n        }.bind(this);\n\n        var selectorBoxWrapper = this.selectionLayer;\n        selectorBoxWrapper.addEventListener('dblclick', doubleClick);\n    }\n\n    function togglePointerEvents(element, state) {\n\n        element.style.pointerEvents = state ? 'auto' : 'none';\n    }\n\n    function getAngleBetweenPoints (p1, p2) {\n\n        return Math.atan2(p2.y - p1.y, p2.x - p1.x);\n    }\n\n     function matchesSelectorAux(domElem, selector) {\n         if (domElem.matches) return domElem.matches(selector); //Un-prefixed\n         if (domElem.msMatchesSelector) return domElem.msMatchesSelector(selector);  //IE\n         if (domElem.mozMatchesSelector) return domElem.mozMatchesSelector(selector); //Firefox (Gecko)\n         if (domElem.webkitMatchesSelector) return domElem.webkitMatchesSelector(selector); // Opera, Safari, Chrome\n         return false;\n     }\n","'use strict';\n\n    var avp = Autodesk.Viewing.Private;\n\n    export function MarkupTool() {\n\n        Autodesk.Viewing.ToolInterface.call(this);\n        this.names = [\"markups.core\"];\n        this.panTool = null;\n        this.allowNav = false;\n        this.is2d = false;\n\n        this.coreExt = null;\n        this.hotkeysEnabled = true;\n\n        var _ctrlDown = false;\n        var _shiftDown = false;\n\n        // Non-ToolInterface methods //\n\n        this.allowNavigation = function(allow) {\n            this.allowNav = allow;\n        };\n        this.setCoreExtension = function(coreExt) {\n            this.coreExt = coreExt;\n        };\n        this.setHotkeysEnabled = function(enabled) {\n            this.hotkeysEnabled = enabled;\n        };\n\n\n        // ToolInterface methods //\n\n        this.activate = function(name, viewerApi) {\n            this.panTool = viewerApi.toolController.getTool(\"pan\");\n            if (this.panTool) {\n                this.panTool.activate(\"pan\"); // TODO: What if we want \"zoom\" here?\n            }\n\n            this.is2d = viewerApi.model.is2d();\n            this.viewer = viewerApi;\n        };\n\n        this.deactivate = function(name) {\n            if (this.panTool) {\n                this.panTool.deactivate(\"pan\");\n            }\n        };\n\n        this.handleKeyDown = function(event, keyCode) {\n\n            if (!this.coreExt.editMode) {\n                return false;\n            }\n\n            if (!this.hotkeysEnabled) {\n                return true; // Consume event\n            }\n\n            // Don't propagate key handling down to tool //\n\n            switch (keyCode) {\n                case Autodesk.Viewing.KeyCode.CONTROL: _ctrlDown = true; break;\n                case Autodesk.Viewing.KeyCode.SHIFT: _shiftDown = true; break;\n\n                case Autodesk.Viewing.KeyCode.x: _ctrlDown && !this.allowNav && this.coreExt.cut(); break;\n                case Autodesk.Viewing.KeyCode.c: _ctrlDown && !this.allowNav && this.coreExt.copy(); break;\n                case Autodesk.Viewing.KeyCode.v: _ctrlDown && !this.allowNav && this.coreExt.paste(); break;\n                case Autodesk.Viewing.KeyCode.d:\n                    if (_ctrlDown && !this.allowNav) {\n                        // Duplicate\n                        this.coreExt.copy();\n                        this.coreExt.paste();\n                    }\n                    break;\n                case Autodesk.Viewing.KeyCode.z:\n                    if (_ctrlDown && !_shiftDown && !this.allowNav) {\n                        this.coreExt.undo();\n                    }\n                    else if (_ctrlDown && _shiftDown && !this.allowNav) {\n                        this.coreExt.redo(); // Also support Ctrl+Y\n                    }\n                    break;\n                case Autodesk.Viewing.KeyCode.y: _ctrlDown && !this.allowNav && this.coreExt.redo(); break; // Also support ctrl+shift+z\n                case Autodesk.Viewing.KeyCode.ESCAPE: this.coreExt.onUserCancel(); break;\n\n                case Autodesk.Viewing.KeyCode.BACKSPACE: // Fall through\n                case Autodesk.Viewing.KeyCode.DELETE:\n                    var selectedMarkup = this.coreExt.getSelection();\n                    if (selectedMarkup) {\n                        this.coreExt.deleteMarkup(selectedMarkup);\n                    }\n                    break;\n                case Autodesk.Viewing.KeyCode.F12:\n                    return false; // To allow opening developer console.\n                    break;\n                default: break;\n            }\n\n            return true; // Consume event\n        };\n        this.handleKeyUp = function(event, keyCode) {\n\n            if (!this.coreExt.editMode) {\n                return false;\n            }\n\n            if (!this.hotkeysEnabled) {\n                return true; // Consume event\n            }\n\n            // Don't propagate key handling down to tool\n\n            switch (keyCode) {\n                case Autodesk.Viewing.KeyCode.CONTROL: _ctrlDown = false; break;\n                case Autodesk.Viewing.KeyCode.SHIFT: _shiftDown = false; break;\n                default: break;\n            }\n\n            return true; // Consume event ONLY\n        };\n\n        this.update = function() {\n            if (this.allowNav && this.panTool && this.panTool.update) {\n                return this.panTool.update();\n            }\n            return false;\n        };\n\n        this.handleSingleClick = function( event, button ) {\n            if (this.allowNav) {\n                // If pan tool won't handle single click, then pass over the event.\n                if (this.panTool && this.panTool.handleSingleClick)\n                    return this.panTool.handleSingleClick(event, button);\n                else\n                    return false;\n            }\n            return true; // Consume event\n        };\n        this.handleDoubleClick = function( event, button ) {\n            if (this.allowNav) {\n                // If pan tool won't handle double click, then pass over the event\n                if (this.panTool && this.panTool.handleDoubleClick) {\n                    return this.panTool.handleDoubleClick(event, button);\n                }\n                else\n                    return false;\n            }\n            return true; // Consume event\n        };\n        this.handleSingleTap = function( event ) {\n            if (this.allowNav) {\n                // If pan tool won't handle single tap, then pass over the event\n                if (this.panTool && this.panTool.handleSingleTap) {\n                    return this.panTool.handleSingleTap(event);\n                }\n                else\n                    return false;\n            }\n            return true; // Consume event\n        };\n        this.handleDoubleTap = function( event ) {\n            if (this.allowNav) {\n                // If pan tool won't handle double tap, then pass over the event\n                if (this.panTool && this.panTool.handleDoubleTap) {\n                    return this.panTool.handleDoubleTap(event);\n                }\n                else\n                    return false;\n            }\n            return true; // Consume event\n        };\n        this.handleWheelInput = function(delta, event) {\n            if (this.allowNav || this.is2d) {\n                // If pan tool won't handle wheel input, then pass over the event\n                if (this.panTool && this.panTool.handleWheelInput) {\n                    this.coreExt.callSnapperMouseMove();\n                    return this.panTool.handleWheelInput(delta, event);\n                }\n                else\n                    return false;\n            }\n            return true; // Consume event\n        };\n        this.handleButtonDown = function(event, button) {\n            if (this.allowNav || (this.is2d && (avp.isRightClick(event, this.viewer.navigation) || avp.isMiddleClick(event)))) {\n                // If pan tool won't handle button down, then pass over the event\n                if (this.panTool && this.panTool.handleButtonDown) {\n                    return this.panTool.handleButtonDown(event, button);\n                }\n                else\n                    return false;\n            }\n            return true; // Consume event\n        };\n        this.handleButtonUp = function(event, button) {\n            if (this.allowNav || (this.is2d && (avp.isRightClick(event, this.viewer.navigation) || avp.isMiddleClick(event)))) {\n                // If pan tool won't handle button up, then pass over the event\n                if (this.panTool && this.panTool.handleButtonUp) {\n                    return this.panTool.handleButtonUp(event, button);\n                }\n                else\n                    return false;\n            }\n            return true; // Consume event\n        };\n        this.handleMouseMove = function(event) {\n            if (this.allowNav || this.is2d) {\n                // If pan tool won't handle button move, then pass over the event\n                if (this.panTool && this.panTool.handleMouseMove) {\n                    return this.panTool.handleMouseMove(event);\n                }\n                else\n                    return false;\n            }\n            return true; // Consume event\n        };\n        this.handleGesture = function(event) {\n            if (this.allowNav || this.is2d) {\n                // If pan tool won't handle gesture, then pass over the event\n                if (this.panTool && this.panTool.handleGesture) {\n                    return this.panTool.handleGesture(event);\n                }\n                else\n                    return false;\n            }\n            return true; // Consume event\n        };\n        this.handleBlur = function(event) {\n            if (this.allowNav) {\n                // If pan tool won't handle blur, then pass over the event\n                if (this.panTool && this.panTool.handleBlur) {\n                    return this.panTool.handleBlur(event);\n                }\n                else\n                    return false;\n            }\n            return true; // Consume event\n        };\n    }\n","\n// Maps EditMode id (string) into a contructor/class\nvar _editModes = {};\n\nclass EditModeManager {\n    constructor(){\n        // nothing //\n    }\n\n    register(id, clazz) {\n        if (id in _editModes)\n            throw new Error(`EditMode with id (${id}) already registered.`);\n        \n            _editModes[id] = clazz;\n    }\n\n    unregister(id) {\n        if (id in _editModes)\n            delete _editModes[id];\n    }\n\n    getClass(id) {\n        return _editModes[id] || null;\n    }\n\n    getRegistered() {\n        var ret = {}\n        for (var id in _editModes) {\n            if (_editModes.hasOwnProperty(id)) {\n                ret[id] = _editModes[id];\n            }\n        }\n        return ret; // shallow copy.\n    }\n}\n\n\nexport var theEditModeManager =  new EditModeManager();","\nimport { theEditModeManager } from '../EditModeManager'\nimport * as MarkupTypes from '../MarkupTypes'\n\nimport { EditModeArrow } from './EditModeArrow'\nimport { EditModeText } from './EditModeText'\nimport { EditModeRectangle } from './EditModeRectangle'\nimport { EditModeCircle } from './EditModeCircle'\nimport { EditModeCloud } from './EditModeCloud'\nimport { EditModeFreehand } from './EditModeFreehand'\nimport { EditModeHighlight } from './EditModeHighlight'\nimport { EditModePolyline } from './EditModePolyline'\nimport { EditModePolycloud } from './EditModePolycloud'\nimport { EditModeCallout } from './EditModeCallout'\nimport { EditModeDimension } from './EditModeDimension'\n\n\ntheEditModeManager.register(MarkupTypes.MARKUP_TYPE_ARROW, EditModeArrow);\ntheEditModeManager.register(MarkupTypes.MARKUP_TYPE_TEXT, EditModeText);\ntheEditModeManager.register(MarkupTypes.MARKUP_TYPE_RECTANGLE, EditModeRectangle);\ntheEditModeManager.register(MarkupTypes.MARKUP_TYPE_CIRCLE, EditModeCircle);\ntheEditModeManager.register(MarkupTypes.MARKUP_TYPE_CLOUD, EditModeCloud);\ntheEditModeManager.register(MarkupTypes.MARKUP_TYPE_FREEHAND, EditModeFreehand);\ntheEditModeManager.register(MarkupTypes.MARKUP_TYPE_HIGHLIGHT, EditModeHighlight);\ntheEditModeManager.register(MarkupTypes.MARKUP_TYPE_POLYLINE, EditModePolyline);\ntheEditModeManager.register(MarkupTypes.MARKUP_TYPE_POLYCLOUD, EditModePolycloud);\ntheEditModeManager.register(MarkupTypes.MARKUP_TYPE_CALLOUT, EditModeCallout);\ntheEditModeManager.register(MarkupTypes.MARKUP_TYPE_DIMENSION, EditModeDimension);\n\n","'use strict';\n\nimport { EditActionManager } from './edit-actions/EditActionManager'\nimport * as MarkupEvents from './MarkupEvents'\nimport * as MarkupTypes from './MarkupTypes'\nimport { addTraitEventDispatcher, createSvgElement, setSvgParentAttributes,\n    MARKUP_DEFAULT_STROKE_WIDTH_IN_PIXELS, MARKUP_DEFAULT_FONT_WIDTH_IN_PIXELS,\n    hideLmvUi, restoreLmvUi, dismissLmvHudMessage, \n    removeAllMetadata, transferChildNodes, addSvgMetadata,\n    svgNodeToString, checkPolygon, stringToSvgNode, createMarkupFromSVG,\n    worldToClient, clientToWorld } from './MarkupsCoreUtils'\nimport { cloneStyle, copyStyle, createStyle } from './StyleUtils'\nimport { DomElementStyle } from './DomElementStyle'\nimport { Clipboard } from './edit-clipboard/Clipboard'\nimport { InputHandler } from './edit-input/InputHandler'\nimport { EditFrame } from './EditFrame'\nimport { MarkupTool } from './MarkupTool'\nimport { EditModeArrow } from './edit-modes/EditModeArrow'\n\nimport * as Blah from './edit-modes/BuiltinEditModes' // IMPORTANT!!\nimport CSS from './Markups.css' // IMPORTANT!!\n\n\n    var MeasureCommon = Autodesk.Viewing.MeasureCommon;\n\n    var PERSPECTIVE_MODE_SCALE = 1000;\n\n    /**\n     * Extension that allows end users to draw 2D markups on top of 2D and 3D models.\n     *\n     * @tutorial feature_markup\n     * @param {Autodesk.Viewing.Viewer3D} viewer - Viewer instance used to operate on.\n     * @param {object} options - Same Dictionary object passed into {@link Autodesk.Viewing.Viewer3D|Viewer3D}'s constructor.\n     * {@link Autodesk.Viewing.Extensions.Markups.Core.MarkupsCore/#show|show()}.\n     * @param {boolean} [options.markupDisableHotkeys] - Disables hotkeys for copy, cut, paste, duplicate, undo, redo and deselect.\n     * @param {Autodesk.Viewing.ToolInterface} [options.markupToolClass] - Class override for input handling.\n     * Use it to override/extend default hotkeys and/or mouse/gesture input.\n     * @memberof Autodesk.Viewing.Extensions.Markups.Core\n     * @constructor\n     */\n    export function MarkupsCore(viewer, options) {\n\n        Autodesk.Viewing.Extension.call(this, viewer, options);\n\n        this.options = this.options || {};\n        this.markups = [];\n        this.styles = {};\n\n        this.activeLayer = '';\n        this.duringViewMode = false;\n        this.duringEditMode = false;\n\n        this.svgLayersMap = {};\n\n        // Add action manager.\n        this.actionManager = new EditActionManager( 50 ); // history of 50 actions.\n        this.actionManager.addEventListener(MarkupEvents.EVENT_HISTORY_CHANGED, this.onEditActionHistoryChanged.bind(this));\n\n        this.nextId = 0; // Used to identify markups by id during an edit session.\n\n        // Clipboard.\n        this.clipboard = new Clipboard(this);\n\n        // Default Input handler.\n        this.input = new InputHandler();\n        this.input.setGlobalManager(this.globalManager);\n\n        // Bind functions so they have access to globalManager\n        this.createSvgElement = createSvgElement.bind(this);\n        this.addSvgMetadata = addSvgMetadata.bind(this);\n        this.checkPolygon = checkPolygon.bind(this);\n\n        // Extension will dispatch events.\n        addTraitEventDispatcher(this);\n\n        viewer.addEventListener(Autodesk.Viewing.CAMERA_CHANGE_EVENT, function() {\n            this.getStrokeWidth();\n            this.getFontWidth();\n        }.bind(this), { once: true });\n\n        // Handled events.\n        this.onCameraChangeBinded = this.onCameraChange.bind(this);\n        this.onViewerResizeBinded = function(event) {\n            // This is ugly, but we need to do this twice\n            var self = this;\n            // First usage is to avoid a blinking scenario\n            self.onViewerResize(event);\n            requestAnimationFrame(function(){\n                // Second one is to actually make it work on some resize scenarios.\n                // Check the unlikely scenario that we are no longer in view mode.\n                if (self.duringViewMode) {\n                    self.onViewerResize(event);\n                }\n            });\n        }.bind(this);\n\n        this.onMarkupSelectedBinded = this.onMarkupSelected.bind(this);\n        this.onMarkupEnterEditionBinded = this.onMarkupEnterEdition.bind(this);\n        this.onMarkupCancelEditionBinded = this.onMarkupCancelEdition.bind(this);\n        this.onMarkupDeleteEditionBinded = this.onMarkupDeleteEdition.bind(this);\n        this.onToolChangeBinded = this.onToolChange.bind(this);\n        this.onUnitsCalibrationStartsBinded = this.onUnitsCalibrationStarts.bind(this);\n\n        viewer.addEventListener(MeasureCommon.Events.UNITS_CALIBRATION_STARTS_EVENT, this.onUnitsCalibrationStartsBinded);\n    }\n\n    MarkupsCore.prototype = Object.create(Autodesk.Viewing.Extension.prototype);\n    MarkupsCore.prototype.constructor = MarkupsCore;\n\n    var proto = MarkupsCore.prototype;\n\n    proto.load = async function () {\n\n        // Add layer where annotations will actually live\n        var svg = this.svg = this.createSvgElement('svg');\n        setSvgParentAttributes(svg);\n\n        // NOTE: Required since LMV renders Y coordinates upwards,\n        // while browser's Y coordinates goes downwards.\n        var svgStyle = new DomElementStyle();\n        svgStyle.setAttribute('position', 'absolute');\n        svgStyle.setAttribute('left', '0');\n        svgStyle.setAttribute('top', '0');\n        svgStyle.setAttribute('transform', 'scale(1,-1)', { allBrowsers: true});\n        svgStyle.setAttribute('transformOrigin', '0, 0', { allBrowsers: true});\n        svg.setAttribute('style', svgStyle.getStyleString());\n\n        this.bounds = {x:0, y:0, width:0, height:0};\n\n        this.input.attachTo(this);\n\n        //Instantiate edit frame.\n        this.editFrame = new EditFrame(this.viewer.container, this);\n        this.editFrame.addEventListener(MarkupEvents.EVENT_EDITFRAME_EDITION_START, function(){this.disableMarkupInteractions(true);}.bind(this));\n        this.editFrame.addEventListener(MarkupEvents.EVENT_EDITFRAME_EDITION_END, function(){this.disableMarkupInteractions(false);}.bind(this));\n\n        // Register tool\n        var toolClass = this.options.markupToolClass || MarkupTool;\n        this.changeMarkupTool(toolClass, !this.options.markupDisableHotkeys);\n\n        await this.viewer.loadExtension('Autodesk.Snapping');\n\n        this.snapper = new Autodesk.Viewing.Extensions.Snapping.Snapper(this.viewer, {markupMode:true});\n        this.viewer.toolController.registerTool(this.snapper);\n\n        return true;\n    };\n\n    /**\n     * Change the markup tool's class in order to implement a different behaviour to the UI.\n     * @param {Autodesk.Viewing.Extensions.Markups.Core.MarkupTool} toolClass - Implementation or extension of MarkupTool's class.\n     * @param {boolean} enableHotKeys - Whether to enable markup's hot-keys or not.\n     */\n    proto.changeMarkupTool = function(toolClass, enableHotKeys) {\n        if (this.markupTool) {\n            this.viewer.toolController.deregisterTool(this.markupTool);\n            this.markupTool = null;\n        }\n\n        this.markupTool = new toolClass();\n        this.markupTool.setCoreExtension(this);\n        this.markupTool.setHotkeysEnabled(enableHotKeys);\n        this.viewer.toolController.registerTool(this.markupTool);\n    };\n\n    proto.unload = function() {\n\n        this.hide();\n\n        this.input.detachFrom(this);\n\n        this.editFrame.unload();\n\n        if (this.markupTool) {\n            this.viewer.toolController.deregisterTool(this.markupTool);\n            this.markupTool = null;\n        }\n\n        if (this.snapper) {\n            this.viewer.toolController.deregisterTool(this.snapper);\n            this.snapper = null;\n        }\n\n        var svg = this.svg;\n        if (svg && this.onMouseDownBinded) {\n            svg.removeEventListener(\"mousedown\", this.onMouseDownBinded);\n            this.onMouseDownBinded = null;\n        }\n        if (svg.parentNode) {\n            svg.parentNode.removeChild(svg);\n        }\n        this.editModeSvgLayerNode = null;\n        this.svg = null;\n\n        return true;\n    };\n\n    MarkupsCore.prototype.getStrokeWidth = function() {\n        \n        if (!this.initialStrokeWidth || (this.viewer.model && !this.viewer.model.is2d())) {\n            this.initialStrokeWidth = this.sizeFromClientToMarkups(0, MARKUP_DEFAULT_STROKE_WIDTH_IN_PIXELS).y;\n        }\n\n        return this.initialStrokeWidth;\n    };\n\n    MarkupsCore.prototype.getFontWidth = function() {\n        \n        if (!this.initialFontWidth || (this.viewer.model && !this.viewer.model.is2d())) {\n            this.initialFontWidth = this.sizeFromClientToMarkups(0, MARKUP_DEFAULT_FONT_WIDTH_IN_PIXELS).y;\n        }\n\n        return this.initialFontWidth;\n    };\n\n    /**\n     * Toggle in and out of Edit mode. In Edit mode the user is able to draw markups on the canvas.\n     *\n     * See also\n     * {@link Autodesk.Viewing.Extensions.Markups.Core.MarkupsCore/#enterEditMode|enterEditMode()} and\n     * {@link Autodesk.Viewing.Extensions.Markups.Core.MarkupsCore/#leaveEditMode|leaveEditMode()}\n     */\n    MarkupsCore.prototype.toggleEditMode = function() {\n\n        if (this.duringEditMode) {\n            this.leaveEditMode();\n        } else {\n            this.enterEditMode();\n        }\n    };\n\n    /**\n     * Enables mouse interactions and mobile device gestures over the Viewer canvas to create or draw markups.\n     *\n     * Exit Edit mode by calling {@link Autodesk.Viewing.Extensions.Markups.Core.MarkupsCore/#leaveEditMode|leaveEditMode()}.\n     *\n     * See also\n     * {@link Autodesk.Viewing.Extensions.Markups.Core.MarkupsCore/#show|show()}\n     * @param {string} layerId - [optional] Identifier for the layer of markups to be edited. Example \"Layer1\".\n     * @returns {boolean} Returns true if editMode is active\n     */\n    MarkupsCore.prototype.enterEditMode = function(layerId) {\n\n        function disableLayerMarkups(layer, disable){\n            if (layer){\n                var layerMarkups = layer.markups;\n                for (var k = 0; k < layerMarkups.length; k++){\n                    var m = layerMarkups[k];\n                    m.disableInteractions(disable);\n                }\n            }\n        }\n        if (layerId) {\n            if (!this.svgLayersMap[layerId]) {\n                // if layerId is supplied but it does not exist in the svgLayerMap then create the new layer\n                console.warn(\"No such layer exists.\");\n                return false;\n            }\n        }\n\n        // If not currently shown, then show\n        if (!this.duringViewMode) {\n            if (!this.show()){\n                return false; // Failed to enter view mode.\n            }\n        }\n\n        // Initialize the edit mode layer if it does not exist\n        if(!this.editModeSvgLayerNode) {\n            var parSvg = this.createSvgElement('g');\n            this.editModeSvgLayerNode = {\n                markups: [],\n                svg: parSvg\n            };\n            this.editModeSvgLayerNode.svg.setAttribute('cursor', 'default');\n        }\n\n\n        if ((this.editModeSvgLayerNode.svg.parentNode != this.svg) || !layerId) {\n            this.svg.appendChild(this.editModeSvgLayerNode.svg);\n        }\n        this.svg.setAttribute('cursor', 'crosshair');\n\n\n        if (layerId) {\n            var layer = this.svgLayersMap[layerId];\n            // If the layer exists in the layer map, use the information stored for that specific layer.\n            if (layer) {\n                // Remove the edit layer when entering edit mode of a specific edit mode.\n                var editModeLayerParentNode = this.editModeSvgLayerNode.svg.parentNode;\n                editModeLayerParentNode && editModeLayerParentNode.removeChild(this.editModeSvgLayerNode.svg);\n\n                // disable the markups in the editModeLayer\n                disableLayerMarkups(this.editModeSvgLayerNode, true);\n\n                // Enable interactions for markups in the current edit layer and disable interactions for markups in\n                // the other layers.\n                for (var key in this.svgLayersMap){\n                    var markups = this.svgLayersMap[key].markups;\n                    for (var i = 0; i < markups.length; i++) {\n                        var markup = markups[i];\n                        if (key !== layerId.toString()){\n                            // disable all not in the current layer.\n                            markup.disableInteractions(true);\n                        } else {\n                            // enable all markups in current layer.\n                            markup.disableInteractions(false);\n                        }\n                    }\n                }\n\n                // assign the current layer to the global active layer\n                this.activeLayer = layerId;\n                this.editingLayer = layerId;\n                var svgParent = layer.svg;\n\n                // remove previous svg layer child from svg\n                svgParent.parentNode && this.svg.removeChild(svgParent);\n\n                // reassign the markups in that layer to the global markups list\n                this.markups = layer.markups.slice();\n\n                // re-append svg layer child to svg to make it the top most layer\n                this.svg.appendChild(svgParent);\n            }\n        } else {\n            // disable interactions for the previous markups\n            // Example: enterEditMode(layer) -> enterEditMode()\n            if (this.editingLayer) {\n                for (var k = 0; k < this.markups.length; k++) {\n                    var m = this.markups[k];\n                    m.disableInteractions(true);\n                }\n                disableLayerMarkups(this.editModeSvgLayerNode, false);\n            }\n            this.editingLayer = '';\n            if (!this.editModeSvgLayerNode) {\n                this.markups = [];\n            }else{\n                this.markups = this.editModeSvgLayerNode.markups.slice();\n            }\n            this.activeLayer = '';\n        }\n\n        this.input.enterEditMode();\n        this.activateTool(true);\n        this.styles = {}; // Clear EditMode styles.\n        this.defaultStyle = null;\n        this.duringEditMode = true;\n        this.changeEditMode(new EditModeArrow(this));\n        this.actionManager.clear();\n        this.dispatchEvent({ type: MarkupEvents.EVENT_EDITMODE_ENTER });\n        this.allowNavigation(false);\n        return true;\n    };\n\n    /**\n     * Exits Edit mode.\n     *\n     * See also {@link Autodesk.Viewing.Extensions.Markups.Core.MarkupsCore/#enterEditMode|enterEditMode()}.\n     *\n     * @returns {boolean} Returns true if Edit mode has been deactivated\n     */\n    MarkupsCore.prototype.leaveEditMode = function() {\n\n        var NOT_IN_EDIT_MODE = true;\n        var WE_ARE_STILL_IN_EDIT_MODE = false;\n\n        if (!this.duringEditMode || !this.duringViewMode) {\n            return NOT_IN_EDIT_MODE;\n        }\n\n        var viewer = this.viewer;\n        if (!viewer) {\n            return WE_ARE_STILL_IN_EDIT_MODE; // something is very wrong...\n        }\n\n        this.editMode.destroy();\n        this.editMode = null;\n        this.duringEditMode = false;\n\n        if (this.snapper) {\n            this.snapper.indicator.clearOverlays();\n            this.snapper.clearSnapped();\n        }\n\n        // Remove the edit layer\n        if (this.editModeSvgLayerNode && this.editModeSvgLayerNode.svg.parentNode){\n            this.svg.removeChild(this.editModeSvgLayerNode.svg);\n        }\n        this.svg.setAttribute('cursor', 'default');\n\n        this.input.leaveEditMode();\n        this.editFrame.setMarkup(null);\n        this.activateTool(true);\n\n        this.allowNavigation(true);\n        this.dispatchEvent({ type: MarkupEvents.EVENT_EDITMODE_LEAVE });\n        return NOT_IN_EDIT_MODE;\n    };\n\n    /**\n     * Toggle between visible markups, i.e., show() and hidden markups, i.e., hide().\n     */\n    MarkupsCore.prototype.toggle = function() {\n\n        if (this.duringViewMode) {\n            this.hide();\n        } else {\n            this.show();\n        }\n    };\n\n    /**\n     * Enables loading of previously saved markups.\n     * Exit Edit mode by calling {@link Autodesk.Viewing.Extensions.Markups.Core.MarkupsCore/#hide|hide()}.\n     *\n     * See also\n     * {@link Autodesk.Viewing.Extensions.Markups.Core.MarkupsCore/#enterEditMode|enterEditMode()}.\n     * @returns {boolean} Whether it successfully entered view mode or not.\n     */\n    MarkupsCore.prototype.show = function() {\n\n        var viewer = this.viewer;\n        if (!viewer || !viewer.model || !this.svg) {\n            return false;\n        }\n\n        // Return if already showing or in edit-mode.\n        // Notice that edit mode requires that we are currently show()-ing.\n        if (this.duringViewMode || this.duringEditMode) {\n            return true;\n        }\n\n        viewer.addEventListener(Autodesk.Viewing.CAMERA_CHANGE_EVENT, this.onCameraChangeBinded);\n        viewer.addEventListener(Autodesk.Viewing.VIEWER_RESIZE_EVENT, this.onViewerResizeBinded);\n\n        // Add parent svg of all markups.\n        viewer.container.appendChild(this.svg);\n        viewer.reorderElements(this.svg);\n\n        this.input.enterViewMode();\n        hideLmvUi(viewer);\n\n        // TODO: Nasty hack, currently there is no API to disable mouse highlighting in 3d models.\n        // TODO: We nuke rollover function in viewer, for now, public api will be added soon.\n        this.onViewerRolloverObject = viewer.impl.rolloverObject;\n        viewer.impl.rolloverObject = function(){};\n\n        this.activateTool(true);\n        var camera = viewer.impl.camera;\n        this.onViewerResize({ width: camera.clientWidth, height: camera.clientHeight });\n\n        // See function loadMarkups() for when the actual SVG gets added onstage //\n        this.svgLayersMap = {};\n        this.duringViewMode = true;\n        this.allowNavigation(true);\n        return true;\n    };\n\n    /**\n     * Removes any markup currently overlaid on the viewer. It exits Edit mode if it is active.\n     *\n     * See also\n     * {@link Autodesk.Viewing.Extensions.Markups.Core.MarkupsCore/#show|show()}\n     * @returns {boolean} Whether it successfully left view mode or not.\n     */\n    MarkupsCore.prototype.hide = function() {\n\n        var RESULT_HIDE_OK = true;\n        var RESULT_HIDE_FAIL = false;\n\n        var viewer = this.viewer;\n        if (!viewer || !this.duringViewMode) {\n            return RESULT_HIDE_OK;\n        }\n\n        if (this.duringEditMode) {\n            if (!this.leaveEditMode()) {\n                return RESULT_HIDE_FAIL;\n            }\n        }\n\n        viewer.removeEventListener(Autodesk.Viewing.CAMERA_CHANGE_EVENT, this.onCameraChangeBinded);\n        viewer.removeEventListener(Autodesk.Viewing.VIEWER_RESIZE_EVENT, this.onViewerResizeBinded);\n\n        var svg = this.svg;\n        svg.parentNode && svg.parentNode.removeChild(svg);\n\n        // Remove all Markups and metadata (if any)\n        this.unloadMarkupsAllLayers();\n        removeAllMetadata(svg);\n\n        this.input.leaveViewMode();\n        restoreLmvUi(viewer);\n        this.viewer.impl.rolloverObject = this.onViewerRolloverObject;\n\n        this.activateTool(false);\n        this.duringViewMode = false;\n        return RESULT_HIDE_OK;\n    };\n\n    /**\n     * Removes newly created markups in the current editing layer.\n     * Markups that were created in a specific layer will not be removed.\n     *\n     * Markups should have been added while in\n     * {@link Autodesk.Viewing.Extensions.Markups.Core.MarkupsCore/#enterEditMode|Edit mode}.\n     */\n    MarkupsCore.prototype.clear = function() {\n        // Can only clear specific layers when in the edit mode of that layer.\n        if (!this.duringEditMode) {\n            console.warn(\"Clear only removes markups when in Edit Mode.\");\n            return;\n        }\n        var editModeLayer = this.editingLayer ? this.svgLayersMap[this.editingLayer] : this.editModeSvgLayerNode;\n        if (editModeLayer) {\n            var markups = editModeLayer.markups;\n            var svg = editModeLayer.svg;\n            if (svg && svg.childNodes.length > 0) {\n                while (svg.childNodes.length) {\n                    svg.removeChild(svg.childNodes[0]);\n                }\n            }\n            while (markups.length > 0) {\n                var markup = markups[0];\n                this.removeMarkup(markup);\n                markup.destroy();\n            }\n        }\n    };\n\n    /**\n     * Returns an SVG string with the markups created so far.\n     * The SVG string can be reloaded using\n     * {@link Autodesk.Viewing.Extensions.Markups.Core.MarkupsCore/#loadMarkups|loadMarkups()}.\n     *\n     * Markups should have been added while in\n     * {@link Autodesk.Viewing.Extensions.Markups.Core.MarkupsCore/#enterEditMode|Edit mode}.\n     * @returns {string} Returns an SVG element with all of the created markups in a string format.\n     */\n    MarkupsCore.prototype.generateData = function() {\n\n        var defaultLayer = this.editModeSvgLayerNode.svg;\n\n        if (this.editMode) {\n            this.editMode.onSave();\n        }\n\n        // Sanity check, remove any lingering metadata nodes\n        removeAllMetadata(this.svg);\n\n        if (this.activeLayer){\n            defaultLayer = this.svgLayersMap[this.activeLayer].svg;\n        }\n\n        var tmpNode = this.createSvgElement(\"svg\");\n        transferChildNodes(this.svg, tmpNode); // Transfer includes this.editModeSvgLayerNode\n        transferChildNodes(defaultLayer, this.svg);\n\n        // version 1: first implementation.\n        // version 2: added global offset to markup positions.\n        // version 3: change node structure to include hitareas, hit areas are not exported.\n        // version 4: scale perspective markups space by PERSPECTIVE_MODE_SCALE because bug in firefox. LMV-1150\n        var metadataObject = {\n            \"data-model-version\": \"4\"\n        };\n        var metadataNode = this.addSvgMetadata(this.svg, metadataObject);\n        var metadataNodes = [ metadataNode ];\n\n        // Notify each markup to inject metadata\n        this.markups.forEach(function(markup){\n            var addedNode = markup.setMetadata();\n            if (addedNode) {\n                metadataNodes.push(addedNode);\n            }\n        });\n\n        // Generate the data!\n        var data = svgNodeToString(this.svg);\n\n        // Remove metadataObject before returning\n        metadataNodes.forEach(function(metadataNode){\n            metadataNode.parentNode.removeChild(metadataNode);\n        });\n\n        transferChildNodes(this.svg, defaultLayer);\n        transferChildNodes(tmpNode, this.svg);\n        tmpNode = null; // get rid of it.\n\n        return  data;\n    };\n\n    /**\n     * @private\n     */\n    MarkupsCore.prototype.generatePoints3d = function() {\n\n        var result = {markups: [], main: null};\n        var markups = this.markups;\n        var markupsCount = markups.length;\n\n        if (markupsCount === 0) {\n            return result;\n        }\n\n        // Gather a 3d point for markup.\n        var idTarget = this.viewer.impl.renderer().readbackTargetId();\n        for(var i = 0; i < markupsCount; ++i) {\n\n            var markup = markups[i];\n            var point = markup.generatePoint3d(idTarget) || null;\n            result.markups.push(\n                {\n                    id: markup.id,\n                    type: markup.type,\n                    point: point || null\n                });\n        }\n\n\n        // If there is 3d point associated with an arrow, we use that as main point.\n        if (markupsCount === 1) {\n\n            var main = result.markups[0].point;\n            result.main = main && main.clone();\n            return result;\n        }\n\n        for(var i = 0; i < markupsCount; ++i) {\n\n            var collision = result.markups[i];\n            if (collision.type === MarkupTypes.MARKUP_TYPE_ARROW && collision.point !== null) {\n\n                result.main = collision.point.clone();\n                return result;\n            }\n        }\n\n        // If there is no arrows, we average bounding boxes and get a 3d point inside it.\n        var bbX0 = Number.POSITIVE_INFINITY;\n        var bbY0 = Number.POSITIVE_INFINITY;\n        var bbX1 = Number.NEGATIVE_INFINITY;\n        var bbY1 = Number.NEGATIVE_INFINITY;\n\n        for(var i = 0; i < markupsCount; ++i) {\n\n            var boundingBox = markups[i].generateBoundingBox();\n\n            bbX0 = Math.min(bbX0, boundingBox.min.x);\n            bbY0 = Math.min(bbY0, boundingBox.min.y);\n            bbX1 = Math.max(bbX1, boundingBox.max.x);\n            bbY1 = Math.max(bbY1, boundingBox.max.y);\n        }\n\n        var polygon = {};\n\n        polygon.vertexCount = 4;\n        polygon.xVertices = new Float32Array([bbX0, bbX1, bbX1, bbX0]);\n        polygon.yVertices = new Float32Array([bbY0, bbY0, bbY1, bbY1]);\n\n        var point2d = this.checkPolygon(polygon, idTarget);\n        var point3d = point2d && this.viewer.clientToWorld(point2d.x, point2d.y);\n        result.main = point3d && point3d.point;\n\n        return result;\n    };\n\n    /**\n     * Renders the markups onto a 2D canvas context to generate an image.\n     * @param {CanvasRenderingContext2D} context - Markups are drawn using the context provided\n     */\n    MarkupsCore.prototype.renderToCanvas = function(context, callback, renderAllMarkups) {\n\n        var width = this.bounds.width;\n        var height = this.bounds.height;\n        var viewBox = this.getSvgViewBox(width, height);\n        var numberOfScreenshotsTaken = 0;\n        var markups = [];\n        var layer;\n\n        var onMarkupScreenshotTaken = function () {\n            if (callback && (++numberOfScreenshotsTaken === markups.length)) {\n                callback();\n            }\n        }.bind(this);\n\n        if (renderAllMarkups) {\n            var svgKeys = Object.keys(this.svg.childNodes);\n            var layersKeys = Object.keys(this.svgLayersMap);\n\n            // Append only markups that their parent layer is contained inside the svg main container.\n            for (var i = 0; i < svgKeys.length; i++) {                \n                for (var j = 0; j < layersKeys.length; j++) {\n                    layer = this.svgLayersMap[layersKeys[j]];\n                    if (this.svg.childNodes[svgKeys[i]] === layer.svg) {\n                        markups = markups.concat(layer.markups);\n                    }\n                }\n            }\n        } else {\n            layer = this.svgLayersMap[this.activeLayer] || this.editModeSvgLayerNode;\n            markups = layer.markups;\n        }\n\n        if (markups.length === 0) {\n            callback();\n        } else {\n            markups.forEach(function(markup) {\n                markup.renderToCanvas(context, viewBox, width, height, onMarkupScreenshotTaken);\n            });\n        }\n    };\n\n    /**\n     * Changes the active drawing tool. For example, from the Arrow drawing tool to the Rectangle drawing tool.\n     * Only applicable while in {@link Autodesk.Viewing.Extensions.Markups.Core.MarkupsCore/#enterEditMode|Edit mode}.\n     *\n     * Supported values are:\n     * - `new Autodesk.Viewing.Extensions.Markups.Core.EditModeArrow(MarkupsCoreInstance)`\n     * - `new Autodesk.Viewing.Extensions.Markups.Core.EditModeRectangle(MarkupsCoreInstance)`\n     * - `new Autodesk.Viewing.Extensions.Markups.Core.EditModeCircle(MarkupsCoreInstance)`\n     * - `new Autodesk.Viewing.Extensions.Markups.Core.EditModeCloud(MarkupsCoreInstance)`\n     * - `new Autodesk.Viewing.Extensions.Markups.Core.EditModeText(MarkupsCoreInstance)`\n     * - `new Autodesk.Viewing.Extensions.Markups.Core.EditModeFreehand(MarkupsCoreInstance)`\n     * - `new Autodesk.Viewing.Extensions.Markups.Core.EditModePolyline(MarkupsCoreInstance)`\n     * - `new Autodesk.Viewing.Extensions.Markups.Core.EditModePolycloud(MarkupsCoreInstance)`\n     *\n     * This function fires event `Autodesk.Viewing.Extensions.Markups.Core.EVENT_EDITMODE_CHANGED`.\n     * @param {Object} editMode - Object instance for the drawing tool\n     */\n    MarkupsCore.prototype.changeEditMode = function(editMode) {\n\n        var oldEditMode = this.editMode;\n        oldEditMode && oldEditMode.destroy();\n\n        editMode.addEventListener(MarkupEvents.EVENT_EDITMODE_CREATION_BEGIN, function() {this.disableMarkupInteractions(true);}.bind(this));\n        editMode.addEventListener(MarkupEvents.EVENT_EDITMODE_CREATION_END, function(){this.disableMarkupInteractions(false);}.bind(this));\n        editMode.addEventListener(MarkupEvents.EVENT_MARKUP_DESELECT, function(event){this.dispatchEvent(event);}.bind(this));\n\n        this.editMode = editMode;\n        this.styles[editMode.type] = cloneStyle(editMode.getStyle());\n\n        this.dispatchEvent({type:MarkupEvents.EVENT_EDITMODE_CHANGED, target: editMode});\n    };\n\n    /**\n     * Check whether a user can perform camera navigation operations on the current loaded model.\n     * While the extension is active, the user can still draw markups.\n     * Panning and zooming are only supported for orthographic cameras.\n     *\n     * @return {boolean} Whether {@link Autodesk.Viewing.Extensions.Markups.Core.MarkupsCore/#allowNavigation|allowNavigation()} can succeed.\n     */\n    MarkupsCore.prototype.isNavigationAllowed = function() {\n\n        return !this.viewer.impl.camera.isPerspective;\n    };\n\n    /**\n     * Enables click, tap, and swipe behavior to allow camera zoom and panning operations. It is only available in\n     * {@link Autodesk.Viewing.Extensions.Markups.Core.MarkupsCore/#enterEditMode|Edit mode}.\n     *\n     * @param {boolean} allow - Whether camera navigation interactions are active or not.\n     */\n    MarkupsCore.prototype.allowNavigation = function(allow) {\n\n        //we will still need to update the markup styles even if in perspective mode\n        var editMode = this.editMode;\n        this.navigating = allow;\n\n        if (allow){\n            this.svg.setAttribute(\"pointer-events\", \"none\");\n            editMode && this.selectMarkup(null);\n        } else {\n            this.svg.setAttribute(\"pointer-events\", \"painted\");\n        }\n\n        // Update pointer events for all markups.\n        var markups = this.markups;\n        var markupsCount = markups.length;\n\n        for(var i = 0; i < markupsCount; ++i) {\n            markups[i].updateStyle();\n        }\n        editMode && editMode.notifyAllowNavigation(allow);\n\n        // Navigation is not allowed while in perspective mode.\n        if (allow && (this.duringEditMode || this.duringViewMode) && !this.isNavigationAllowed()) {\n            return false;\n        }\n\n        // Clear snapper.\n        if (allow && this.snapper) {\n            this.snapper.indicator.clearOverlays();\n            this.snapper.clearSnapped();\n        }\n\n        this.markupTool.allowNavigation(allow);\n\n    };\n\n    /**\n     * Sets mouse interactions and mobile device gestures with markups. Only applicable in\n     * {@link Autodesk.Viewing.Extensions.Markups.Core.MarkupsCore/#enterEditMode|Edit mode}.\n     * @param {boolean} disable - true to disable interactions with markups; false to enable interactions with markups; default false.\n     */\n    MarkupsCore.prototype.disableMarkupInteractions = function(disable) {\n\n        if (this.editModeSvgLayerNode) {\n            this.editModeSvgLayerNode.svg.setAttribute('cursor', disable ? 'inherit' : 'default');\n        }\n        this.markups.forEach(function(markup) {markup.disableInteractions(disable);});\n    };\n\n    /**\n     *\n     * @param isActive\n     * @private\n     */\n    MarkupsCore.prototype.activateTool = function(isActive) {\n        if (isActive) {\n            if (!this.cachedNavigationTool) {\n                this.cachedNavigationTool = this.viewer.getActiveNavigationTool();\n                this.viewer.addEventListener(Autodesk.Viewing.TOOL_CHANGE_EVENT, this.onToolChangeBinded);\n            }\n            this.viewer.setActiveNavigationTool(this.markupTool.getName());\n        } else {\n\n            if (this.cachedNavigationTool) {\n                this.viewer.setActiveNavigationTool(this.cachedNavigationTool);\n                this.cachedNavigationTool = null;\n            } else {\n                var defaultToolName = this.viewer.getDefaultNavigationToolName();\n                this.viewer.setActiveNavigationTool(defaultToolName);\n            }\n\n            this.viewer.removeEventListener(Autodesk.Viewing.TOOL_CHANGE_EVENT, this.onToolChangeBinded);\n        }\n    };\n\n    /**\n     *\n     * @param event\n     * @private\n     */\n    MarkupsCore.prototype.onToolChange = function(event) {\n\n        if (event.toolName !== this.markupTool.getName())\n            return;\n\n        if (event.active) {\n            var navAllowed = this.isNavigationAllowed();\n            this.viewer.setNavigationLockSettings({\n                pan      : navAllowed,\n                zoom     : navAllowed,\n                orbit    : false,\n                roll     : false,\n                fov      : false,\n                walk     : false,\n                gotoview : false\n            });\n        }\n        this.viewer.setNavigationLock(event.active);\n    };\n\n    MarkupsCore.prototype.onUnitsCalibrationStarts = function(event) {\n        if (this.duringEditMode) {\n            this.hide();\n        }\n    };\n\n    //// Input /////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n    proto.changeInputHandler = function(inputHandler) {\n\n        this.input.detachFrom(this);\n        inputHandler.attachTo(this);\n        this.input = inputHandler;\n\n        if (this.duringEditMode) {\n            inputHandler.enterEditMode();\n        }\n\n        if (this.duringViewMode) {\n            inputHandler.enterViewMode();\n        }\n    };\n\n    //// Copy and Paste System /////////////////////////////////////////////////////////////////////////////////////////\n\n    /**\n     * Standard copy operation. Applies to any selected markup.<br>\n     * See also\n     * {@link Autodesk.Viewing.Extensions.Markups.Core.MarkupsCore/#cut|cut()} and\n     * {@link Autodesk.Viewing.Extensions.Markups.Core.MarkupsCore/#paste|paste()}.\n     */\n    MarkupsCore.prototype.copy = function() {\n\n        this.clipboard.copy();\n    };\n\n    /**\n     * Standard cut operation. Applies to any selected markup, which gets removed from the screen at call time.<br>\n     * See also\n     * {@link Autodesk.Viewing.Extensions.Markups.Core.MarkupsCore/#copy|copy()} and\n     * {@link Autodesk.Viewing.Extensions.Markups.Core.MarkupsCore/#paste|paste()}.\n     */\n    MarkupsCore.prototype.cut = function() {\n\n        this.clipboard.cut();\n    };\n\n    /**\n     * Standard paste operation. This function will paste any previously copied or cut markup.\n     * Can be called repeatedly after a single copy or cut operation.<br>\n     * See also\n     * {@link Autodesk.Viewing.Extensions.Markups.Core.MarkupsCore/#copy|copy()} and\n     * {@link Autodesk.Viewing.Extensions.Markups.Core.MarkupsCore/#cut|cut()}.\n     */\n    MarkupsCore.prototype.paste = function() {\n\n        this.clipboard.paste();\n    };\n\n    //// Undo and Redo System //////////////////////////////////////////////////////////////////////////////////////////\n    /**\n     * Will undo the previous operation.<br>\n     * The Undo/Redo stacks will track any change done to the existing markups.<br>\n     * See also\n     * {@link Autodesk.Viewing.Extensions.Markups.Core.MarkupsCore/#redo|redo()} and\n     * {@link Autodesk.Viewing.Extensions.Markups.Core.MarkupsCore/#isUndoStackEmpty|isUndoStackEmpty()}.\n     */\n    MarkupsCore.prototype.undo = function() {\n\n        this.actionManager.undo();\n    };\n\n    /**\n     * Will redo any previously undo operation.<br>\n     * See also\n     * {@link Autodesk.Viewing.Extensions.Markups.Core.MarkupsCore/#undo|undo()},\n     * {@link Autodesk.Viewing.Extensions.Markups.Core.MarkupsCore/#isRedoStackEmpty|isRedoStackEmpty()}.\n     */\n    MarkupsCore.prototype.redo = function() {\n\n        this.actionManager.redo();\n    };\n\n    /**\n     * Returns true when {@link Autodesk.Viewing.Extensions.Markups.Core.MarkupsCore/#undo|undo()}\n     * produces no changes.\n     * @return {boolean} true if there are no changes to undo; false if there are changes to undo.\n     */\n    MarkupsCore.prototype.isUndoStackEmpty = function() {\n\n        return this.actionManager.isUndoStackEmpty();\n    };\n\n    /**\n     * Returns true when {@link Autodesk.Viewing.Extensions.Markups.Core.MarkupsCore/#redo|redo()}\n     * produces no changes.\n     * @return {boolean} true if there are no changes to redo; false if there are changes to redo.\n     */\n    MarkupsCore.prototype.isRedoStackEmpty = function() {\n\n        return this.actionManager.isRedoStackEmpty();\n    };\n\n    proto.beginActionGroup = function() {\n\n        this.actionManager.beginActionGroup();\n    };\n\n    proto.closeActionGroup = function() {\n\n        this.actionManager.closeActionGroup();\n    };\n\n    proto.cancelActionGroup = function() {\n\n        this.actionManager.cancelActionGroup();\n    };\n\n    /**\n     * Helper function for generating unique markup ids.\n     * @returns {number}\n     */\n    proto.getId = function() {\n\n        return ++this.nextId;\n    };\n\n    /**\n     * @param event\n     * @private\n     */\n    proto.onEditActionHistoryChanged = function(event) {\n\n        var data = event.data;\n        if((data.action !== 'undo' && data.targetId !== -1)) {\n\n            // Markup can be null when deleting, that's ok, we unselect in that case.\n            var markup = this.getMarkup(data.targetId);\n            this.selectMarkup(markup);\n        }\n        if(data.action === 'undo' && !this.isUndoStackEmpty()) {\n\n          var markup = this.getMarkup(this.actionManager.getLastElementInUndoStack().getTargetId());\n          this.selectMarkup(markup);\n        }\n\n        this.dispatchEvent(event);\n    };\n\n    /**\n     * Returns a markup with the specified ID. Returns null when not found.\n     * The ID can be retrieved from the return value of getSelection(). <br>\n     * See also\n     * {@link Autodesk.Viewing.Extensions.Markups.Core.MarkupsCore/#getSelection|getSelection()}.\n     * @param {string} id Markup identifier.\n     * @returns {Autodesk.Viewing.Extensions.Markups.Core.Markup} Returns markup object.\n     */\n    MarkupsCore.prototype.getMarkup = function(id) {\n\n        var markups = this.markups;\n        var markupsCount = markups.length;\n\n        for(var i = 0; i < markupsCount; ++i) {\n            if (markups[i].id == id) {\n                return markups[i];\n            }\n        }\n\n        return null;\n    };\n\n\n    /**\n     * Selects or deselects a markup. A selected markup gets an overlayed UI that allows you to perform transformations\n     * such as resizing, rotations, and translations. To deselect a markup, send a null value. <br>\n     * See also\n     * {@link Autodesk.Viewing.Extensions.Markups.Core.MarkupsCore/#getMarkup|getMarkup()}.\n     * @param {Autodesk.Viewing.Extensions.Markups.Core.Markup|null} markup The markup instance to select. Set the value to null to deselect a markup.\n     */\n    MarkupsCore.prototype.selectMarkup = function(markup) {\n\n        if (markup) {\n\n            if (this.editMode.type === markup.type) {\n                this.editMode.setSelection(markup);\n            } else {\n\n                var editMode = markup.getEditMode();\n                editMode.setSelection(null);\n\n                this.changeEditMode(editMode);\n                this.setStyle(markup.getStyle());\n                this.editMode.setSelection(markup);\n            }\n        } else {\n            // fix for text markup in view mode\n            if (this.editMode){\n                this.editMode.setSelection(null);\n            }\n        }\n    };\n\n    /**\n     * Returns the currently selected markup. A selected markup has a custom UI overlayed that allows you to perform\n     * resizing, rotations and translations.<br>\n     * See also\n     * {@link Autodesk.Viewing.Extensions.Markups.Core.MarkupsCore/#selectMarkup|selectMarkup()}.\n     * @returns {Autodesk.Viewing.Extensions.Markups.Core.Markup|null} Returns selected markup object; null if no markup is selected.\n     */\n    MarkupsCore.prototype.getSelection = function() {\n\n        return this.editMode.getSelection();\n    };\n\n    /**\n     * Deletes a markup from the canvas. Only applies while in\n     * {@link Autodesk.Viewing.Extensions.Markups.Core.MarkupsCore/#enterEditMode|Edit mode}.\n     * @param {Autodesk.Viewing.Extensions.Markups.Core.Markup} markup - Markup object.\n     * @param {boolean} [dontAddToHistory] Whether delete action can be {@link Autodesk.Viewing.Extensions.Markups.Core.MarkupsCore/#undo|undone}.\n     */\n    MarkupsCore.prototype.deleteMarkup = function(markup, dontAddToHistory) {\n\n        if (!this.editMode || (this.editMode && this.editMode.selectedMarkup.id !== markup.id)) {\n            this.editMode = markup.getEditMode();\n        }\n        this.editMode.deleteMarkup(markup, dontAddToHistory);\n    };\n\n    proto.addMarkup = function(markup) {\n\n        var markups;\n        var layer = this.activeLayer;\n        var layerObject = this.svgLayersMap[layer] || '';\n\n        if (layerObject) {\n            var svgParent = layerObject.svg;\n            // append markup svg to layer svg\n            markup.setParent(svgParent);\n            // Add markup to layer markups if it does not exist\n            layerObject.markups.push(markup);\n            markups = layerObject.markups.slice();\n        } else {\n            // if layer is undefined create a edit mode svg layer\n            markup.setParent(this.editModeSvgLayerNode.svg);\n            this.editModeSvgLayerNode.markups.push(markup);\n            markups = this.editModeSvgLayerNode.markups.slice();\n        }\n        \n        markup.addEventListener(MarkupEvents.EVENT_MARKUP_SELECTED, this.onMarkupSelectedBinded);\n        markup.addEventListener(MarkupEvents.EVENT_MARKUP_ENTER_EDITION, this.onMarkupEnterEditionBinded);\n        markup.addEventListener(MarkupEvents.EVENT_MARKUP_CANCEL_EDITION, this.onMarkupCancelEditionBinded);\n        markup.addEventListener(MarkupEvents.EVENT_MARKUP_DELETE_EDITION, this.onMarkupDeleteEditionBinded);\n        // Only set the global markups array when in edit mode\n        if (this.duringEditMode) {\n            this.markups = markups;\n        }\n    };\n\n    /**\n     *\n     * @param markup\n     * @private\n     */\n    proto.removeMarkup = function(markup) {\n\n        if (!markup){\n            return false;\n        }\n        var self = this;\n\n        /**\n         * Get the layer markups in which the markup exists.\n         * This function will remove the markup if it exists in the corresponding layer markups array.\n         * @param markup\n         * @returns {number} returns -1 if the markup does not exist in a layer markups array\n         */\n        function removeMarkupIfExists(markup){\n            var markupIndex;\n            var layerMarkups = -1;\n            // check if the markup exists in the edit layer\n            if (self.editModeSvgLayerNode){\n                var editLayerMarkups = self.editModeSvgLayerNode.markups;\n                markupIndex = editLayerMarkups.indexOf(markup);\n                if (markupIndex !== -1) {\n                    // remove the markup from the corresponding markup array\n                    editLayerMarkups.splice(markupIndex, 1);\n                    layerMarkups = editLayerMarkups.slice();\n                    // update the global markups array if the markup is in the active layer\n                    if (self.activeLayer === ''){\n                        self.markups = layerMarkups;\n                    }\n                    return layerMarkups;\n                }\n            }\n            // check if the markup exists in a layer\n            if (self.svgLayersMap) {\n                for (var layer in self.svgLayersMap) {\n                    var markups = self.svgLayersMap[layer].markups;\n                    markupIndex = markups.indexOf(markup);\n                    if (markupIndex !== -1) {\n                        // remove the markup from the corresponding markup array\n                        markups.splice(markupIndex, 1);\n                        layerMarkups = markups.slice();\n                        // update the global markups array if the markup is in the active layer\n                        if (self.activeLayer === layer){\n                            self.markups = layerMarkups;\n                        }\n                        return layerMarkups;\n                    }\n                }\n            }\n            return layerMarkups;\n        }\n\n        var layerMarkups = removeMarkupIfExists(markup);\n        if (layerMarkups === -1)\n            return false;\n\n        markup.setParent(null);\n\n        markup.removeEventListener(MarkupEvents.EVENT_MARKUP_SELECTED, this.onMarkupSelectedBinded);\n        markup.removeEventListener(MarkupEvents.EVENT_MARKUP_ENTER_EDITION, this.onMarkupEnterEditionBinded);\n        markup.removeEventListener(MarkupEvents.EVENT_MARKUP_CANCEL_EDITION, this.onMarkupCancelEditionBinded);\n        markup.removeEventListener(MarkupEvents.EVENT_MARKUP_DELETE_EDITION, this.onMarkupDeleteEditionBinded);\n\n        var editMode = this.editMode;\n        if (editMode) {\n            var selectedMarkup = editMode.getSelection();\n            if (selectedMarkup === markup) {\n                this.selectMarkup(null);\n            }\n        }\n    };\n\n    //// Markups style /////////////////////////////////////////////////////////////////////////////////////////////////\n\n    MarkupsCore.prototype.setStyle = function(style) {\n\n        var styles = this.styles;\n        var editMode = this.editMode;\n\n        copyStyle(style, styles[editMode.type]);\n        // copyStyle(styles[editMode.type], style);\n        editMode.setStyle(styles[editMode.type]);\n    };\n\n    MarkupsCore.prototype.getStyle = function() {\n\n        return cloneStyle(this.styles[this.editMode.type]);\n    };\n\n    MarkupsCore.prototype.getDefaultStyle = function() {\n\n        var defaultStyleAttributes = [\n            'stroke-width',\n            'font-size',\n            'font-family',\n            'font-style',\n            'font-weight',\n            'stroke-color',\n            'stroke-opacity',\n            'fill-color',\n            'fill-opacity'];\n        this.defaultStyle = this.defaultStyle || createStyle(defaultStyleAttributes, this);\n\n        return this.defaultStyle;\n    };\n\n    //// Markups depth order ///////////////////////////////////////////////////////////////////////////////////////////\n\n    /**\n     *\n     * @param markup\n     */\n    proto.bringToFront = function(markup) {\n\n        this.sendMarkupTo(markup, this.markups.length-1);\n    };\n\n    /**\n     *\n     * @param markup\n     */\n    proto.sendToBack = function(markup) {\n\n        this.sendMarkupTo(markup, 0);\n    };\n\n    /**\n     *\n     * @param markup\n     */\n    proto.bringForward = function(markup) {\n\n        var markupIndex = this.markups.indexOf(markup);\n        this.sendMarkupTo(markup, markupIndex+1);\n    };\n\n    /**\n     *\n     * @param markup\n     */\n    proto.bringBackward = function(markup) {\n\n        var markupIndex = this.markups.indexOf(markup);\n        this.sendMarkupTo(markup, markupIndex-1);\n    };\n\n    /**\n     *\n     * @param markup\n     * @param index\n     * @private\n     */\n    proto.sendMarkupTo = function(markup, index) {\n\n        var markups = this.markups;\n        var markupIndex = markups.indexOf(markup);\n\n        if (markupIndex === -1 || index < 0 || index >= markups.length) {\n            return;\n        }\n\n        markups.splice(markupIndex, 1);\n        index = markupIndex > index ? index -1 : index;\n        markups.splice(index, 0, markup);\n\n        // TODO: Add markup in right position not always at the end.\n        markup.setParent(null);\n        if (this.activeLayer){\n            var parent = this.svgLayersMap[this.activeLayer].svg;\n            markup.setParent(parent);\n        }else {\n            markup.setParent(this.editModeSvgLayerNode.svg);\n        }\n    };\n\n\n    /**\n     * Loads data (SVG string) for all markups in a specified layer (layerId) to the Viewer's canvas.<br>\n     *\n     * See also\n     * {@link Autodesk.Viewing.Extensions.Markups.Core.MarkupsCore/#unloadMarkups|unloadMarkups()}, and\n     * {@link Autodesk.Viewing.Extensions.Markups.Core.MarkupsCore/#hideMarkups|hideMarkups()}.\n     *\n     * @param {string} markupString - SVG string with markups. See also {@link Autodesk.Viewing.Extensions.Markups.Core.MarkupsCore/#generateData|generateData()}.\n     * @param {string} layerId - Identifier for the layer where the markup should be loaded to. Example \"Layer1\".\n     * @return {boolean} Whether the markup string was able to be loaded successfully\n     */\n    MarkupsCore.prototype.loadMarkups = function (markupString, layerId) {\n\n        function getDataModelVersion(node) {\n            var metadata = node.childNodes[0] ? node.childNodes[0].childNodes[0] : null;\n            var versionAttr = metadata && (typeof metadata.getAttribute === 'function') && metadata.getAttribute('data-model-version');\n\n            return (typeof versionAttr === 'string') ? parseFloat(versionAttr) : null;\n        }\n\n        if (this.duringEditMode) {\n            console.warn(\"Markups will not be loaded during the edit mode\");\n            return false;\n        }\n\n        if (!this.duringViewMode) {\n            return false;\n        }\n\n        if (!layerId) {\n            console.warn(\"loadMarkups failed; missing 2nd argument 'layerId'\");\n            return false;\n        }\n\n        // Can it be parsed into SVG?\n        var parent = stringToSvgNode(markupString);\n        if (!parent) {\n            return false;\n        }\n\n        // var version = getDataModelVersion(parent);\n\n        // If the supplied layerId exists in the svg layers map and there are children in the svg then return false.\n        if (layerId in this.svgLayersMap && this.svg.childNodes.length > 0) {\n            console.warn(\"This layer is already loaded, will not load again.\");\n            return false;\n        }\n        this.activeLayer = layerId;\n        var svgLayerNode = this.svgLayersMap[layerId];\n\n        // if the layer exists, delete it\n        if (svgLayerNode)\n            delete this.svgLayersMap[layerId];\n\n        // create an empty parent svg layer node for layerId\n        // Child markups will get added to th parent svg layer node in the addMarkup function\n        var newSvg = this.createLayerNode();\n\n        svgLayerNode = {\n            markups: [],\n            svgString: markupString,\n            svg: newSvg\n        };\n        this.svgLayersMap[layerId] = svgLayerNode;\n\n        var children = parent.childNodes;\n        for (var i = 0; i < children.length; i++) {\n            var child = children[i];\n            var markup = createMarkupFromSVG(child, this);\n            // Disable markups if already in edit mode and the active layer is different\n            if (markup && this.duringEditMode && this.editingLayer !== this.activeLayer) {\n                markup.disableInteractions(true);\n            }\n\n            if (!markup && child.localName !== \"metadata\") {\n                // Append child removes it from parent and copies it over to the new svg layer node,\n                // so we need to reduce index by 1 to continue proper iteration\n                svgLayerNode.svg.appendChild(child);\n                i--;\n                if (typeof child.setAttribute === 'function') {\n                    child.setAttribute(\"pointer-events\", \"none\");\n                }\n            }\n        }\n\n        var svgParentNode = this.svgLayersMap[this.activeLayer].svg;\n\n        this.svg.appendChild(svgParentNode);\n        // If already in an edit mode layer then reassign active layer to edit layer\n        if(this.duringEditMode && this.editingLayer !== this.activeLayer) {\n            this.activeLayer = this.editingLayer;\n            if (this.editingLayer)\n                this.markups = this.svgLayersMap[this.activeLayer].markups.slice();\n        }\n        return true;\n    };\n\n    /**\n     * TODO: Probably this function needs to be moved to MarkupCoreUtils.js\n     * Creates a new layer node\n     * */\n\n    proto.createLayerNode = function() {\n\n        var newSvgLayerNode = this.createSvgElement('g');\n        newSvgLayerNode.setAttribute('cursor', 'default');\n        return newSvgLayerNode;\n    };\n\n    /**\n     * Revert any changes made to the specific layer.\n     *\n     * See also\n     * {@link Autodesk.Viewing.Extensions.Markups.Core.MarkupsCore/#loadMarkups|loadMarkups()} and\n     * {@link Autodesk.Viewing.Extensions.Markups.Core.MarkupsCore/#enterEditMode|enterEditMode()}.\n     *\n     * @param {string} layerId - ID of the layer to revert any changes that were made to it.\n     * @returns {boolean} true if the layer was unloaded, false if the layer was not unloaded.\n     */\n    MarkupsCore.prototype.revertLayer = function(layerId){\n        if (!layerId) {\n            console.warn(\"revertLayer failed because no layerId was supplied.\");\n            return false;\n        }\n        var svgLayerNode = this.svgLayersMap[layerId];\n        if (!svgLayerNode){\n            console.warn(\"The supplied layer does not exist.\");\n            return false;\n        }\n        var inEditMode = this.duringEditMode;\n        // Leave editMode to revert a layer\n        if (inEditMode)\n            this.leaveEditMode();\n\n        // keep track of previous global markups.\n        var currentMarkups = this.markups.slice();\n        // Set the global markups to the markups in the current layer. These ones get removed in the unloadMarkups\n        this.markups = svgLayerNode.markups;\n        var layerSvg = svgLayerNode.svgString;\n        this.unloadMarkups(layerId);\n        this.loadMarkups(layerSvg, layerId);\n        // Assign markups\n        if (this.editingLayer){\n            if(this.editingLayer !== layerId) {\n                this.markups = currentMarkups;\n                var layerObject = this.svgLayersMap[this.editingLayer];\n                if (layerObject) {\n                    layerObject.markups = currentMarkups;\n                }\n            }\n        }else{\n            if(this.editModeSvgLayerNode){\n                this.editModeSvgLayerNode.markups = currentMarkups;\n            }\n        }\n\n        if(this.editingLayer || this.editingLayer.length === 0){\n            var svg = this.editingLayer.length === 0 ? this.editModeSvgLayerNode.svg : this.svgLayersMap[this.editingLayer].svg;\n            if (svg.parentNode == this.svg) {\n                this.svg.removeChild(svg);\n                this.svg.appendChild(svg);\n            }\n        }\n        return true;\n    };\n\n    /**\n     * Removes markups from the DOM (Document Object Model). This is helpful for freeing up memory.<br>\n     *\n     * See also\n     * {@link Autodesk.Viewing.Extensions.Markups.Core.MarkupsCore/#loadMarkups|loadMarkups()},\n     * {@link Autodesk.Viewing.Extensions.Markups.Core.MarkupsCore/#unloadMarkupsAllLayers|unloadMarkupsAllLayers()},\n     * {@link Autodesk.Viewing.Extensions.Markups.Core.MarkupsCore/#clear|clear()},\n     * {@link Autodesk.Viewing.Extensions.Markups.Core.MarkupsCore/#hide|hide()}, and\n     * {@link Autodesk.Viewing.Extensions.Markups.Core.MarkupsCore/#hideMarkups|hideMarkups()}.\n     *\n     * @param {string} layerId - ID of the layer containing all markups to unload (from the DOM).\n     * @return {boolean} Whether the operation succeeded or not.\n     */\n    MarkupsCore.prototype.unloadMarkups = function(layerId) {\n\n        if (!layerId) {\n            console.warn(\"unloadMarkups failed; No layerId provided.\");\n            return false;\n        }\n\n        var svgLayerNode = this.svgLayersMap[layerId];\n        if (!svgLayerNode) {\n            // TODO: Do we need to log anything here?\n            console.warn('No such layer exists to unload.');\n            return false;\n        }\n\n        var layerMarkups = svgLayerNode.markups.slice();\n        var numMarkups = layerMarkups.length;\n        for (var i = 0; i < numMarkups; i++) {\n            var markup = layerMarkups[i];\n            this.removeMarkup(markup);\n            markup.destroy();\n        }\n\n        // Remove the markups in the layer from the svg canvas\n        if (svgLayerNode.svg.parentNode === this.svg)\n            this.svg.removeChild(svgLayerNode.svg);\n\n        // Delete the layer from the layer map.\n        delete this.svgLayersMap[layerId];\n        // Reset the active layer if the supplied layer id is the same as the active layer\n        if (this.activeLayer.toString() === layerId.toString()) {\n            this.activeLayer = '';\n        }\n        // Leave edit mode and reset the editing layer if the supplied layer is the same as the current editing layer\n        if (this.editingLayer && this.editingLayer.toString() === layerId.toString()){\n            this.editingLayer = '';\n            this.duringEditMode && this.leaveEditMode();\n        }\n\n        return true;\n    };\n\n    /**\n     * Removes all markups loaded so far. Great for freeing up memory.\n     *\n     * See also\n     * {@link Autodesk.Viewing.Extensions.Markups.Core.MarkupsCore/#loadMarkups|loadMarkups()},\n     * {@link Autodesk.Viewing.Extensions.Markups.Core.MarkupsCore/#unloadMarkups|unloadMarkups()},\n     * {@link Autodesk.Viewing.Extensions.Markups.Core.MarkupsCore/#clear|clear()},\n     * {@link Autodesk.Viewing.Extensions.Markups.Core.MarkupsCore/#hide|hide()}, and\n     * {@link Autodesk.Viewing.Extensions.Markups.Core.MarkupsCore/#hideMarkups|hideMarkups()}.\n     */\n    MarkupsCore.prototype.unloadMarkupsAllLayers = function() {\n        this.activeLayer = '';\n        var self = this;\n\n        //this is specific to the editModeSvgLayerNode, enterEditMode().\n        var unloadSvgLayerNode = function(){\n            if (self.editModeSvgLayerNode){\n                var layerMarkups = self.editModeSvgLayerNode.markups.slice();\n                var numMarkups = layerMarkups.length;\n                for (var i = 0; i < numMarkups; i++) {\n                    var markup = layerMarkups[i];\n                    self.removeMarkup(markup);\n                    markup.destroy();\n                }\n            }\n        };\n\n        // Unload the markups in the editModeSvgLayerNode\n        unloadSvgLayerNode();\n        var layerId;\n        for (layerId in this.svgLayersMap){\n            this.unloadMarkups(layerId);\n        }\n    };\n\n    /**\n     * Hides all markups in a specified layer. Note that hidden markups will not be unloaded.\n     * Use the {@link Autodesk.Viewing.Extensions.Markups.Core.MarkupsCore/#showMarkups|showMarkups()} method to make\n     * them visible again; no additional parsing is required.\n     *\n     * See also\n     * {@link Autodesk.Viewing.Extensions.Markups.Core.MarkupsCore/#showMarkups|showMarkups()},\n     * {@link Autodesk.Viewing.Extensions.Markups.Core.MarkupsCore/#unloadMarkups|unloadMarkups()}, and\n     * {@link Autodesk.Viewing.Extensions.Markups.Core.MarkupsCore/#loadMarkups|loadMarkups()}.\n     *\n     * @param {string} layerId - ID of the layer containing all markups that should be hidden (in the DOM).\n     * @return {boolean} Whether the operation succeeded or not.\n     */\n    MarkupsCore.prototype.hideMarkups = function(layerId) {\n\n        if (!layerId) {\n            console.warn(\"hideMarkups failed; No layerId provided.\");\n            return false;\n        }\n\n        var svgLayerNode = this.svgLayersMap[layerId];\n        if (!svgLayerNode) {\n            // TODO: Do we need to log anything here?\n            return false;\n        }\n        var layerSvg = svgLayerNode.svg;\n\n        // Return false if the layer svg is not present in the main svg\n        if (layerSvg.parentNode != this.svg) {\n            console.warn(\"Layer is already hidden.\");\n            return false;\n        }\n        // remove the layer svg from the main svg\n        this.svg.removeChild(layerSvg);\n        return true;\n    };\n\n    /**\n     * Unhides a layer of hidden markups\n     * ({@link Autodesk.Viewing.Extensions.Markups.Core.MarkupsCore/#hideMarkups|hideMarkups()}).\n     *\n     * @param {string} layerId - ID of the layer containing all markups to unload (from the DOM).\n     * @return {boolean} Whether the operation succeeded or not.\n     */\n    MarkupsCore.prototype.showMarkups = function(layerId) {\n\n        if (!layerId) {\n            console.warn(\"showMarkups failed; No layerId provided.\");\n            return false;\n        }\n\n        var svgLayerNode = this.svgLayersMap[layerId];\n        if (!svgLayerNode) {\n            // TODO: Do we need to log anything here?\n            return false;\n        }\n        // Append the layer svg to the main svg\n        var layerSvg = svgLayerNode.svg;\n        this.svg.appendChild(layerSvg);\n    };\n\n    //// Client Space <-> Markup Space /////////////////////////////////////////////////////////////////////////////////\n\n    proto.positionFromClientToMarkups = function(x, y) {\n\n        return this.clientToMarkups(x, y);\n    };\n\n    proto.positionFromMarkupsToClient = function(x, y) {\n\n        return this.markupsToClient(x, y);\n    };\n\n    proto.vectorFromClientToMarkups = function(x, y) {\n\n        var a = this.clientToMarkups(0, 0);\n        var b = this.clientToMarkups(x, y);\n\n        return {x: b.x - a.x, y: b.y - a.y};\n    };\n\n    proto.vectorFromMarkupsToClient = function(x, y) {\n\n        var a = this.markupsToClient(0, 0);\n        var b = this.markupsToClient(x, y);\n\n        return {x: b.x - a.x, y: b.y - a.y};\n    };\n\n    proto.sizeFromClientToMarkups = function(w, h) {\n\n        var a = this.clientToMarkups(0, 0);\n        var b = this.clientToMarkups(w, h);\n\n        return {x: Math.abs(b.x - a.x), y: Math.abs(b.y - a.y)};\n    };\n\n    proto.sizeFromMarkupsToClient = function(w, h) {\n\n        var a = this.markupsToClient(0, 0);\n        var b = this.markupsToClient(w, h);\n\n        return {x: Math.abs(b.x - a.x), y: Math.abs(b.y - a.y)};\n    };\n\n    proto.markupsToClient = function(x, y) {\n\n        var camera = this.viewer.impl.camera;\n        var point = new THREE.Vector3(x, y, 0);\n\n        if (camera.isPerspective) {\n\n            var bb = this.viewer.impl.getCanvasBoundingClientRect();\n\n            point.x =( point.x / PERSPECTIVE_MODE_SCALE * (bb.height * 0.5) + bb.width  * 0.5);\n            point.y =(-point.y / PERSPECTIVE_MODE_SCALE * (bb.height * 0.5) + bb.height * 0.5);\n        } else {\n\n            point.applyMatrix4(camera.matrixWorld);\n            point.sub(camera.position);\n\n            // In LMV model is offset by a global offset, we correct this offset when transforming to markups space, so\n            // exported markups don't have the offset.\n            var globalOffset = this.viewer.model && this.viewer.model.getData().globalOffset;\n            if (globalOffset) {\n                point.sub(globalOffset);\n            }\n\n            point = worldToClient(point, this.viewer, false);\n            point.z = 0;\n        }\n\n        return point;\n    };\n\n    proto.clientToMarkups = function(x, y) {\n\n        var camera = this.viewer.impl.camera;\n        var point = new THREE.Vector3(x, y, 0);\n\n        if (camera.isPerspective) {\n\n            var bb = this.viewer.impl.getCanvasBoundingClientRect();\n\n            // Multiply by PERSPECTIVE_MODE_SCALE because Firfox on Windows machines have problems to deal with very small paths.\n            point.x = (point.x - bb.width  * 0.5) / (bb.height * 0.5) * PERSPECTIVE_MODE_SCALE;\n            point.y =-(point.y - bb.height * 0.5) / (bb.height * 0.5) * PERSPECTIVE_MODE_SCALE;\n        } else {\n\n            point = clientToWorld(point.x, point.y, 0, this.viewer);\n\n            // In LMV model is offset by a global offset, we correct this offset when transforming to markups space, so\n            // exported markups don't have the offset.\n            var globalOffset = this.viewer.model && this.viewer.model.getData().globalOffset;\n            if (globalOffset) {\n                point.add(globalOffset);\n            }\n\n            point.add(camera.position);\n            point.applyMatrix4(camera.matrixWorldInverse);\n            point.z = 0;\n        }\n\n        return point;\n    };\n\n    proto.getSvgViewBox = function(clientWidth, clientHeight) {\n\n        // Get pan offset.\n        var lt = this.clientToMarkups(0, 0);\n        var rb = this.clientToMarkups(clientWidth, clientHeight);\n\n        var l = Math.min(lt.x, rb.x);\n        var t = Math.min(lt.y, rb.y);\n        var r = Math.max(lt.x, rb.x);\n        var b = Math.max(lt.y, rb.y);\n\n        return [l , t, r-l, b-t].join(' ');\n    };\n\n    proto.getBounds = function () {\n\n        return this.bounds;\n    };\n\n    proto.getMousePosition = function() {\n\n        // When snapping, use the snap position instead of the mouse position\n        // as the start point of the markup drawing.\n        // For now only works for 2D.\n        if (this.editMode.useWithSnapping() && this.snapper && this.snapper.isSnapped()) {\n            return this.getSnapPosition();\n        }\n        return this.input.getMousePosition();\n    };\n\n    proto.getSnapPosition = function() {\n\n        var point = MeasureCommon.getSnapResultPosition(this.snapper.getSnapResult(), this.viewer);\n        var p = this.project(point);\n        return {x: p.x, y: p.y};\n    };\n\n    proto.project = function(position) {\n        var camera = this.viewer.navigation.getCamera();\n        var containerBounds = this.viewer.navigation.getScreenViewport();\n\n        var p = new THREE.Vector3().copy(position);\n        p.project(camera);\n\n        return new THREE.Vector3(Math.round((p.x + 1) / 2 * containerBounds.width),\n            Math.round((-p.y + 1) / 2 * containerBounds.height), p.z);\n    };\n\n    //// Handled Events ////////////////////////////////////////////////////////////////////////////////////////////////\n\n    proto.onCameraChange = function(event) {\n\n        // Update annotations' parent transform.\n        var viewBox = this.getSvgViewBox(this.bounds.width, this.bounds.height);\n\n        // HACK, for some reason the 2nd frame returns an empty canvas.\n        // The reason why this happens is that the code above calls into the viewer\n        // and a division by zero occurs due to LMV canvas having zero width and height\n        // When we detect this case, avoid setting the viewBox value and rely on one\n        // previously set.\n        if (viewBox === \"NaN NaN NaN NaN\") {\n            return;\n        }\n\n        if (this.svg) {\n            this.svg.setAttribute('viewBox', viewBox);\n        }\n\n\n        var editMode = this.editMode;\n\n        if (editMode) {\n            // Edit frame has to be updated, re-setting the selected markup does the job.\n            if (this.editFrame.isActive()) {\n                var selectedMarkup = editMode.getSelection();\n                this.editFrame.setMarkup(selectedMarkup);\n            }\n\n            if (editMode.updateTextBoxStyle) {\n                editMode.updateTextBoxStyle();\n            }\n\n            if (this.snapper && editMode.useWithSnapping()) {\n                this.snapper.indicator.render();\n            }\n        }\n    };\n\n    proto.onViewerResize = function(event) {\n\n        this.bounds.x = 0;\n        this.bounds.y = 0;\n        this.bounds.width = event.width;\n        this.bounds.height = event.height;\n\n        if (this.svg) {\n            this.svg.setAttribute('width', this.bounds.width);\n            this.svg.setAttribute('height', this.bounds.height);\n        }\n\n        this.onCameraChange();\n    };\n\n    proto.callSnapperMouseDown = function() {\n\n        // Disable snapper in freehand mode\n        if (this.editMode && this.editMode.useWithSnapping()){\n            var mousePosition = this.input.getMousePosition();\n            if (this.snapper) {\n                this.snapper.onMouseDown(mousePosition);\n                this.snapper.indicator.render();\n            }\n        }else{\n            // Clear the snapper when selecting a markup that does not allow snapping.\n            if (this.snapper){\n                this.snapper.clearSnapped();\n                this.snapper.indicator.clearOverlays();\n            }\n        }\n    };\n\n    proto.callSnapperMouseMove = function() {\n\n        if (this.editMode && this.editMode.useWithSnapping()) {\n            var mousePosition = this.input.getMousePosition();\n            if (this.snapper) {\n                this.snapper.onMouseMove(mousePosition);\n                this.snapper.indicator.render();\n            }\n        }\n    };\n\n    /**\n     * Handler to mouse move events, used to create markups.\n     * @private\n     */\n    proto.onMouseMove = function(event) {\n\n        if (this.navigating) {\n            return;\n        }\n\n        if (this.editFrame.isActive() && event.type === 'mousemove') {\n            this.editFrame.onMouseMove(event);\n        }\n\n        this.callSnapperMouseMove();\n\n        this.editMode && this.editMode.onMouseMove(event);\n    };\n\n    /**\n     * Handler to mouse down events, used to start creation markups.\n     * @private\n     */\n    proto.onMouseDown = function(event) {\n\n        dismissLmvHudMessage();\n\n        this.callSnapperMouseDown();\n\n        var bounds = this.getBounds();\n        var mousePosition = this.getMousePosition();\n\n        if (mousePosition.x >= bounds.x && mousePosition.x <= bounds.x + bounds.width &&\n            mousePosition.y >= bounds.y && mousePosition.y <= bounds.y + bounds.height) {\n            this.editMode.onMouseDown(event);\n        }\n\n        // TODO: There is a better way to do this, implement when undo/redo group.\n        if(!this.editMode.creating && event.target === this.svg) {\n            this.selectMarkup(null);\n        }\n        this.ignoreNextMouseUp = false;\n    };\n\n    proto.onMouseUp = function(event) {\n\n        if (this.navigating) {\n            return;\n        }\n\n        if (this.editFrame.isActive()) {\n            this.editFrame.onMouseUp(event);\n            return;\n        }\n\n        if(!this.ignoreNextMouseUp) {\n            this.editMode.onMouseUp(event);\n        }\n    };\n\n    proto.onMouseDoubleClick = function(event) {\n\n        if (this.navigating) {\n            return;\n        }\n\n        if (this.editFrame.isActive()) {\n            return;\n        }\n\n        this.editMode.onMouseDoubleClick(event);\n    };\n\n    proto.onUserCancel = function() {\n        if (!this.editMode) {\n            return;\n        }\n        else if (this.editMode.creating) {\n            this.editMode.creationCancel();\n        } else {\n            this.editMode.unselect();\n        }\n    };\n\n    /**\n     *\n     * @param event\n     */\n    proto.onMarkupSelected = function(event) {\n\n        this.selectMarkup(event.markup);\n        this.dispatchEvent(event);\n    };\n\n    proto.onMarkupEnterEdition = function(event) {\n\n    };\n\n    proto.onMarkupCancelEdition = function(event) {\n\n        this.onUserCancel();\n    };\n\n    proto.onMarkupDeleteEdition = function(event) {\n\n        this.removeMarkup(event.markup);\n        this.editMode.deleteMarkup();\n    };\n\n    Autodesk.Viewing.theExtensionManager.registerExtension('Autodesk.Viewing.MarkupsCore', MarkupsCore);\n","import { getStyleDefaultValues } from '../core/StyleUtils'\nimport * as MarkupEvents from '../core/MarkupEvents' \nimport * as MarkupTypes from '../core/MarkupTypes'\nimport { theEditModeManager } from '../core/EditModeManager'\n\nimport CSS from './MarkupsGui.css' // IMPORTANT!!\n\n    var CORE_EXTENSION = 'Autodesk.Viewing.MarkupsCore';\n\n    export function MarkupsGui(viewer, options) {\n        Autodesk.Viewing.Extension.call(this, viewer, options);\n        this.domEvents = [];\n        this.name = 'markup';\n        this.onEditModeEnter = this.onEditModeEnter.bind(this);\n        this.onEditModeLeave = this.onEditModeLeave.bind(this);\n        this.onEditModeChange = this.onEditModeChange.bind(this);\n        this.onMarkupSelected = this.onMarkupSelected.bind(this);\n    }\n\n    MarkupsGui.prototype = Object.create(Autodesk.Viewing.Extension.prototype);\n    MarkupsGui.prototype.constructor = MarkupsGui;\n    var proto = MarkupsGui.prototype;\n    var av = Autodesk.Viewing;\n    var avp = av.Private;\n\n    proto.load = function () {\n\n        this.viewer.loadExtension(CORE_EXTENSION).then( coreExt => {\n\n            this.core = coreExt;\n\n            // Hook into markup core events\n            this.core.addEventListener(MarkupEvents.EVENT_EDITMODE_ENTER, this.onEditModeEnter);\n            this.core.addEventListener(MarkupEvents.EVENT_EDITMODE_LEAVE, this.onEditModeLeave);\n            this.core.addEventListener(MarkupEvents.EVENT_EDITMODE_CHANGED, this.onEditModeChange);\n            this.core.addEventListener(MarkupEvents.EVENT_MARKUP_SELECTED, this.onMarkupSelected);\n        });\n\n        return true;\n    };\n\n    proto.unload = function() {\n\n        this.deactivate(); // not necessary, but leaves the viewer in an unusable state without it\n        this.unhookAllEvents();\n\n        this.core.removeEventListener(MarkupEvents.EVENT_EDITMODE_ENTER, this.onEditModeEnter);\n        this.core.removeEventListener(MarkupEvents.EVENT_EDITMODE_LEAVE, this.onEditModeLeave);\n        this.core.removeEventListener(MarkupEvents.EVENT_EDITMODE_CHANGED, this.onEditModeChange);\n        this.core.removeEventListener(MarkupEvents.EVENT_MARKUP_SELECTED, this.onMarkupSelected);\n\n        this.destroyToolUi();\n        this.destroyToolbarUI();\n        this.core = null;\n\n        return true;\n    };\n\n    proto.onToolbarCreated = function(toolbar) {\n        \n        var self = this;\n        var viewer = this.viewer;\n\n        this.markupToolButton = new Autodesk.Viewing.UI.Button(\"toolbar-markupTool\");\n        this.markupToolButton.setToolTip(\"Markup\");\n        this.markupToolButton.setIcon(\"adsk-icon-markup\");\n        this.markupToolButton.onClick = function () {\n            // Since the bar will get hidden when closed, there\n            // is no need to track button state (active or not)\n            self.activate();\n        };\n\n        var modelTools = toolbar.getControl(Autodesk.Viewing.TOOLBAR.MODELTOOLSID);\n        if (modelTools) {\n            modelTools.addControl(this.markupToolButton, {index:0});\n        }\n    };\n\n    proto.destroyToolbarUI = function() {\n        if (this.markupToolButton) {\n            var toolbar = this.viewer.getToolbar();\n            if (toolbar) {\n                this.markupToolButton.removeFromParent();\n            }\n            this.markupToolButton = null;\n        }\n    };\n\n    proto.onEditModeEnter = function() {\n        avp.logger.log('ENTER edit mode');\n        this.showToolsUi();\n    };\n\n    proto.onEditModeLeave = function() {\n        avp.logger.log('LEAVE edit mode');\n        this.hideToolsUi();\n    };\n\n    proto.onEditModeChange = function(event) {\n        if (!this.domToolSelect || this.ignoreChangeEvent)\n            return;\n        var editMode = this.core.editMode;\n        var optionList = this.domToolSelect.options;\n        for (var i=0, len=optionList.length; i<len; i++) {\n            var option = optionList[i];\n            if (option.value === editMode.type) {\n                this.domToolSelect.selectedIndex = i; // doesn't fire event\n                break;\n            }\n        }\n    };\n\n    proto.onMarkupSelected = function(event) {\n\n        var markup = event.markup;\n        var editMode = this.core.editMode;\n        this.setStylesUi(editMode, markup);\n    };\n\n    proto.showToolsUi = function() {\n        this.createToolsUi();\n\n        // Hide some UI\n        var canNavigate = this.core.isNavigationAllowed();\n        this.setControlVisibility('.lmv-markup-gui-enterNavMode', canNavigate, 'inline-block');\n        this.exitNavigationMode();\n        this.domContent.style.display = 'block'; // remove collapsed state\n\n        // It's okay if we call these many times in a row, no biggie.\n        this.viewer.container.appendChild(this.domRoot);\n    };\n\n    proto.hideToolsUi = function() {\n        if (this.domRoot && this.domRoot.parentNode) {\n            this.domRoot.parentNode.removeChild(this.domRoot);\n        }\n    };\n\n    proto.createToolsUi = function() {\n\n        if (this.domRoot)\n            return;\n\n        var optionIndex = 0;\n        function createEditModeOption(locLabel, editModeType) {\n            return [\n                '<option value=\"', editModeType, '\">',\n                    locLabel,\n                '</option>'\n            ].join('');\n        }\n\n        var html = [\n            '<div class=\"lmv-markup-gui-toolbar-content\">',\n\n                '<button class=\"lmv-markup-gui-collapse-btn\">&lt;-&gt;</button>',\n                '<button class=\"lmv-markup-editmode-done\">Exit</button>',\n                '<div class=\"lmv-markup-gui-collapse-content\">',\n                    '<div class=\"lmv-markup-gui-editMode\">',\n                        '<button class=\"lmv-markup-gui-enterNavMode\">Navigate</button>',\n                        '<button class=\"lmv-markup-gui-undo\">&#8617;</button>',\n                        '<button class=\"lmv-markup-gui-redo\">&#8618;</button>',\n                        '<br>',\n                        '<button class=\"lmv-markup-gui-delete\">Delete</button>',\n                        '<button class=\"lmv-markup-gui-duplicate\">Duplicate</button>',\n                        '<br>',\n                        '<button class=\"lmv-markup-gui-cut\">Cut</button>',\n                        '<button class=\"lmv-markup-gui-copy\">Copy</button>',\n                        '<button class=\"lmv-markup-gui-paste\">Paste</button>',\n                        '<br>',\n                        '<span>Markup:</span>', // TODO: Localize\n                        '<select class=\"lmv-markup-tool-select\">',\n                            createEditModeOption('Arrow', MarkupTypes.MARKUP_TYPE_ARROW),\n                            createEditModeOption('Rectangle', MarkupTypes.MARKUP_TYPE_RECTANGLE),\n                            createEditModeOption('Circle', MarkupTypes.MARKUP_TYPE_CIRCLE),\n                            createEditModeOption('Text', MarkupTypes.MARKUP_TYPE_TEXT),\n                            createEditModeOption('Callout', MarkupTypes.MARKUP_TYPE_CALLOUT),\n                            createEditModeOption('Cloud', MarkupTypes.MARKUP_TYPE_CLOUD),\n                            createEditModeOption('PolyLine', MarkupTypes.MARKUP_TYPE_POLYLINE),\n                            createEditModeOption('Polycloud', MarkupTypes.MARKUP_TYPE_POLYCLOUD),\n                            createEditModeOption('Freehand', MarkupTypes.MARKUP_TYPE_FREEHAND),\n                            createEditModeOption('Highlight', MarkupTypes.MARKUP_TYPE_HIGHLIGHT),\n                            createEditModeOption('Dimension', MarkupTypes.MARKUP_TYPE_DIMENSION),\n                        '</select>',\n                        '<br>',\n                        '<div class=\"lmv-markup-gui-style-options\"></div>',\n                    '</div>',\n                    '<div class=\"lmv-markup-gui-navMode\" style=\"display:none;\">',\n                        '<button class=\"lmv-markup-gui-exitNavMode\">Back to Markup</button>',\n                    '</div>',\n                '</div>',\n            '</div>'\n        ].join('');\n\n        const _document = this.getDocument();\n        this.domRoot = _document.createElement('div');\n        this.domRoot.className = 'lmv-markup-gui-toolbar';\n        this.domRoot.innerHTML = html;\n\n        this.domContent = this.domRoot.querySelector('.lmv-markup-gui-collapse-content');\n        this.domToolSelect = this.domRoot.querySelector('.lmv-markup-tool-select');\n        this.domStylesRoot = this.domRoot.querySelector('.lmv-markup-gui-style-options');\n\n        // General\n        this.hookEvent('click', '.lmv-markup-gui-collapse-btn', this.onToggleCollapse.bind(this));\n        this.hookEvent('click', '.lmv-markup-editmode-done', this.onEditModeDone.bind(this));\n        this.hookEvent('click', '.lmv-markup-gui-enterNavMode', this.enterNavigationMode.bind(this));\n        this.hookEvent('click', '.lmv-markup-gui-exitNavMode', this.exitNavigationMode.bind(this));\n        this.hookEvent('click', '.lmv-markup-gui-undo', this.onUndoClick.bind(this));\n        this.hookEvent('click', '.lmv-markup-gui-redo', this.onRedoClick.bind(this));\n        this.hookEvent('click', '.lmv-markup-gui-delete', this.onDeleteClick.bind(this));\n        this.hookEvent('click', '.lmv-markup-gui-cut', this.onCutClick.bind(this));\n        this.hookEvent('click', '.lmv-markup-gui-copy', this.onCopyClick.bind(this));\n        this.hookEvent('click', '.lmv-markup-gui-paste', this.onPasteClick.bind(this));\n        this.hookEvent('click', '.lmv-markup-gui-duplicate', this.onDuplicateClick.bind(this));\n        // Tools\n        this.hookEvent('change', '.lmv-markup-tool-select', this.onSelectEditMode.bind(this));\n        this.hookEvent('change', '.lmv-markup-gui-style-select', this.onStyleChange.bind(this));\n\n        this.setStylesUi(this.core.editMode);\n    };\n\n    proto.destroyToolUi = function() {\n        if (this.domRoot) {\n            this.hideToolsUi();\n            this.domRoot = null;\n        }\n    };\n\n    proto.getEditMode = function(editModeType) {\n        var EditModeClass = theEditModeManager.getClass(editModeType);\n        if (!EditModeClass)\n            return null;\n\n        var editMode = new EditModeClass(this.core);\n        return editMode;\n    };\n\n    proto.onToggleCollapse = function() {\n        var curr = this.domContent.style.display;\n        if (curr === 'none')\n            this.domContent.style.display = 'block';\n        else\n            this.domContent.style.display = 'none';\n    };\n\n    proto.onEditModeDone = function() {\n        this.deactivate();\n    };\n\n    proto.enterNavigationMode = function() {\n        this.core.allowNavigation(true);\n        this.setControlVisibility('.lmv-markup-gui-editMode', false);\n        this.setControlVisibility('.lmv-markup-gui-navMode', true);\n    };\n    proto.exitNavigationMode = function() {\n        this.core.allowNavigation(false);\n        this.setControlVisibility('.lmv-markup-gui-editMode', true);\n        this.setControlVisibility('.lmv-markup-gui-navMode', false);\n    };\n\n    proto.onUndoClick = function() {\n        this.core.undo();\n    };\n    proto.onRedoClick = function() {\n        this.core.redo();\n    };\n    proto.onDeleteClick = function() {\n        var markup = this.core.getSelection();\n        if (markup) {\n            this.core.deleteMarkup(markup);\n        }\n    };\n    proto.onCutClick = function() {\n        this.core.cut();\n    };\n    proto.onCopyClick = function() {\n        this.core.copy();\n    };\n    proto.onPasteClick = function() {\n        this.core.paste();\n    };\n    proto.onDuplicateClick = function() {\n        // only when there's a selection\n        var markup = this.core.getSelection();\n        if (markup) {\n            this.core.copy();\n            this.core.paste();\n        }\n    };\n\n    proto.onSelectEditMode = function(event) {\n        var editModeType = event.target.value;\n        var editMode = this.getEditMode(editModeType);\n        if (!editMode) {\n            avp.logger.error('Markup editMode not found for type: ' + editModeType);\n            return;\n        }\n\n        if (editMode.cancelEditModeChange) {\n            avp.logger.warn('There was a problem selecting current editMode');\n            return;\n        }\n\n        this.ignoreChangeEvent = true;\n        this.core.changeEditMode(editMode);\n        this.ignoreChangeEvent = false;\n        this.setStylesUi(editMode);\n        this.domToolSelect.blur(); // remove focus from UI\n    };\n\n    proto.onStyleChange = function(event) {\n        var select = event.target;\n        var option = select.options[select.selectedIndex];\n        var styleKey = select.getAttribute('style-key');\n        var valueType = select.getAttribute('value-type');\n        select.blur(); // remove focus from UI\n\n        var markup = this.core.getSelection();\n        var style = markup ? markup.getStyle() : this.core.getStyle();\n        style[styleKey] = getTypedValue(option.value, valueType);\n        this.core.setStyle(style);\n\n        function getTypedValue(val, type) {\n            if (type === 'number')\n                return Number(val);\n            if (type === 'boolean')\n                return val === 'true';\n            return val;\n        }\n    };\n\n    proto.setStylesUi = function(editMode, markup) {\n        avp.logger.log('set ui for ' + editMode.type);\n\n        var style = markup ? markup.style : editMode.style;\n        var defaults = getStyleDefaultValues(style, this.core);\n\n        this.domStylesRoot.innerHTML = ''; // flush UI\n        for (var key in defaults) {\n            // Quite inefiient because we are re-creating DOM constantly\n            // Consider optimize if it becomes a problem\n            var domElem = this.getUiForStyleKey(key, defaults[key], style[key]);\n            this.domStylesRoot.appendChild(domElem);\n        }\n    };\n\n    proto.getUiForStyleKey = function(key, defaults, current) {\n\n        var selectionIndex = defaults.default;\n        var options = [];\n        var values = defaults.values;\n        for (var i=0, len=values.length; i<len; ++i) {\n            var optLine = [\n                '<option value=\"', values[i].value,'\">',\n                    values[i].name,\n                '</option>'\n            ].join('');\n            options.push(optLine);\n\n            if (this.valueEquals(values[i].value, current)) {\n                selectionIndex = i;\n            }\n        }\n\n        var valueType = typeof values[0].value;\n\n        // TODO: Build specialized controls for each style-attribute\n        const _document = this.getDocument();\n        var domElem = _document.createElement('div');\n        var html = [\n            '<span>',key,'</span>',\n            '<select class=\"lmv-markup-gui-style-select\" style-key=\"', key, '\" value-type=\"', valueType,'\">',\n                options.join(''),\n            '</select>'\n        ].join('');\n        domElem.innerHTML = html;\n\n        // select index\n        var domSelect = domElem.querySelector('select');\n        domSelect.selectedIndex = selectionIndex;\n\n        return domElem;\n    };\n    proto.valueEquals = function(value1, value2) {\n\n        return value1 === value2;\n    }\n\n    proto.setControlVisibility = function(selector, isVisible, visibleValue) {\n        var elem = this.domRoot.querySelector(selector);\n        if (!visibleValue)\n            visibleValue = 'block';\n        elem.style.display = isVisible ? visibleValue : 'none';\n    };\n\n    proto.hookEvent = function(eventStr, selector, callbackFn) {\n        var handler = function(event){\n            if (this.matchesSelector(event.target, selector)){\n                callbackFn(event);\n            }\n        }.bind(this);\n        this.domRoot.addEventListener(eventStr, handler);\n        this.domEvents.push({str: eventStr, handler: handler });\n    };\n\n    proto.unhookAllEvents = function() {\n        var domRoot = this.domRoot;\n        this.domEvents.forEach(function(event) {\n            domRoot.removeEventListener(event.str, event.handler);\n        });\n        this.domEvents = [];\n    };\n\n    proto.matchesSelector = function(domElem, selector) {\n        if (domElem.matches) return domElem.matches(selector); //Un-prefixed\n        if (domElem.msMatchesSelector) return domElem.msMatchesSelector(selector);  //IE\n        if (domElem.mozMatchesSelector) return domElem.mozMatchesSelector(selector); //Firefox (Gecko)\n        if (domElem.webkitMatchesSelector) return domElem.webkitMatchesSelector(selector); // Opera, Safari, Chrome\n        return false;\n    };\n\n    proto.getStyleOptions = function(editMode) {\n        var style = editMode.getStyle();\n        return getStyleDefaultValues(style, this.core);\n    };\n\n    proto.activate = function () {\n        if(!this.activeStatus) {\n            this.core.enterEditMode();\n            this.activeStatus = true;\n        }\n        return true;\n    };\n\n    proto.deactivate = function () {\n        if(this.activeStatus) {\n            this.core.hide();\n            this.activeStatus = false;\n        }\n        return true;\n    };\n\n\n    Autodesk.Viewing.theExtensionManager.registerExtension('Autodesk.Viewing.MarkupsGui', MarkupsGui);\n","'use strict';\n\nimport { MarkupsCore } from './core/MarkupsCore'\nimport { MarkupsGui } from './gui/MarkupsGui'\n\nimport { Clipboard } from './core/edit-clipboard/Clipboard'\nimport { CloneMarkup } from './core/edit-actions/CloneMarkup'\nimport { CreateArrow } from './core/edit-actions/CreateArrow'\nimport { CreateCallout } from './core/edit-actions/CreateCallout'\nimport { CreateCircle } from './core/edit-actions/CreateCircle'\nimport { CreateCloud } from './core/edit-actions/CreateCloud'\nimport { CreateDimension } from './core/edit-actions/CreateDimension'\nimport { CreateFreehand } from './core/edit-actions/CreateFreehand'\nimport { CreateHighlight } from './core/edit-actions/CreateHighlight'\nimport { CreatePolycloud } from './core/edit-actions/CreatePolycloud'\nimport { CreatePolyline } from './core/edit-actions/CreatePolyline'\nimport { CreateRectangle } from './core/edit-actions/CreateRectangle'\nimport { CreateText } from './core/edit-actions/CreateText'\nimport { DeleteArrow } from './core/edit-actions/DeleteArrow'\nimport { DeleteCallout } from './core/edit-actions/DeleteCallout'\nimport { DeleteCircle } from './core/edit-actions/DeleteCircle'\nimport { DeleteCloud } from './core/edit-actions/DeleteCloud'\nimport { DeleteDimension } from './core/edit-actions/DeleteDimension'\nimport { DeleteFreehand } from './core/edit-actions/DeleteFreehand'\nimport { DeleteHighlight } from './core/edit-actions/DeleteHighlight'\nimport { DeletePolycloud } from './core/edit-actions/DeletePolycloud'\nimport { DeletePolyline } from './core/edit-actions/DeletePolyline'\nimport { DeleteRectangle } from './core/edit-actions/DeleteRectangle'\nimport { DeleteText } from './core/edit-actions/DeleteText'\n\nimport { EditAction } from './core/edit-actions/EditAction' \nimport { EditActionGroup } from './core/edit-actions/EditActionGroup' \nimport { EditActionManager } from './core/edit-actions/EditActionManager' \nimport { EditFrame } from './core/EditFrame' \n\nimport { EditMode } from './core/edit-modes/EditMode'\nimport { EditModeArrow } from './core/edit-modes/EditModeArrow'\nimport { EditModeCallout } from './core/edit-modes/EditModeCallout'\nimport { EditModeCircle } from './core/edit-modes/EditModeCircle'\nimport { EditModeCloud } from './core/edit-modes/EditModeCloud'\nimport { EditModeDimension } from './core/edit-modes/EditModeDimension'\nimport { EditModeFreehand } from './core/edit-modes/EditModeFreehand'\nimport { EditModeHighlight } from './core/edit-modes/EditModeHighlight'\nimport { EditModePen } from './core/edit-modes/EditModePen'\nimport { EditModePolycloud } from './core/edit-modes/EditModePolycloud'\nimport { EditModePolyline } from './core/edit-modes/EditModePolyline'\nimport { EditModeRectangle } from './core/edit-modes/EditModeRectangle'\nimport { EditModeText } from './core/edit-modes/EditModeText'\nimport { EditorTextInput } from './core/edit-modes/EditorTextInput'\n\n\nimport { Markup } from './core/Markup'\nimport { MarkupArrow } from './core/MarkupArrow'\nimport { MarkupCallout } from './core/MarkupCallout'\nimport { MarkupCircle } from './core/MarkupCircle'\nimport { MarkupCloud } from './core/MarkupCloud'\nimport { MarkupDimension } from './core/MarkupDimension'\nimport { MarkupFreehand } from './core/MarkupFreehand'\nimport { MarkupHighlight } from './core/MarkupHighlight'\nimport { MarkupPen } from './core/MarkupPen'\nimport { MarkupPolycloud } from './core/MarkupPolycloud'\nimport { MarkupPolyline } from './core/MarkupPolyLine'\nimport { MarkupRectangle } from './core/MarkupRectangle'\nimport { MarkupText } from './core/MarkupText'\nimport { MarkupTool } from './core/MarkupTool'\n\nimport { SetArrow } from './core/edit-actions/SetArrow'\nimport { SetCallout } from './core/edit-actions/SetCallout'\nimport { SetCircle } from './core/edit-actions/SetCircle'\nimport { SetCloud } from './core/edit-actions/SetCloud'\nimport { SetDimension } from './core/edit-actions/SetDimension'\nimport { SetFreehand } from './core/edit-actions/SetFreehand'\nimport { SetHighlight } from './core/edit-actions/SetHighlight'\nimport { SetPolycloud } from './core/edit-actions/SetPolycloud'\nimport { SetPolyline } from './core/edit-actions/SetPolyline'\nimport { SetPosition } from './core/edit-actions/SetPosition'\nimport { SetRectangle } from './core/edit-actions/SetRectangle'\nimport { SetRotation } from './core/edit-actions/SetRotation'\nimport { SetSize } from './core/edit-actions/SetSize'\nimport { SetStyle } from './core/edit-actions/SetStyle'\nimport { SetText } from './core/edit-actions/SetText'\n\n\nimport * as MarkupEvents from './core/MarkupEvents'\nimport * as MarkupTypes from './core/MarkupTypes'\n\nimport * as Utils from './core/MarkupsCoreUtils'\nimport * as StyleUtils from './core/StyleUtils'\n\nimport { theEditModeManager } from './core/EditModeManager'\n\n// All the things\nexport const Core = {\n    Clipboard,\n    CloneMarkup,\n    CreateArrow,\n    CreateCallout,\n    CreateCircle,\n    CreateCloud,\n    CreateDimension,\n    CreateFreehand,\n    CreateHighlight,\n    CreatePolycloud,\n    CreatePolyline,\n    CreateRectangle,\n    CreateText,\n    DeleteArrow,\n    DeleteCallout,\n    DeleteCircle,\n    DeleteCloud,\n    DeleteDimension,\n    DeleteFreehand,\n    DeleteHighlight,\n    DeletePolycloud,\n    DeletePolyline,\n    DeleteRectangle,\n    DeleteText,\n\n    EditAction,\n    EditActionGroup,\n    EditActionManager,\n    EditFrame,\n\n    EditMode,\n    EditModeArrow,\n    EditModeCallout,\n    EditModeCircle,\n    EditModeCloud,\n    EditModeDimension,\n    EditModeFreehand,\n    EditModeHighlight,\n    EditModePen,\n    EditModePolycloud,\n    EditModePolyline,\n    EditModeRectangle,\n    EditModeText,\n    EditorTextInput,\n\n    Markup,\n    MarkupArrow,\n    MarkupCallout,\n    MarkupCircle,\n    MarkupCloud,\n    MarkupDimension,\n    MarkupFreehand,\n    MarkupHighlight,\n    MarkupPen,\n    MarkupPolycloud,\n    MarkupPolyline,\n    MarkupRectangle,\n    MarkupText,\n    MarkupTool,\n    \n    MarkupsCore,\n\n    SetArrow,\n    SetCallout,\n    SetCircle,\n    SetCloud,\n    SetDimension,\n    SetFreehand,\n    SetHighlight,\n    SetPolycloud,\n    SetPolyline,\n    SetPosition,\n    SetRectangle,\n    SetRotation,\n    SetSize,\n    SetStyle,\n    SetText,\n\n\n    MarkupEvents,\n    MarkupTypes,\n    theEditModeManager,\n    Utils,\n};\n\n// Spread the markup types to minimize breaking changes (sigh)\nfor (var markupType in MarkupTypes) {\n    Core[markupType] = MarkupTypes[markupType];\n}\n\n// Spread the event ids to minimize breaking changes (sigh)\nfor (var eventType in MarkupEvents) {\n    Core[eventType] = MarkupEvents[eventType];\n}\n\n// Merge StyleUtils with utils (because those methods used to live in Utils)\nfor (var thing in StyleUtils) {\n    if (thing in Core.Utils)\n        throw new Error(`Property ${thing} from StyleUtils already present in MarkupsCoreUtils.`);\n\n    Core.Utils[thing] = StyleUtils[thing];\n}\n\n\nexport const Gui = {\n    MarkupsGui\n}\n\n\n// Also map back to legacy namespace\nAutodesk.Viewing.Extensions.Markups = {\n    Core\n};\n"],"sourceRoot":""}